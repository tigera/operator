apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  name: managementclusters.operator.tigera.io
spec:
  group: operator.tigera.io
  names:
    kind: ManagementCluster
    listKind: ManagementClusterList
    plural: managementclusters
    singular: managementcluster
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: The presence of ManagementCluster in your cluster, will configure
          it to be the management plane to which managed clusters can connect. At
          most one instance of this resource is supported. It must be named "tigera-secure".
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ManagementClusterSpec defines the desired state of a ManagementCluster
            properties:
              address:
                description: 'This field specifies the externally reachable address
                  to which your managed cluster will connect. When a managed cluster
                  is added, this field is used to populate an easy-to-apply manifest
                  that will connect both clusters. Valid examples are: "0.0.0.0:31000",
                  "example.com:32000", "[::1]:32500"'
                type: string
              tls:
                description: TLS provides options for configuring how Managed Clusters
                  can establish an mTLS connection with the Management Cluster.
                properties:
                  secretName:
                    description: "SecretName indicates the name of the secret in the
                      tigera-operator namespace that contains the private key and
                      certificate that the management cluster uses when it listens
                      for incoming connections. \n When set to tigera-management-cluster-connection
                      voltron will use the same cert bundle which Guardian client
                      certs are signed with. \n When set to manager-tls, voltron will
                      use the same cert bundle which Manager UI is served with. This
                      cert bundle must be a publicly signed cert created by the user.
                      Note that Tigera Operator will generate a self-signed manager-tls
                      cert if one does not exist, and use of that cert will result
                      in Guardian being unable to verify Voltron's identity. \n If
                      changed on a running cluster with connected managed clusters,
                      all managed clusters will disconnect as they will no longer
                      be able to verify Voltron's identity. To reconnect existing
                      managed clusters, change the tls.ca of the  managed clusters'
                      ManagementClusterConnection resource. \n One of: tigera-management-cluster-connection,
                      manager-tls \n Default: tigera-management-cluster-connection"
                    enum:
                    - tigera-management-cluster-connection
                    - manager-tls
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
