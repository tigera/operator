apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  name: managers.operator.tigera.io
spec:
  group: operator.tigera.io
  names:
    kind: Manager
    listKind: ManagerList
    plural: managers
    singular: manager
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Manager installs the Calico Enterprise manager graphical user
          interface. At most one instance of this resource is supported. It must be
          named "tigera-secure".
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired state for the Calico Enterprise
              manager.
            properties:
              auth:
                description: Deprecated. Please use the Authentication CR for configuring
                  authentication.
                properties:
                  authority:
                    description: Authority configures the OAuth2/OIDC authority/issuer
                      when using OAuth2 or OIDC login.
                    type: string
                  clientID:
                    description: ClientId configures the OAuth2/OIDC client ID to
                      use for OAuth2 or OIDC login.
                    type: string
                  type:
                    description: 'Type configures the type of authentication used
                      by the manager. Default: Token'
                    enum:
                    - Token
                    - Basic
                    - OIDC
                    - OAuth
                    type: string
                type: object
              managerDeployment:
                description: ManagerDeployment configures the Manager Deployment.
                properties:
                  spec:
                    description: Spec is the specification of the Manager Deployment.
                    properties:
                      template:
                        description: Template describes the Manager Deployment pod
                          that will be created.
                        properties:
                          spec:
                            description: Spec is the Manager Deployment's PodSpec.
                            properties:
                              containers:
                                description: Containers is a list of Manager containers.
                                  If specified, this overrides the specified Manager
                                  Deployment containers. If omitted, the Manager Deployment
                                  will use its default values for its containers.
                                items:
                                  description: ManagerDeploymentContainer is a Manager
                                    Deployment container.
                                  properties:
                                    name:
                                      description: Name is an enum which identifies
                                        the Manager Deployment container by name.
                                      enum:
                                      - tigera-voltron
                                      - tigera-manager
                                      - tigera-es-proxy
                                      type: string
                                    resources:
                                      description: Resources allows customization
                                        of limits and requests for compute resources
                                        such as cpu and memory. If specified, this
                                        overrides the named Manager Deployment container's
                                        resources. If omitted, the Manager Deployment
                                        will use its default value for this container's
                                        resources.
                                      properties:
                                        claims:
                                          description: "Claims lists the names of
                                            resources, defined in spec.resourceClaims,
                                            that are used by this container. \n This
                                            is an alpha field and requires enabling
                                            the DynamicResourceAllocation feature
                                            gate. \n This field is immutable. It can
                                            only be set for containers."
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: Name must match the name
                                                  of one entry in pod.spec.resourceClaims
                                                  of the Pod where this field is used.
                                                  It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              initContainers:
                                description: InitContainers is a list of Manager init
                                  containers. If specified, this overrides the specified
                                  Manager Deployment init containers. If omitted,
                                  the Manager Deployment will use its default values
                                  for its init containers.
                                items:
                                  description: ManagerDeploymentInitContainer is a
                                    Manager Deployment init container.
                                  properties:
                                    name:
                                      description: Name is an enum which identifies
                                        the Manager Deployment init container by name.
                                      enum:
                                      - manager-tls-key-cert-provisioner
                                      - internal-manager-tls-key-cert-provisioner
                                      - tigera-voltron-linseed-tls-key-cert-provisioner
                                      type: string
                                    resources:
                                      description: Resources allows customization
                                        of limits and requests for compute resources
                                        such as cpu and memory. If specified, this
                                        overrides the named Manager Deployment init
                                        container's resources. If omitted, the Manager
                                        Deployment will use its default value for
                                        this init container's resources. If used in
                                        conjunction with the deprecated ComponentResources,
                                        then this value takes precedence.
                                      properties:
                                        claims:
                                          description: "Claims lists the names of
                                            resources, defined in spec.resourceClaims,
                                            that are used by this container. \n This
                                            is an alpha field and requires enabling
                                            the DynamicResourceAllocation feature
                                            gate. \n This field is immutable. It can
                                            only be set for containers."
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: Name must match the name
                                                  of one entry in pod.spec.resourceClaims
                                                  of the Pod where this field is used.
                                                  It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                            type: object
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: Most recently observed state for the Calico Enterprise manager.
            properties:
              auth:
                description: Deprecated. Please use the Authentication CR for configuring
                  authentication.
                properties:
                  authority:
                    description: Authority configures the OAuth2/OIDC authority/issuer
                      when using OAuth2 or OIDC login.
                    type: string
                  clientID:
                    description: ClientId configures the OAuth2/OIDC client ID to
                      use for OAuth2 or OIDC login.
                    type: string
                  type:
                    description: 'Type configures the type of authentication used
                      by the manager. Default: Token'
                    enum:
                    - Token
                    - Basic
                    - OIDC
                    - OAuth
                    type: string
                type: object
              conditions:
                description: Conditions represents the latest observed set of conditions
                  for the component. A component may be one or more of Ready, Progressing,
                  Degraded or other customer types.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                description: State provides user-readable status.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
