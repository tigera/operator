apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  name: monitors.operator.tigera.io
spec:
  group: operator.tigera.io
  names:
    kind: Monitor
    listKind: MonitorList
    plural: monitors
    singular: monitor
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Monitor is the Schema for the monitor API. At most one instance
          of this resource is supported. It must be named "tigera-secure".
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MonitorSpec defines the desired state of Tigera monitor.
            properties:
              externalPrometheusConfiguration:
                description: ExternalPrometheusConfiguration if not nil, the operator
                  will create a ServiceMonitor and/or other resources in the namespace
                  for your convenience. For example, this makes it possible to configure
                  scraping from git-ops tools, without needing extra tools.
                properties:
                  namespace:
                    description: 'Namespace is the namespace where the operator will
                      create resources for your Prometheus instance. Default: default'
                    type: string
                  serviceMonitor:
                    description: 'ServiceMonitor if not nil, the operator will create
                      a ServiceMonitor object in the namespace. It is important that
                      you configure labels if you want your prometheus instance to
                      pick up the configuration automatically. The operator will configure
                      1 endpoint by default: - Params to scrape all metrics available
                      in Calico Enterprise. - BearerTokenSecret (If not overridden,
                      the operator will also create corresponding RBAC that allows
                      authz to the metrics.) - TLSConfig, containing the caFile and
                      serverName.'
                    properties:
                      endpoints:
                        description: The endpoints to scrape. This struct contains
                          a subset of the Endpoint as defined in the prometheus docs.
                          Fields related to connecting to our Prometheus server are
                          automatically set by the operator.
                        items:
                          description: Endpoint contains a subset of relevant fields
                            from the Prometheus Endpoint struct.
                          properties:
                            bearerTokenSecret:
                              description: 'Secret to mount to read bearer token for
                                scraping targets. Recommended: when unset, the operator
                                will create a Secret, a ClusterRole and a ClusterRoleBinding.'
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            honorLabels:
                              description: HonorLabels chooses the metric's labels
                                on collisions with target labels.
                              type: boolean
                            honorTimestamps:
                              description: HonorTimestamps controls whether Prometheus
                                respects the timestamps present in scraped data.
                              type: boolean
                            interval:
                              description: Interval at which metrics should be scraped.
                                If not specified Prometheus' global scrape interval
                                is used.
                              pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                              type: string
                            metricRelabelings:
                              description: MetricRelabelConfigs to apply to samples
                                before ingestion.
                              items:
                                description: 'RelabelConfig allows dynamic rewriting
                                  of the label set, being applied to samples before
                                  ingestion. It defines `<metric_relabel_configs>`-section
                                  of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                                properties:
                                  action:
                                    default: replace
                                    description: Action to perform based on regex
                                      matching. Default is 'replace'. uppercase and
                                      lowercase actions require Prometheus >= 2.36.
                                    enum:
                                    - replace
                                    - Replace
                                    - keep
                                    - Keep
                                    - drop
                                    - Drop
                                    - hashmod
                                    - HashMod
                                    - labelmap
                                    - LabelMap
                                    - labeldrop
                                    - LabelDrop
                                    - labelkeep
                                    - LabelKeep
                                    - lowercase
                                    - Lowercase
                                    - uppercase
                                    - Uppercase
                                    type: string
                                  modulus:
                                    description: Modulus to take of the hash of the
                                      source label values.
                                    format: int64
                                    type: integer
                                  regex:
                                    description: Regular expression against which
                                      the extracted value is matched. Default is '(.*)'
                                    type: string
                                  replacement:
                                    description: Replacement value against which a
                                      regex replace is performed if the regular expression
                                      matches. Regex capture groups are available.
                                      Default is '$1'
                                    type: string
                                  separator:
                                    description: Separator placed between concatenated
                                      source label values. default is ';'.
                                    type: string
                                  sourceLabels:
                                    description: The source labels select values from
                                      existing labels. Their content is concatenated
                                      using the configured separator and matched against
                                      the configured regular expression for the replace,
                                      keep, and drop actions.
                                    items:
                                      description: LabelName is a valid Prometheus
                                        label name which may only contain ASCII letters,
                                        numbers, as well as underscores.
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                      type: string
                                    type: array
                                  targetLabel:
                                    description: Label to which the resulting value
                                      is written in a replace action. It is mandatory
                                      for replace actions. Regex capture groups are
                                      available.
                                    type: string
                                type: object
                              type: array
                            params:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: 'Optional HTTP URL parameters Default:
                                scrape all metrics.'
                              type: object
                            relabelings:
                              description: 'RelabelConfigs to apply to samples before
                                scraping. Prometheus Operator automatically adds relabelings
                                for a few standard Kubernetes fields. The original
                                scrape job''s name is available via the `__tmp_prometheus_job_name`
                                label. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                              items:
                                description: 'RelabelConfig allows dynamic rewriting
                                  of the label set, being applied to samples before
                                  ingestion. It defines `<metric_relabel_configs>`-section
                                  of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                                properties:
                                  action:
                                    default: replace
                                    description: Action to perform based on regex
                                      matching. Default is 'replace'. uppercase and
                                      lowercase actions require Prometheus >= 2.36.
                                    enum:
                                    - replace
                                    - Replace
                                    - keep
                                    - Keep
                                    - drop
                                    - Drop
                                    - hashmod
                                    - HashMod
                                    - labelmap
                                    - LabelMap
                                    - labeldrop
                                    - LabelDrop
                                    - labelkeep
                                    - LabelKeep
                                    - lowercase
                                    - Lowercase
                                    - uppercase
                                    - Uppercase
                                    type: string
                                  modulus:
                                    description: Modulus to take of the hash of the
                                      source label values.
                                    format: int64
                                    type: integer
                                  regex:
                                    description: Regular expression against which
                                      the extracted value is matched. Default is '(.*)'
                                    type: string
                                  replacement:
                                    description: Replacement value against which a
                                      regex replace is performed if the regular expression
                                      matches. Regex capture groups are available.
                                      Default is '$1'
                                    type: string
                                  separator:
                                    description: Separator placed between concatenated
                                      source label values. default is ';'.
                                    type: string
                                  sourceLabels:
                                    description: The source labels select values from
                                      existing labels. Their content is concatenated
                                      using the configured separator and matched against
                                      the configured regular expression for the replace,
                                      keep, and drop actions.
                                    items:
                                      description: LabelName is a valid Prometheus
                                        label name which may only contain ASCII letters,
                                        numbers, as well as underscores.
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                      type: string
                                    type: array
                                  targetLabel:
                                    description: Label to which the resulting value
                                      is written in a replace action. It is mandatory
                                      for replace actions. Regex capture groups are
                                      available.
                                    type: string
                                type: object
                              type: array
                            scrapeTimeout:
                              description: Timeout after which the scrape is ended.
                                If not specified, the Prometheus global scrape timeout
                                is used unless it is less than `Interval` in which
                                the latter is used.
                              pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                              type: string
                          type: object
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Labels are the labels of your prometheus instance.
                          When combined with spec.serviceMonitorSelector.matchLabels
                          on your prometheus instance, the service monitor will automatically
                          be picked up. Default: k8s-app=tigera-prometheus'
                        type: object
                    type: object
                required:
                - namespace
                type: object
            type: object
          status:
            description: MonitorStatus defines the observed state of Tigera monitor.
            properties:
              conditions:
                description: Conditions represents the latest observed set of conditions
                  for the component. A component may be one or more of Ready, Progressing,
                  Degraded or other customer types.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                description: State provides user-readable status.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
