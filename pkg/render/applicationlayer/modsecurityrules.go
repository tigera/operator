// THIS IS A GENERATED FILE, PLEASE DO NOT EDIT.
package applicationlayer

var ModsecurityCoreRuleSet = map[string]string{
	"REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example": "",
	"REQUEST-901-INITIALIZATION.conf": "",
	"REQUEST-903.9001-DRUPAL-EXCLUSION-RULES.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojIFRoZXNlIGV4Y2x1c2lvbnMgcmVtZWR5IGZhbHNlIHBvc2l0aXZlcyBpbiBhIGRlZmF1bHQgRHJ1cGFsIGluc3RhbGwuCiMgVGhlIGV4Y2x1c2lvbnMgYXJlIG9ubHkgYWN0aXZlIGlmIGNyc19leGNsdXNpb25zX2RydXBhbD0xIGlzIHNldC4KIyBTZWUgcnVsZSA5MDAxMzAgaW4gY3JzLXNldHVwLmNvbmYuZXhhbXBsZSBmb3IgaW5zdHJ1Y3Rpb25zLgoKIwojIFsgUE9MSUNZIF0KIwojIERydXBhbCBpcyBhIGNvbXBsZXggYXBwbGljYXRpb24gdGhhdCBpcyBoYXJkIHRvIHNlY3VyZSB3aXRoIHRoZSBDUlMuIFRoaXMgc2V0CiMgb2YgZXhjbHVzaW9uIHJ1bGVzIGFpbXMgdG8gc2FuaXRpc2UgdGhlIENSUyBpbiBhIHdheSB0aGF0IGFsbG93cyBhIGRlZmF1bHQKIyBEcnVwYWwgc2V0dXAgdG8gYmUgaW5zdGFsbGVkIGFuZCBjb25maWd1cmVkIHdpdGhvdXQgbXVjaCBoYXNzbGUgYXMgZmFyIGFzCiMgTW9kU2VjdXJpdHkgYW5kIHRoZSBDUlMgYXJlIGNvbmNlcm5lZC4KIwojIFRoZSBleGNsdXNpb24gcnVsZXMgYXJlIGZhaXJseSBzdHJhaWdodCBmb3J3YXJkIGluIHRoZSBzZW5zZSB0aGF0IHRoZXkKIyBkaXNhYmxlIENSUyBvbiBhIHNldCBvZiB3ZWxsLWtub3duIHBhcmFtZXRlciBmaWVsZHMgdGhhdCBhcmUgb2Z0ZW4gdGhlIHNvdXJjZQojIG9mIGZhbHNlIHBvc2l0aXZlcyAvIGZhbHNlIGFsYXJtcyBvZiB0aGUgQ1JTLiBUaGlzIGluY2x1ZGVzIG5hbWVseSB0aGUKIyBzZXNzaW9uIGNvb2tpZSwgdGhlIHBhc3N3b3JkIGZpZWxkcyBhbmQgYXJ0aWNsZS9ub2RlIGJvZGllcy4KIwojIFRoaXMgaXMgYmFzZWQgb24gdHdvIGFzc3VtcHRpb25zOiAtIFlvdSBoYXZlIGEgYmFzaWMgdHJ1c3QgaW4geW91cgojIGF1dGhlbnRpY2F0ZWQgdXNlcnMgd2hvIGFyZSBhbGxvd2VkIHRvIGVkaXQgbm9kZXMuICAtIERydXBhbCBhbGxvd3MgaHRtbAojIGNvbnRlbnQgaW4gbm9kZXMgYW5kIGl0IHByb3RlY3RzIHlvdXIgdXNlcnMgZnJvbSBhdHRhY2tzIHZpYSB0aGVzZSBmaWVsZHMuCiMKIyBJZiB5b3UgdGhpbmsgdGhlc2UgYXNzdW1wdGlvbnMgYXJlIHdyb25nIG9yIGlmIHlvdSB3b3VsZCBwcmVmZXIgYSBtb3JlCiMgY2FyZWZ1bC9zZWN1cmUgYXBwcm9hY2gsIHlvdSBjYW4gZGlzYWJsZSB0aGUgZXhjbHVzaW9uIHJ1bGVzIGhhbmRsaW5nIG9mIHNhaWQKIyBub2RlIGJvZHkgZmFsc2UgcG9zaXRpdmVzLiBEbyB0aGlzIGJ5IHBsYWNpbmcgdGhlIGZvbGxvd2luZyBkaXJlY3RpdmUgaW4KIyBSRVNQT05TRS05OTktRVhDTFVTSU9OLVJVTEVTLUFGVEVSLUNSUy5jb25mLgojCiMgU2VjUnVsZVJlbW92ZUJ5SWQgOTAwMTIwMC05MDAxMjk5CiMKIyBUaGlzIHdpbGwgbWVhbiB0aGUgQ1JTIHJlbWFpbiBpbnRhY3QgZm9yIHRoZSBlZGl0aW5nIG9mIG5vZGUgYm9kaWVzLgojCiMgVGhlIGV4Y2x1c2lvbiBydWxlcyBpbiB0aGlzIGZpbGUgd29yayB3aXRob3V0IHRoZSBuZWVkIHRvIGRlZmluZSBhIERydXBhbAojIGluc3RhbGxhdGlvbiBwYXRoIHByZWZpeC4gSW5zdGVhZCB0aGV5IGxvb2sgYXQgdGhlIFVSSSBmcm9tIHRoZSBlbmQgLSBvcgojIHRoZXkgdXNlIHJlZ3VsYXIgZXhwcmVzc2lvbnMgd2hlbiB0YXJnZXRpbmcgZHluYW1pYyBVUkwuIFRoaXMgaXMgYWxsIG5vdAojIHRvdGFsbHkgZm9vbHByb29mLiBJbiBzb21lIGNhc2VzLCBhbiBhZHZhbmNlZCBhdHRhY2tlciBtaWdodCBiZSBhYmxlIHRvCiMgZG9jdG9yIGEgcmVxdWVzdCBpbiBhIHdheSB0aGF0IG9uZSBvZiB0aGVzZSBleGNsdXNpb24gcnVsZXMgaXMgdHJpZ2dlcmVkCiMgYW5kIHRoZSByZXF1ZXN0IHdpbGwgYnlwYXNzIGFsbCBmdXJ0aGVyIGluc3BlY3Rpb24gZGVzcGl0ZSBub3QgYmVpbmcgYQojIERydXBhbCByZXF1ZXN0IGF0IGFsbC4gVGhlc2UgZXhjbHVzaW9uIHJ1bGVzIGNvdWxkIHRodXMgYmUgbGV2ZXJhZ2VkIHRvCiMgZGlzYWJsZSB0aGUgQ1JTIGNvbXBsZXRlbHkuIFRoaXMgaXMgd2h5IHRoZXNlIHJ1bGVzIGFyZSBvZmYgYnkgZGVmYXVsdC4KIwojIFRoZSBDUlMgcnVsZXMgY292ZXJlZCBieSB0aGlzIHJ1bGVzZXQgYXJlIHRoZSBydWxlcyB3aXRoIFBhcmFub2lhIExldmVsIDEgYW5kCiMgMi4gSWYgeW91IGNob3NlIHRvIHJ1biBQYXJhbm9pYSBMZXZlbCAzIG9yIDQsIHlvdSB3aWxsIGJlIGZhY2luZyBhZGRpdGlvbmFsCiMgZmFsc2UgcG9zaXRpdmVzIHdoaWNoIHlvdSBuZWVkIHRvIGhhbmRsZSB5b3Vyc2VsZi4KIwojIFRoaXMgc2V0IG9mIGV4Y2x1c2lvbiBydWxlcyBkb2VzIG5vdCBjb3ZlciBhbnkgYWRkaXRpb25hbCBEcnVwYWwgbW9kdWxlcwojIG91dHNpZGUgb2YgY29yZS4KIwojIFRoZSBleGNsdXNpb24gcnVsZXMgYXJlIGJhc2VkIG9uIERydXBhbCA4LjEuMTAuCiMKIyBBbmQgZmluYWxseTogVGhpcyBzZXQgb2YgZXhjbHVzaW9uIHJ1bGVzIGlzIGluIGFuIGV4cGVyaW1lbnRhbCBzdGF0ZS4gSWYgeW91CiMgZW5jb3VudGVyIGZhbHNlIHBvc2l0aXZlcyB3aXRoIHRoZSBiYXNpYyBEcnVwYWwgZnVuY3Rpb25hbGl0eSBhbmQgdGhleSBhcmUKIyBub3QgY292ZXJlZCBieSB0aGlzIHJ1bGUgZmlsZSwgdGhlbiBwbGVhc2UgcmVwb3J0IHRoZW0uIFRoZSBhaW0gaXMgdG8gYmUgYWJsZQojIHRvIGluc3RhbGwgYW5kIHJ1biBEcnVwYWwgY29yZSBpbiBhIHNlYW1sZXNzIG1hbm5lciBwcm90ZWN0ZWQgYnkKIyBNb2RTZWN1cml0eSAvIENSUyB1cCB0byB0aGUgcGFyYW5vaWEgbGV2ZWwgMi4KCgpTZWNSdWxlICZUWDpjcnNfZXhjbHVzaW9uc19kcnVwYWx8VFg6Y3JzX2V4Y2x1c2lvbnNfZHJ1cGFsICJAZXEgMCIgXAogICAgImlkOjkwMDEwMDAsXAogICAgcGhhc2U6MSxcCiAgICBwYXNzLFwKICAgIHQ6bm9uZSxcCiAgICBub2xvZyxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgc2tpcEFmdGVyOkVORC1EUlVQQUwtUlVMRS1FWENMVVNJT05TIgoKU2VjUnVsZSAmVFg6Y3JzX2V4Y2x1c2lvbnNfZHJ1cGFsfFRYOmNyc19leGNsdXNpb25zX2RydXBhbCAiQGVxIDAiIFwKICAgICJpZDo5MDAxMDAxLFwKICAgIHBoYXNlOjIsXAogICAgcGFzcyxcCiAgICB0Om5vbmUsXAogICAgbm9sb2csXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIHNraXBBZnRlcjpFTkQtRFJVUEFMLVJVTEUtRVhDTFVTSU9OUyIKCgojIFsgVGFibGUgb2YgQ29udGVudHMgXQojCiMgOTAwMTEwMCBTZXNzaW9uIENvb2tpZQojIDkwMDExMTAgUGFzc3dvcmQKIyA5MDAxMTIwIEZSRUUgZm9yIHVzZQojIDkwMDExMzAgRlJFRSBmb3IgdXNlCiMgOTAwMTE0MCBDb250ZW50IGFuZCBEZXNjcmlwdGlvbnMKIyA5MDAxMTUwIEZSRUUgZm9yIHVzZQojIDkwMDExNjAgRm9ybSBUb2tlbgojIDkwMDExNzAgVGV4dCBGb3JtYXRzIGFuZCBFZGl0b3JzCiMgOTAwMTE4MCBXWVNJV1lHL0NLRWRpdG9yIEFzc2V0cyBhbmQgVXBsb2FkCiMgOTAwMTE5MCBGUkVFIGZvciB1c2UKIyA5MDAxMjAwIENvbnRlbnQgYW5kIERlc2NyaXB0aW9ucwojCiMgVGhlIHJ1bGUgaWQgcmFuZ2UgZnJvbSA5MDAxMjAwIHRvIDkwMDE5OTkgaXMgcmVzZXJ2ZWQgZm9yIGZ1dHVyZQojIHVzZSAoRHJ1cGFsIHBsdWdpbnMgLyBtb2R1bGVzKS4KCgojIFsgU2Vzc2lvbiBDb29raWUgXQojCiMgR2l2aW5nIHRoZSBzZXNzaW9uIGNvb2tpZSBhIGR5bmFtaWMgbmFtZSBpcyBtb3N0IHVuZm9ydHVuYXRlCiMgZnJvbSBhIE1vZFNlY3VyaXR5IHBlcnNwZWN0aXZlLiBUaGUgcnVsZSBsYW5ndWFnZSBkb2VzIG5vdCBhbGxvdwojIHVzIHRvIGRpc2FibGUgcnVsZXMgaW4gYSBncmFudWxhciB3YXkgZm9yIGluZGl2aWR1YWwgY29va2llcyB3aXRoCiMgZHluYW1pYyBuYW1lcy4gU28gd2UgbmVlZCB0byBkaXNhYmxlIHJ1bGUgY2F1c2luZyBmYWxzZSBwb3NpdGl2ZXMKIyBmb3IgYWxsIGNvb2tpZXMgYW5kIHRoZWlyIG5hbWVzLgojCiMgUnVsZSBFeGNsdXNpb24gU2Vzc2lvbiBDb29raWU6IDk0MjQ1MCBTUUwgSGV4IEVuY29kaW5nIElkZW50aWZpZWQKIwpTZWNBY3Rpb24gImlkOjkwMDExMDAsXAogICAgcGhhc2U6MixcCiAgICBwYXNzLFwKICAgIG5vbG9nLFwKICAgIGN0bDpydWxlUmVtb3ZlVGFyZ2V0QnlJZD05NDI0NTA7UkVRVUVTVF9DT09LSUVTX05BTUVTLFwKICAgIGN0bDpydWxlUmVtb3ZlVGFyZ2V0QnlJZD05NDI0NTA7UkVRVUVTVF9DT09LSUVTLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyIKCgojCiMgWyBQYXNzd29yZCBdCiMKIyBEaXNhYmxlIHRoZSBDUlMgY29tcGxldGVseSBmb3IgYWxsIG9jY3VycmVuY2VzIG9mIHBhc3N3b3Jkcy4KIwpTZWNSdWxlIFJFUVVFU1RfRklMRU5BTUUgIkBlbmRzV2l0aCAvY29yZS9pbnN0YWxsLnBocCIgXAogICAgImlkOjkwMDExMTAsXAogICAgcGhhc2U6MixcCiAgICBwYXNzLFwKICAgIG5vbG9nLFwKICAgIGN0bDpydWxlUmVtb3ZlVGFyZ2V0QnlUYWc9T1dBU1BfQ1JTO0FSR1M6YWNjb3VudFtwYXNzXVtwYXNzMV0sXAogICAgY3RsOnJ1bGVSZW1vdmVUYXJnZXRCeVRhZz1PV0FTUF9DUlM7QVJHUzphY2NvdW50W3Bhc3NdW3Bhc3MyXSxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNSciCgpTZWNSdWxlIFJFUVVFU1RfRklMRU5BTUUgIkBlbmRzV2l0aCAvdXNlci9sb2dpbiIgXAogICAgImlkOjkwMDExMTIsXAogICAgcGhhc2U6MixcCiAgICBwYXNzLFwKICAgIHQ6bm9uZSxcCiAgICBub2xvZyxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOnBhc3MsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnIgoKU2VjUnVsZSBSRVFVRVNUX0ZJTEVOQU1FICJAZW5kc1dpdGggL2FkbWluL3Blb3BsZS9jcmVhdGUiIFwKICAgICJpZDo5MDAxMTE0LFwKICAgIHBoYXNlOjIsXAogICAgcGFzcyxcCiAgICBub2xvZyxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOnBhc3NbcGFzczFdLFwKICAgIGN0bDpydWxlUmVtb3ZlVGFyZ2V0QnlUYWc9T1dBU1BfQ1JTO0FSR1M6cGFzc1twYXNzMl0sXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnIgoKU2VjUnVsZSBSRVFVRVNUX0ZJTEVOQU1FICJAcnggL3VzZXIvWzAtOV0rL2VkaXQkIiBcCiAgICAiaWQ6OTAwMTExNixcCiAgICBwaGFzZToyLFwKICAgIHBhc3MsXAogICAgbm9sb2csXAogICAgY3RsOnJ1bGVSZW1vdmVUYXJnZXRCeVRhZz1PV0FTUF9DUlM7QVJHUzpjdXJyZW50X3Bhc3MsXAogICAgY3RsOnJ1bGVSZW1vdmVUYXJnZXRCeVRhZz1PV0FTUF9DUlM7QVJHUzpwYXNzW3Bhc3MxXSxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOnBhc3NbcGFzczJdLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyIKCgojCiMgWyBBZG1pbiBTZXR0aW5ncyAoZ2VuZXJhbCkgXQojCiMgRGlzYWJsZSBrbm93biBmYWxzZSBwb3NpdGl2ZXMgZm9yIHZhcmlvdXMgZmllbGRzIHVzZWQgb24gYWRtaW4gcGFnZXMuCiMKIyBSdWxlIEV4Y2x1c2lvbjogOTIwMjcxIEludmFsaWQgY2hhcmFjdGVyIGluIHJlcXVlc3Qgb24gbXVsdGlwbGUgZmllbGRzL3BhdGhzCiMgUnVsZSBFeGNsdXNpb246IDk0MjQzMCBSZXN0cmljdGVkIFNRTCBDaGFyYWN0ZXIgQW5vbWFseSBEZXRlY3Rpb24gKGFyZ3MpCiMgICAgICAgICAgICAgICAgICAgICAgICBEaXNhYmxlZCBjb21wbGV0ZWx5IGZvciBhZG1pbi9jb25maWcgcGFnZXMKIyBGb3IgdGhlIHBlb3BsZS9hY2NvdW50cyBwYWdlLCB3ZSBkaXNhYmxlIHRoZSBDUlMgY29tcGxldGVseSBmb3IgYSBudW1iZXIgb2YKIyBmcmVlZm9ybSB0ZXh0IGZpZWxkcy4KIwpTZWNSdWxlIFJFUVVFU1RfRklMRU5BTUUgIkBjb250YWlucyAvYWRtaW4vY29uZmlnLyIgXAogICAgImlkOjkwMDExMjIsXAogICAgcGhhc2U6MixcCiAgICBwYXNzLFwKICAgIG5vbG9nLFwKICAgIGN0bDpydWxlUmVtb3ZlQnlJZD05NDI0MzAsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnIgoKU2VjUnVsZSBSRVFVRVNUX0ZJTEVOQU1FICJAZW5kc1dpdGggL2FkbWluL2NvbmZpZy9wZW9wbGUvYWNjb3VudHMiIFwKICAgICJpZDo5MDAxMTI0LFwKICAgIHBoYXNlOjIsXAogICAgcGFzcyxcCiAgICBub2xvZyxcCiAgICBjdGw6cnVsZVJlbW92ZUJ5SWQ9OTIwMjcxLFwKICAgIGN0bDpydWxlUmVtb3ZlQnlJZD05NDI0NDAsXAogICAgY3RsOnJ1bGVSZW1vdmVUYXJnZXRCeVRhZz1PV0FTUF9DUlM7QVJHUzp1c2VyX21haWxfY2FuY2VsX2NvbmZpcm1fYm9keSxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOnVzZXJfbWFpbF9wYXNzd29yZF9yZXNldF9ib2R5LFwKICAgIGN0bDpydWxlUmVtb3ZlVGFyZ2V0QnlUYWc9T1dBU1BfQ1JTO0FSR1M6dXNlcl9tYWlsX3JlZ2lzdGVyX2FkbWluX2NyZWF0ZWRfYm9keSxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOnVzZXJfbWFpbF9yZWdpc3Rlcl9ub19hcHByb3ZhbF9yZXF1aXJlZF9ib2R5LFwKICAgIGN0bDpydWxlUmVtb3ZlVGFyZ2V0QnlUYWc9T1dBU1BfQ1JTO0FSR1M6dXNlcl9tYWlsX3JlZ2lzdGVyX3BlbmRpbmdfYXBwcm92YWxfYm9keSxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOnVzZXJfbWFpbF9zdGF0dXNfYWN0aXZhdGVkX2JvZHksXAogICAgY3RsOnJ1bGVSZW1vdmVUYXJnZXRCeVRhZz1PV0FTUF9DUlM7QVJHUzp1c2VyX21haWxfc3RhdHVzX2Jsb2NrZWRfYm9keSxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOnVzZXJfbWFpbF9zdGF0dXNfY2FuY2VsZWRfYm9keSxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNSciCgpTZWNSdWxlIFJFUVVFU1RfRklMRU5BTUUgIkBlbmRzV2l0aCAvYWRtaW4vY29uZmlnL2RldmVsb3BtZW50L2NvbmZpZ3VyYXRpb24vc2luZ2xlL2ltcG9ydCIgXAogICAgImlkOjkwMDExMjYsXAogICAgcGhhc2U6MixcCiAgICBwYXNzLFwKICAgIG5vbG9nLFwKICAgIGN0bDpydWxlUmVtb3ZlQnlJZD05MjAyNzEsXAogICAgY3RsOnJ1bGVSZW1vdmVCeUlkPTk0MjQ0MCxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNSciCgpTZWNSdWxlIFJFUVVFU1RfRklMRU5BTUUgIkBlbmRzV2l0aCAvYWRtaW4vY29uZmlnL2RldmVsb3BtZW50L21haW50ZW5hbmNlIiBcCiAgICAiaWQ6OTAwMTEyOCxcCiAgICBwaGFzZToyLFwKICAgIHBhc3MsXAogICAgbm9sb2csXAogICAgY3RsOnJ1bGVSZW1vdmVCeUlkPTk0MjQ0MCxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNSciCgoKIwojCiMgWyBDb250ZW50IGFuZCBEZXNjcmlwdGlvbnMgXQojCiMgRGlzYWJsZSBrbm93biBmYWxzZSBwb3NpdGl2ZXMgZm9yIGZpZWxkICJpZHNbXSIuCiMKIyBSdWxlIEV4Y2x1c2lvbjogOTQyMTMwIFNRTCBJbmplY3Rpb24gQXR0YWNrOiBTUUwgVGF1dG9sb2d5IERldGVjdGVkCiMKU2VjUnVsZSBSRVFVRVNUX0ZJTEVOQU1FICJAZW5kc1dpdGggL2NvbnRleHR1YWwvcmVuZGVyIiBcCiAgICAiaWQ6OTAwMTE0MCxcCiAgICBwaGFzZToyLFwKICAgIHBhc3MsXAogICAgbm9sb2csXAogICAgY3RsOnJ1bGVSZW1vdmVUYXJnZXRCeUlkPTk0MjEzMDtBUkdTOmlkc1tdLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyIKCgojCiMgWyBGb3JtIFRva2VuIC8gQnVpbGQgSUQgXQojCiMgUnVsZSBFeGNsdXNpb24gZm9yIGZvcm1fYnVpbGRfaWQ6IDk0MjQ0MCBTUUwgQ29tbWVudCBTZXF1ZW5jZSBEZXRlY3RlZCBvbiAuLi4KIyBSdWxlIEV4Y2x1c2lvbiBmb3IgZm9ybV90b2tlbjogICAgOTQyNDUwIFNRTCBIZXggRW5jb2RpbmcKIyBSdWxlIEV4Y2x1c2lvbiBmb3IgZm9ybV9idWlsZF9pZDogOTQyNDUwIFNRTCBIZXggRW5jb2RpbmcKIwojIFRoaXMgaXMgYXBwbGllZCBzaXRlLXdpZGUuCiMKU2VjQWN0aW9uICJpZDo5MDAxMTYwLFwKICAgIHBoYXNlOjIsXAogICAgcGFzcyxcCiAgICBub2xvZyxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5SWQ9OTQyNDQwO0FSR1M6Zm9ybV9idWlsZF9pZCxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5SWQ9OTQyNDUwO0FSR1M6Zm9ybV90b2tlbixcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5SWQ9OTQyNDUwO0FSR1M6Zm9ybV9idWlsZF9pZCxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNSciCgoKIwojIFsgVGV4dCBGb3JtYXRzIGFuZCBFZGl0b3JzIF0KIwojIERpc2FibGUgdGhlIENSUyBjb21wbGV0ZWx5IGZvciB0d28gZmllbGRzIHRyaWdnZXJpbmcgbWFueSwgbWFueSBydWxlcwojCiMgUnVsZSBFeGNsdXNpb24gZm9yIHR3byBmaWVsZHM6IDk0MjQ0MCBTUUwgQ29tbWVudCBTZXF1ZW5jZSBEZXRlY3RlZAojClNlY1J1bGUgUkVRVUVTVF9GSUxFTkFNRSAiQGVuZHNXaXRoIC9hZG1pbi9jb25maWcvY29udGVudC9mb3JtYXRzL21hbmFnZS9mdWxsX2h0bWwiIFwKICAgICJpZDo5MDAxMTcwLFwKICAgIHBoYXNlOjIsXAogICAgcGFzcyxcCiAgICBub2xvZyxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOmVkaXRvcltzZXR0aW5nc11bdG9vbGJhcl1bYnV0dG9uX2dyb3Vwc10sXAogICAgY3RsOnJ1bGVSZW1vdmVUYXJnZXRCeVRhZz1PV0FTUF9DUlM7QVJHUzpmaWx0ZXJzW2ZpbHRlcl9odG1sXVtzZXR0aW5nc11bYWxsb3dlZF9odG1sXSxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNSciCgoKIwojIFsgV1lTSVdZRy9DS0VkaXRvciBBc3NldHMgYW5kIFVwbG9hZCBdCiMKIyBEaXNhYmxlIHRoZSB1bm5lY2Vzc2FyeSByZXF1ZXN0Qm9keUFjY2VzcyBhbmQgZm9yIGJpbmFyeSB1cGxvYWRzCiMgYmlnZ2VyIHRoYW4gYW4gYXJiaXRyYXJ5IGxpbWl0IG9mIDMxNDg2MzQxIGJ5dGVzLgojCiMgRXh0ZW5zaXZlIGNoZWNrcyBtYWtlIHN1cmUgdGhlc2UgdXBsb2FkcyBhcmUgcmVhbGx5IGxlZ2l0aW1hdGUuCiMKIyBSdWxlIDkwMDExODAgd2FzIGNvbW1lbnRlZCBvdXQgaW4gMjAyMSBpbiBvcmRlciB0byBmaWdodCBDVkUtMjAyMS0zNTM2OC4KIwojU2VjUnVsZSBSRVFVRVNUX01FVEhPRCAiQHN0cmVxIFBPU1QiIFwKIyAgICAiaWQ6OTAwMTE4MCxcCiMgICAgcGhhc2U6MSxcCiMgICAgcGFzcyxcCiMgICAgdDpub25lLFwKIyAgICBub2xvZyxcCiMgICAgbm9hdWRpdGxvZyxcCiMgICAgdmVyOidPV0FTUF9DUlMvMy4zLjAnLFwKIyAgICBjaGFpbiIKIyAgICBTZWNSdWxlIFJFUVVFU1RfRklMRU5BTUUgIkByeCAvYWRtaW4vY29udGVudC9hc3NldHMvYWRkL1thLXpdKyQiIFwKIyAgICAgICAgImNoYWluIgojICAgICAgICBTZWNSdWxlIFJFUVVFU1RfQ09PS0lFUzovUz9TRVNTW2EtZjAtOV0rLyAiQHJ4IF5bYS16QS1aMC05Xy1dKyIgXAojICAgICAgICAgICAgImN0bDpyZXF1ZXN0Qm9keUFjY2Vzcz1PZmYiCgojIFJ1bGUgOTAwMTE4MiB3YXMgY29tbWVudGVkIG91dCBpbiAyMDIxIGluIG9yZGVyIHRvIGZpZ2h0IENWRS0yMDIxLTM1MzY4LgojCiNTZWNSdWxlIFJFUVVFU1RfTUVUSE9EICJAc3RyZXEgUE9TVCIgXAojICAgICJpZDo5MDAxMTgyLFwKIyAgICBwaGFzZToxLFwKIyAgICBwYXNzLFwKIyAgICB0Om5vbmUsXAojICAgIG5vbG9nLFwKIyAgICBub2F1ZGl0bG9nLFwKIyAgICB2ZXI6J09XQVNQX0NSUy8zLjMuMCcsXAojICAgIGNoYWluIgojICAgIFNlY1J1bGUgUkVRVUVTVF9GSUxFTkFNRSAiQHJ4IC9hZG1pbi9jb250ZW50L2Fzc2V0cy9tYW5hZ2UvWzAtOV0rJCIgXAojICAgICAgICAiY2hhaW4iCiMgICAgICAgIFNlY1J1bGUgQVJHUzpkZXN0aW5hdGlvbiAiQHN0cmVxIGFkbWluL2NvbnRlbnQvYXNzZXRzIiBcCiMgICAgICAgICAgICAiY2hhaW4iCiMgICAgICAgICAgICBTZWNSdWxlIFJFUVVFU1RfSEVBREVSUzpDb250ZW50LUxlbmd0aCAiQGd0IDMxNDg2MzQxIiBcCiMgICAgICAgICAgICAgICAgImNoYWluIgojICAgICAgICAgICAgICAgIFNlY1J1bGUgUkVRVUVTVF9DT09LSUVTOi9TP1NFU1NbYS1mMC05XSsvICJAcnggXlthLXpBLVowLTlfLV0rIiBcCiMgICAgICAgICAgICAgICAgICAgICJjdGw6cmVxdWVzdEJvZHlBY2Nlc3M9T2ZmIgoKIyBSdWxlIDkwMDExODQgd2FzIGNvbW1lbnRlZCBvdXQgaW4gMjAyMSBpbiBvcmRlciB0byBmaWdodCBDVkUtMjAyMS0zNTM2OC4KIwojU2VjUnVsZSBSRVFVRVNUX01FVEhPRCAiQHN0cmVxIFBPU1QiIFwKIyAgICAiaWQ6OTAwMTE4NCxcCiMgICAgcGhhc2U6MSxcCiMgICAgcGFzcyxcCiMgICAgdDpub25lLFwKIyAgICBub2xvZyxcCiMgICAgbm9hdWRpdGxvZyxcCiMgICAgdmVyOidPV0FTUF9DUlMvMy4zLjAnLFwKIyAgICBjaGFpbiIKIyAgICBTZWNSdWxlIFJFUVVFU1RfRklMRU5BTUUgIkByeCAvZmlsZS9hamF4L2ZpZWxkX2Fzc2V0X1thLXowLTlfXSsvW3VhXW5kLzAvZm9ybS1bYS16MC05QS1aXy1dKyQiIFwKIyAgICAgICAgImNoYWluIgojICAgICAgICBTZWNSdWxlIFJFUVVFU1RfSEVBREVSUzpDb250ZW50LUxlbmd0aCAiQGd0IDMxNDg2MzQxIiBcCiMgICAgICAgICAgICAiY2hhaW4iCiMgICAgICAgICAgICBTZWNSdWxlIFJFUVVFU1RfSEVBREVSUzpDb250ZW50LVR5cGUgIkByeCBeKD9pKW11bHRpcGFydC9mb3JtLWRhdGEiIFwKIyAgICAgICAgICAgICAgICAiY2hhaW4iCiMgICAgICAgICAgICAgICAgU2VjUnVsZSBSRVFVRVNUX0NPT0tJRVM6L1M/U0VTU1thLWYwLTldKy8gIkByeCBeW2EtekEtWjAtOV8tXSsiIFwKIyAgICAgICAgICAgICAgICAgICAgImN0bDpyZXF1ZXN0Qm9keUFjY2Vzcz1PZmYiCgoKIwojIFsgQ29udGVudCBhbmQgRGVzY3JpcHRpb25zIF0KIwojIERpc2FibGUgdGhlIENSUyBjb21wbGV0ZWx5IGZvciBub2RlIGJvZGllcyBhbmQgb3RoZXIgZnJlZSB0ZXh0IGZpZWxkcy4KIyBPdGhlciBydWxlcyBhcmUgZGlzYWJsZWQgaW5kaXZpZHVhbGx5LgojCiMgUnVsZSBFeGNsdXNpb24gZm9yIEFSR1M6dWlkWzBdW3RhcmdldF9pZF06IDk0MjQxMCBTUUwgSW5qZWN0aW9uIEF0dGFjawojIFJ1bGUgRXhjbHVzaW9uIGZvciBBUkdTOmRlc3RpbmF0aW9uOiAgICAgICA5MzIxMTAgUkNFOiBXaW5kb3dzIENvbW1hbmQgSW5qLgojClNlY1J1bGUgUkVRVUVTVF9GSUxFTkFNRSAiQGVuZHNXaXRoIC9ub2RlL2FkZC9hcnRpY2xlIiBcCiAgICAiaWQ6OTAwMTIwMCxcCiAgICBwaGFzZToyLFwKICAgIHBhc3MsXAogICAgbm9sb2csXAogICAgY3RsOnJ1bGVSZW1vdmVUYXJnZXRCeVRhZz1PV0FTUF9DUlM7QVJHUzpib2R5WzBdW3ZhbHVlXSxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5SWQ9OTQyNDEwO0FSR1M6dWlkWzBdW3RhcmdldF9pZF0sXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnIgoKU2VjUnVsZSBSRVFVRVNUX0ZJTEVOQU1FICJAZW5kc1dpdGggL25vZGUvYWRkL3BhZ2UiIFwKICAgICJpZDo5MDAxMjAyLFwKICAgIHBoYXNlOjIsXAogICAgcGFzcyxcCiAgICBub2xvZyxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOmJvZHlbMF1bdmFsdWVdLFwKICAgIGN0bDpydWxlUmVtb3ZlVGFyZ2V0QnlJZD05NDI0MTA7QVJHUzp1aWRbMF1bdGFyZ2V0X2lkXSxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNSciCgpTZWNSdWxlIFJFUVVFU1RfRklMRU5BTUUgIkByeCAvbm9kZS9bMC05XSsvZWRpdCQiIFwKICAgICJpZDo5MDAxMjA0LFwKICAgIHBoYXNlOjIsXAogICAgcGFzcyxcCiAgICBub2xvZyxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOmJvZHlbMF1bdmFsdWVdLFwKICAgIGN0bDpydWxlUmVtb3ZlVGFyZ2V0QnlJZD05NDI0MTA7QVJHUzp1aWRbMF1bdGFyZ2V0X2lkXSxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5SWQ9OTMyMTEwO0FSR1M6ZGVzdGluYXRpb24sXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnIgoKU2VjUnVsZSBSRVFVRVNUX0ZJTEVOQU1FICJAZW5kc1dpdGggL2Jsb2NrL2FkZCIgXAogICAgImlkOjkwMDEyMDYsXAogICAgcGhhc2U6MixcCiAgICBwYXNzLFwKICAgIG5vbG9nLFwKICAgIGN0bDpydWxlUmVtb3ZlVGFyZ2V0QnlUYWc9T1dBU1BfQ1JTO0FSR1M6Ym9keVswXVt2YWx1ZV0sXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnIgoKU2VjUnVsZSBSRVFVRVNUX0ZJTEVOQU1FICJAZW5kc1dpdGggL2FkbWluL3N0cnVjdHVyZS9ibG9jay9ibG9jay1jb250ZW50L21hbmFnZS9iYXNpYyIgXAogICAgImlkOjkwMDEyMDgsXAogICAgcGhhc2U6MixcCiAgICBwYXNzLFwKICAgIG5vbG9nLFwKICAgIGN0bDpydWxlUmVtb3ZlVGFyZ2V0QnlUYWc9T1dBU1BfQ1JTO0FSR1M6ZGVzY3JpcHRpb24sXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnIgoKU2VjUnVsZSBSRVFVRVNUX0ZJTEVOQU1FICJAcnggL2VkaXRvci9maWx0ZXJfeHNzLyg/OmZ1bGx8YmFzaWMpX2h0bWwkIiBcCiAgICAiaWQ6OTAwMTIxMCxcCiAgICBwaGFzZToyLFwKICAgIHBhc3MsXAogICAgbm9sb2csXAogICAgY3RsOnJ1bGVSZW1vdmVUYXJnZXRCeVRhZz1PV0FTUF9DUlM7QVJHUzp2YWx1ZSxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNSciCgpTZWNSdWxlIFJFUVVFU1RfRklMRU5BTUUgIkByeCAvdXNlci9bMC05XSsvY29udGFjdCQiIFwKICAgICJpZDo5MDAxMjEyLFwKICAgIHBoYXNlOjIsXAogICAgcGFzcyxcCiAgICBub2xvZyxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOm1lc3NhZ2VbMF1bdmFsdWVdLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyIKClNlY1J1bGUgUkVRVUVTVF9GSUxFTkFNRSAiQGVuZHNXaXRoIC9hZG1pbi9jb25maWcvZGV2ZWxvcG1lbnQvbWFpbnRlbmFuY2UiIFwKICAgICJpZDo5MDAxMjE0LFwKICAgIHBoYXNlOjIsXAogICAgcGFzcyxcCiAgICBub2xvZyxcCiAgICBjdGw6cnVsZVJlbW92ZVRhcmdldEJ5VGFnPU9XQVNQX0NSUztBUkdTOm1haW50ZW5hbmNlX21vZGVfbWVzc2FnZSxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNSciCgpTZWNSdWxlIFJFUVVFU1RfRklMRU5BTUUgIkBlbmRzV2l0aCAvYWRtaW4vY29uZmlnL3NlcnZpY2VzL3Jzcy1wdWJsaXNoaW5nIiBcCiAgICAiaWQ6OTAwMTIxNixcCiAgICBwaGFzZToyLFwKICAgIHBhc3MsXAogICAgbm9sb2csXAogICAgY3RsOnJ1bGVSZW1vdmVUYXJnZXRCeVRhZz1PV0FTUF9DUlM7QVJHUzpmZWVkX2Rlc2NyaXB0aW9uLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyIKCgpTZWNNYXJrZXIgIkVORC1EUlVQQUwtUlVMRS1FWENMVVNJT05TIgo=",
	"REQUEST-903.9002-WORDPRESS-EXCLUSION-RULES.conf": "",
	"REQUEST-903.9003-NEXTCLOUD-EXCLUSION-RULES.conf": "",
	"REQUEST-903.9004-DOKUWIKI-EXCLUSION-RULES.conf": "",
	"REQUEST-903.9005-CPANEL-EXCLUSION-RULES.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojIFRoZXNlIGV4Y2x1c2lvbnMgcmVtZWR5IGZhbHNlIHBvc2l0aXZlcyBpbiBhIGRlZmF1bHQgY1BhbmVsIGVudmlyb25tZW50LgojIFRoZSBleGNsdXNpb25zIGFyZSBvbmx5IGFjdGl2ZSBpZiBjcnNfZXhjbHVzaW9uc19jcGFuZWw9MSBpcyBzZXQuCiMgU2VlIHJ1bGUgOTAwMTMwIGluIGNycy1zZXR1cC5jb25mLmV4YW1wbGUgZm9yIGluc3RydWN0aW9ucy4KCgpTZWNSdWxlICZUWDpjcnNfZXhjbHVzaW9uc19jcGFuZWx8VFg6Y3JzX2V4Y2x1c2lvbnNfY3BhbmVsICJAZXEgMCIgXAogICAgImlkOjkwMDUwMDAsXAogICAgcGhhc2U6MSxcCiAgICBwYXNzLFwKICAgIHQ6bm9uZSxcCiAgICBub2xvZyxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgc2tpcEFmdGVyOkVORC1DUEFORUwiCgpTZWNSdWxlICZUWDpjcnNfZXhjbHVzaW9uc19jcGFuZWx8VFg6Y3JzX2V4Y2x1c2lvbnNfY3BhbmVsICJAZXEgMCIgXAogICAgImlkOjkwMDUwMDEsXAogICAgcGhhc2U6MixcCiAgICBwYXNzLFwKICAgIHQ6bm9uZSxcCiAgICBub2xvZyxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgc2tpcEFmdGVyOkVORC1DUEFORUwiCgoKIwojIFsgY1BhbmVsIHdobS1zZXJ2ZXItc3RhdHVzIF0KIwojIENwYW5lbCdzIFdITSBhdXRvIGdlbmVyYXRlcyByZXF1ZXN0cyB0byAvd2htLXNlcnZlci1zdGF0dXMgZnJvbQojIDEyNy4wLjAuMSAodHJpZ2dlcnMgcnVsZSA5MjAyODAsIG5vbi1ibG9ja2luZywgbG9nIG9ubHkpIE9uY2UgZXZlcnkgNSBtaW51dGVzLgojIFRoZXNlIGZhbHNlIHBvc2l0aXZlcyBoYXZlIGEgbG93IGltcGFjdCAobG9nZ2VkLCBub24tYmxvY2tpbmcpIHRvIGEgbGFyZ2UgbnVtYmVyIG9mIHVzZXJzIChhbGwgY1BhbmVsIGFkbWlucykuCiMKCiMKIyBSdWxlIHRvIGFsbG93IGNQYW5lbCB3aG0tc2VydmVyLXN0YXR1cyByZXF1ZXN0cyBmcm9tIGxvY2FsaG9zdCB3aXRob3V0IGxvZyBlbnRyeS4KIwpTZWNSdWxlIFJFUVVFU1RfTElORSAiQHJ4IF5HRVQgL3dobS1zZXJ2ZXItc3RhdHVzKD86L3wvXD9hdXRvKT8gSFRUUC9bMTJdXC5bMDFdJCIgXAogICAgImlkOjkwMDUxMDAsXAogICAgcGhhc2U6MSxcCiAgICBwYXNzLFwKICAgIHQ6bm9uZSxcCiAgICBub2xvZyxcCiAgICB0YWc6J2FwcGxpY2F0aW9uLW11bHRpJyxcCiAgICB0YWc6J2xhbmd1YWdlLW11bHRpJyxcCiAgICB0YWc6J3BsYXRmb3JtLWFwYWNoZScsXAogICAgdGFnOidhdHRhY2stZ2VuZXJpYycsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIGNoYWluIgogICAgU2VjUnVsZSBSRU1PVEVfQUREUiAiQGlwTWF0Y2ggMTI3LjAuMC4xLDo6MSIgXAogICAgICAgICJ0Om5vbmUsXAogICAgICAgIGN0bDpydWxlUmVtb3ZlQnlJZD05MjAyODAsXAogICAgICAgIGN0bDpydWxlUmVtb3ZlQnlJZD05MjAzNTAiCgoKU2VjTWFya2VyICJFTkQtQ1BBTkVMIgo=",
	"REQUEST-903.9006-XENFORO-EXCLUSION-RULES.conf": "",
	"REQUEST-905-COMMON-EXCEPTIONS.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoKIyBUaGlzIGZpbGUgaXMgdXNlZCBhcyBhbiBleGNlcHRpb24gbWVjaGFuaXNtIHRvIHJlbW92ZSBjb21tb24gZmFsc2UgcG9zaXRpdmVzCiMgdGhhdCBtYXkgYmUgZW5jb3VudGVyZWQuCiMKIyBFeGNlcHRpb24gZm9yIEFwYWNoZSBTU0wgcGluZ2VyCiMKU2VjUnVsZSBSRVFVRVNUX0xJTkUgIkBzdHJlcSBHRVQgLyIgXAogICAgImlkOjkwNTEwMCxcCiAgICBwaGFzZToxLFwKICAgIHBhc3MsXAogICAgdDpub25lLFwKICAgIG5vbG9nLFwKICAgIHRhZzonYXBwbGljYXRpb24tbXVsdGknLFwKICAgIHRhZzonbGFuZ3VhZ2UtbXVsdGknLFwKICAgIHRhZzoncGxhdGZvcm0tYXBhY2hlJyxcCiAgICB0YWc6J2F0dGFjay1nZW5lcmljJyxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgY2hhaW4iCiAgICBTZWNSdWxlIFJFTU9URV9BRERSICJAaXBNYXRjaCAxMjcuMC4wLjEsOjoxIiBcCiAgICAgICAgInQ6bm9uZSxcCiAgICAgICAgY3RsOnJ1bGVFbmdpbmU9T2ZmLFwKICAgICAgICBjdGw6YXVkaXRFbmdpbmU9T2ZmIgoKIwojIEV4Y2VwdGlvbiBmb3IgQXBhY2hlIGludGVybmFsIGR1bW15IGNvbm5lY3Rpb24KIwpTZWNSdWxlIFJFTU9URV9BRERSICJAaXBNYXRjaCAxMjcuMC4wLjEsOjoxIiBcCiAgICAiaWQ6OTA1MTEwLFwKICAgIHBoYXNlOjEsXAogICAgcGFzcyxcCiAgICB0Om5vbmUsXAogICAgbm9sb2csXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1tdWx0aScsXAogICAgdGFnOidwbGF0Zm9ybS1hcGFjaGUnLFwKICAgIHRhZzonYXR0YWNrLWdlbmVyaWMnLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyxcCiAgICBjaGFpbiIKICAgIFNlY1J1bGUgUkVRVUVTVF9IRUFERVJTOlVzZXItQWdlbnQgIkBlbmRzV2l0aCAoaW50ZXJuYWwgZHVtbXkgY29ubmVjdGlvbikiIFwKICAgICAgICAidDpub25lLFwKICAgICAgICBjaGFpbiIKICAgICAgICBTZWNSdWxlIFJFUVVFU1RfTElORSAiQHJ4IF4oPzpHRVQgL3xPUFRJT05TIFwqKSBIVFRQL1sxMl1cLlswMV0kIiBcCiAgICAgICAgICAgICJ0Om5vbmUsXAogICAgICAgICAgICBjdGw6cnVsZUVuZ2luZT1PZmYsXAogICAgICAgICAgICBjdGw6YXVkaXRFbmdpbmU9T2ZmIgo=",
	"REQUEST-910-IP-REPUTATION.conf": "",
	"REQUEST-911-METHOD-ENFORCEMENT.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMCAoZW1wdHkpID0tIChhcHBseSB1bmNvbmRpdGlvbmFsbHkpCiMKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTExMDExLHBoYXNlOjEscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTExLU1FVEhPRC1FTkZPUkNFTUVOVCIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTExMDEyLHBoYXNlOjIscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTExLU1FVEhPRC1FTkZPUkNFTUVOVCIKIwojIC09IFBhcmFub2lhIExldmVsIDEgKGRlZmF1bHQpID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAxIG9yIGhpZ2hlcikKIwoKIwojIC09WyBBbGxvd2VkIFJlcXVlc3QgTWV0aG9kcyBdPS0KIwojIHR4LmFsbG93ZWRfbWV0aG9kcyBpcyBkZWZpbmVkIGluIHRoZSBjcnMtc2V0dXAuY29uZiBmaWxlCiMKU2VjUnVsZSBSRVFVRVNUX01FVEhPRCAiIUB3aXRoaW4gJXt0eC5hbGxvd2VkX21ldGhvZHN9IiBcCiAgICAiaWQ6OTExMTAwLFwKICAgIHBoYXNlOjIsXAogICAgYmxvY2ssXAogICAgbXNnOidNZXRob2QgaXMgbm90IGFsbG93ZWQgYnkgcG9saWN5JyxcCiAgICBsb2dkYXRhOicle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1tdWx0aScsXAogICAgdGFnOidwbGF0Zm9ybS1tdWx0aScsXAogICAgdGFnOidhdHRhY2stZ2VuZXJpYycsXAogICAgdGFnOidwYXJhbm9pYS1sZXZlbC8xJyxcCiAgICB0YWc6J09XQVNQX0NSUycsXAogICAgdGFnOidjYXBlYy8xMDAwLzIxMC8yNzIvMjIwLzI3NCcsXAogICAgdGFnOidQQ0kvMTIuMScsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIHNldmVyaXR5OidDUklUSUNBTCcsXAogICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5jcml0aWNhbF9hbm9tYWx5X3Njb3JlfSciCgoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDIiICJpZDo5MTEwMTMscGhhc2U6MSxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVRVUVTVC05MTEtTUVUSE9ELUVORk9SQ0VNRU5UIgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDIiICJpZDo5MTEwMTQscGhhc2U6MixwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVRVUVTVC05MTEtTUVUSE9ELUVORk9SQ0VNRU5UIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMiA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogMiBvciBoaWdoZXIpCiMKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAzIiAiaWQ6OTExMDE1LHBoYXNlOjEscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTExLU1FVEhPRC1FTkZPUkNFTUVOVCIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAzIiAiaWQ6OTExMDE2LHBoYXNlOjIscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTExLU1FVEhPRC1FTkZPUkNFTUVOVCIKIwojIC09IFBhcmFub2lhIExldmVsIDMgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDMgb3IgaGlnaGVyKQojCgoKClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgNCIgImlkOjkxMTAxNyxwaGFzZToxLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTkxMS1NRVRIT0QtRU5GT1JDRU1FTlQiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgNCIgImlkOjkxMTAxOCxwaGFzZToyLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTkxMS1NRVRIT0QtRU5GT1JDRU1FTlQiCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCA0ID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiA0IG9yIGhpZ2hlcikKIwoKCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWxzIEZpbmlzaGVkID0tCiMKU2VjTWFya2VyICJFTkQtUkVRVUVTVC05MTEtTUVUSE9ELUVORk9SQ0VNRU5UIgo=",
	"REQUEST-912-DOS-PROTECTION.conf": "",
	"REQUEST-913-SCANNER-DETECTION.conf": "",
	"REQUEST-920-PROTOCOL-ENFORCEMENT.conf": "",
	"REQUEST-921-PROTOCOL-ATTACK.conf": "",
	"REQUEST-922-MULTIPART-ATTACK.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMCAoZW1wdHkpID0tIChhcHBseSB1bmNvbmRpdGlvbmFsbHkpCiMKCiMgVGhpcyBmaWxlIGlzIHRvIGFkZHJlc3MgdGhlIDNVV01XQTZXIHZ1bG5lcmFiaWxpdHkuCiMgSXQgcmVxdWlyZXMgTW9kU2VjdXJpdHkgdmVyc2lvbiAyLjkuNiBvciAzLjAuOCAob3IgYW4gdXBkYXRlZCB2ZXJzaW9uIHdpdGggYmFja3BvcnRzCiMgb2YgdGhlIHNlY3VyaXR5IGZpeGVzIGluIHRoZXNlIHZlcnNpb25zKSBvciBhIGNvbXBhdGlibGUgZW5naW5lIHN1cHBvcnRpbmcgdGhlc2UgY2hhbmdlcy4KIwojIElmIHlvdSBjYW5ub3QgdXBncmFkZSBNb2RTZWN1cml0eSwgdGhpcyBmaWxlIHdpbGwgY2F1c2UgTW9kU2VjdXJpdHkgdG8gZmFpbCB0byBzdGFydC4KIyBJbiB0aGF0IGNhc2UsIHlvdSBjYW4gdGVtcG9yYXJpbHkgZGVsZXRlIHRoaXMgZmlsZS4gSG93ZXZlciwgeW91IHdpbGwgYmUgbWlzc2luZwojIHByb3RlY3Rpb24gZnJvbSB0aGVzZSBydWxlcy4gVGhlcmVmb3JlLCB3ZSByZWNvbW1lbmQgdXBncmFkaW5nIHlvdXIgZW5naW5lIGluc3RlYWQuCgojIFRoZSBydWxlcyBpbiB0aGlzIGZpbGUgd2lsbCBiZSBwYXJ0IG9mIHRoZSA5MjAgLyA5MjEgaW4gdGhlIGZ1dHVyZS4KCiMgT25seSBhbGxvdyBzcGVjaWZpYyBjaGFyc2V0cyB3aGVuIHVzaW5nICJfY2hhcnNldF8iCiMgTm90ZTogdGhpcyBpcyBpbiBwaGFzZToyIGJlY2F1c2UgdGhlc2UgYXJlIGhlYWRlcnMgdGhhdCBjb21lIGluIHRoZSBib2R5ClNlY1J1bGUgJk1VTFRJUEFSVF9QQVJUX0hFQURFUlM6X2NoYXJzZXRfICIhQGVxIDAiIFwKICAgICJpZDo5MjIxMDAsXAogICAgcGhhc2U6MixcCiAgICBibG9jayxcCiAgICB0Om5vbmUsXAogICAgbXNnOidNdWx0aXBhcnQgY29udGVudCB0eXBlIGdsb2JhbCBfY2hhcnNldF8gZGVmaW5pdGlvbiBpcyBub3QgYWxsb3dlZCBieSBwb2xpY3knLFwKICAgIGxvZ2RhdGE6J01hdGNoZWQgRGF0YTogJXtBUkdTLl9jaGFyc2V0X30nLFwKICAgIHRhZzonYXBwbGljYXRpb24tbXVsdGknLFwKICAgIHRhZzonbGFuZ3VhZ2UtbXVsdGknLFwKICAgIHRhZzoncGxhdGZvcm0tbXVsdGknLFwKICAgIHRhZzonYXR0YWNrLW11bHRpcGFydC1oZWFkZXInLFwKICAgIHRhZzonT1dBU1BfQ1JTJyxcCiAgICB0YWc6J2NhcGVjLzEwMDAvMjU1LzE1MycsXAogICAgdGFnOidwYXJhbm9pYS1sZXZlbC8xJyxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgc2V2ZXJpdHk6J0NSSVRJQ0FMJyxcCiAgICBjaGFpbiIKICAgIFNlY1J1bGUgQVJHUzpfY2hhcnNldF8gIiFAd2l0aGluIHwle3R4LmFsbG93ZWRfcmVxdWVzdF9jb250ZW50X3R5cGVfY2hhcnNldH18IiBcCiAgICAgICAgInQ6bG93ZXJjYXNlLFwKICAgICAgICBzZXR2YXI6J3R4LmFub21hbHlfc2NvcmVfcGwxPSsle3R4LmNyaXRpY2FsX2Fub21hbHlfc2NvcmV9JyIKCgojIE9ubHkgYWxsb3cgc3BlY2lmaWMgY2hhcnNldHMgc2FtZSBhcyBSdWxlIDkyMDYwMAojIE5vdGU6IHRoaXMgaXMgaW4gcGhhc2U6MiBiZWNhdXNlIHRoZXNlIGFyZSBoZWFkZXJzIHRoYXQgY29tZSBpbiB0aGUgYm9keQpTZWNSdWxlIE1VTFRJUEFSVF9QQVJUX0hFQURFUlMgIkByeCBeY29udGVudC10eXBlXHMqKzpccyorKC4qKSQiIFwKICAgICJpZDo5MjIxMTAsXAogICAgcGhhc2U6MixcCiAgICBibG9jayxcCiAgICBjYXB0dXJlLFwKICAgIHQ6bm9uZSx0Omxvd2VyY2FzZSxcCiAgICBtc2c6J0lsbGVnYWwgTUlNRSBNdWx0aXBhcnQgSGVhZGVyIGNvbnRlbnQtdHlwZTogY2hhcnNldCBwYXJhbWV0ZXInLFwKICAgIGxvZ2RhdGE6J01hdGNoZWQgRGF0YTogJXtUWC4xfSBmb3VuZCB3aXRoaW4gQ29udGVudC1UeXBlIG11bHRpcGFydCBmb3JtJyxcCiAgICB0YWc6J2FwcGxpY2F0aW9uLW11bHRpJyxcCiAgICB0YWc6J2xhbmd1YWdlLW11bHRpJyxcCiAgICB0YWc6J3BsYXRmb3JtLW11bHRpJyxcCiAgICB0YWc6J2F0dGFjay1wcm90b2NvbCcsXAogICAgdGFnOidPV0FTUF9DUlMnLFwKICAgIHRhZzonY2FwZWMvMjcyLzIyMCcsXAogICAgdGFnOidwYXJhbm9pYS1sZXZlbC8xJyxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgc2V2ZXJpdHk6J0NSSVRJQ0FMJyxcCiAgICBjaGFpbiIKICAgIFNlY1J1bGUgVFg6MSAiIUByeCBeKD86KD86XCp8W15cIigpLFwvOjs8PT4/IVtceDVjXF17fV0rKVwvKD86XCp8W15cIigpLFwvOjs8PT4/IVtceDVjXF17fV0rKSkoPzpccyorO1xzKisoPzooPzpjaGFyc2V0XHMqKz1ccyorKD86XCI/KD86aXNvLTg4NTktMTU/fHdpbmRvd3MtMTI1Mnx1dGYtOClcYlwiPykpfCg/Oig/OmMoPzpoKD86YSg/OnIoPzpzKD86ZVtedFwiKCksXC86Ozw9Pj8hW1x4NWNcXXt9XXxbXmVcIigpLC86Ozw9Pj8hW1x4NWNcXXt9XSl8W15zXCIoKSwvOjs8PT4/IVtceDVjXF17fV0pfFteclwiKCksLzo7PD0+PyFbXHg1Y1xde31dKXxbXmFcIigpLC86Ozw9Pj8hW1x4NWNcXXt9XSl8W15oXCIoKSwvOjs8PT4/IVtceDVjXF17fV0pfFteY1wiKCksLzo7PD0+PyFbXHg1Y1xde31dKVteXCIoKSwvOjs8PT4/IVtceDVjXF17fV0qKD86KVxzKis9XHMqK1teKCksLzo7PD0+PyFbXHg1Y1xde31dKyl8Oz8pKSooPzpccyorLFxzKisoPzooPzpcKnxbXlwiKCksXC86Ozw9Pj8hW1x4NWNcXXt9XSspXC8oPzpcKnxbXlwiKCksXC86Ozw9Pj8hW1x4NWNcXXt9XSspKSg/OlxzKis7XHMqKyg/Oig/OmNoYXJzZXRccyorPVxzKisoPzpcIj8oPzppc28tODg1OS0xNT98d2luZG93cy0xMjUyfHV0Zi04KVxiXCI/KSl8KD86KD86Yyg/OmgoPzphKD86cig/OnMoPzplW150XCIoKSxcLzo7PD0+PyFbXHg1Y1xde31dfFteZVwiKCksLzo7PD0+PyFbXHg1Y1xde31dKXxbXnNcIigpLC86Ozw9Pj8hW1x4NWNcXXt9XSl8W15yXCIoKSwvOjs8PT4/IVtceDVjXF17fV0pfFteYVwiKCksLzo7PD0+PyFbXHg1Y1xde31dKXxbXmhcIigpLC86Ozw9Pj8hW1x4NWNcXXt9XSl8W15jXCIoKSwvOjs8PT4/IVtceDVjXF17fV0pW15cIigpLC86Ozw9Pj8hW1x4NWNcXXt9XSooPzopXHMqKz1ccyorW14oKSwvOjs8PT4/IVtceDVjXF17fV0rKXw7PykpKikqJCIgXAogICAgICAgICJ0Omxvd2VyY2FzZSxcCiAgICAgICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5jcml0aWNhbF9hbm9tYWx5X3Njb3JlfSciCgojIENvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmcgd2FzIGRlcHJlY2F0ZWQgYnkgcmZjNzU3OCBpbiAyMDE1IGFuZCBzaG91bGQgbm90IGJlIHVzZWQgKHNlZTogaHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvcmZjL3JmYzc1Nzgjc2VjdGlvbi00LjcpCiMgTm90ZTogdGhpcyBpcyBpbiBwaGFzZToyIGJlY2F1c2UgdGhlc2UgYXJlIGhlYWRlcnMgdGhhdCBjb21lIGluIHRoZSBib2R5ClNlY1J1bGUgTVVMVElQQVJUX1BBUlRfSEVBREVSUyAiQHJ4IGNvbnRlbnQtdHJhbnNmZXItZW5jb2Rpbmc6KC4qKSIgXAogICAgImlkOjkyMjEyMCxcCiAgICBwaGFzZToyLFwKICAgIGJsb2NrLFwKICAgIGNhcHR1cmUsXAogICAgdDpub25lLHQ6bG93ZXJjYXNlLFwKICAgIG1zZzonQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZyB3YXMgZGVwcmVjYXRlZCBieSByZmM3NTc4IGluIDIwMTUgYW5kIHNob3VsZCBub3QgYmUgdXNlZCcsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9JyxcCiAgICB0YWc6J2FwcGxpY2F0aW9uLW11bHRpJyxcCiAgICB0YWc6J2xhbmd1YWdlLW11bHRpJyxcCiAgICB0YWc6J3BsYXRmb3JtLW11bHRpJyxcCiAgICB0YWc6J2F0dGFjay1kZXByZWNhdGVkLWhlYWRlcicsXAogICAgdGFnOidPV0FTUF9DUlMnLFwKICAgIHRhZzonY2FwZWMvMjcyLzIyMCcsXAogICAgdGFnOidwYXJhbm9pYS1sZXZlbC8xJyxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgc2V2ZXJpdHk6J0NSSVRJQ0FMJyxcCiAgICBzZXR2YXI6J3R4LmFub21hbHlfc2NvcmVfcGwxPSsle3R4LmNyaXRpY2FsX2Fub21hbHlfc2NvcmV9JyIK",
	"REQUEST-930-APPLICATION-ATTACK-LFI.conf": "",
	"REQUEST-931-APPLICATION-ATTACK-RFI.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMKIyBSRkkgQXR0YWNrcwojCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMCAoZW1wdHkpID0tIChhcHBseSB1bmNvbmRpdGlvbmFsbHkpCiMKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTMxMDExLHBoYXNlOjEscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTMxLUFQUExJQ0FUSU9OLUFUVEFDSy1SRkkiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMSIgImlkOjkzMTAxMixwaGFzZToyLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTkzMS1BUFBMSUNBVElPTi1BVFRBQ0stUkZJIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMSAoZGVmYXVsdCkgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDEgb3IgaGlnaGVyKQojCgojIC09WyBSdWxlIExvZ2ljIF09LQojIFRoZXNlIHJ1bGVzIGxvb2sgZm9yIGNvbW1vbiB0eXBlcyBvZiBSZW1vdGUgRmlsZSBJbmNsdXNpb24gKFJGSSkgYXR0YWNrIG1ldGhvZHMuCiMJLSBVUkwgQ29udGFpbnMgYW4gSVAgQWRkcmVzcwojCS0gVGhlIFBIUCAiaW5jbHVkZSgpIiBGdW5jdGlvbgojCS0gUkZJIERhdGEgRW5kcyB3aXRoIFF1ZXN0aW9uIE1hcmsocykgKD8pCiMJLSBSRkkgSG9zdCBEb2Vzbid0IE1hdGNoIExvY2FsIEhvc3QKIwojIC09WyBSZWZlcmVuY2VzIF09LQojIGh0dHA6Ly9wcm9qZWN0cy53ZWJhcHBzZWMub3JnL1JlbW90ZS1GaWxlLUluY2x1c2lvbgojIGh0dHA6Ly90YWN0aWNhbHdlYmFwcHNlYy5ibG9nc3BvdC5jb20vMjAwOS8wNi9nZW5lcmljLXJlbW90ZS1maWxlLWluY2x1c2lvbi1hdHRhY2suaHRtbAojClNlY1J1bGUgQVJHUyAiQHJ4IF4oP2k6ZmlsZXxmdHBzP3xodHRwcz8pOlwvXC8oPzpcZHsxLDN9XC5cZHsxLDN9XC5cZHsxLDN9XC5cZHsxLDN9KSIgXAogICAgImlkOjkzMTEwMCxcCiAgICBwaGFzZToyLFwKICAgIGJsb2NrLFwKICAgIGNhcHR1cmUsXAogICAgdDpub25lLFwKICAgIG1zZzonUG9zc2libGUgUmVtb3RlIEZpbGUgSW5jbHVzaW9uIChSRkkpIEF0dGFjazogVVJMIFBhcmFtZXRlciB1c2luZyBJUCBBZGRyZXNzJyxcCiAgICBsb2dkYXRhOidNYXRjaGVkIERhdGE6ICV7VFguMH0gZm91bmQgd2l0aGluICV7TUFUQ0hFRF9WQVJfTkFNRX06ICV7TUFUQ0hFRF9WQVJ9JyxcCiAgICB0YWc6J2FwcGxpY2F0aW9uLW11bHRpJyxcCiAgICB0YWc6J2xhbmd1YWdlLW11bHRpJyxcCiAgICB0YWc6J3BsYXRmb3JtLW11bHRpJyxcCiAgICB0YWc6J2F0dGFjay1yZmknLFwKICAgIHRhZzoncGFyYW5vaWEtbGV2ZWwvMScsXAogICAgdGFnOidPV0FTUF9DUlMnLFwKICAgIHRhZzonY2FwZWMvMTAwMC8xNTIvMTc1LzI1MycsXAogICAgY3RsOmF1ZGl0TG9nUGFydHM9K0UsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIHNldmVyaXR5OidDUklUSUNBTCcsXAogICAgc2V0dmFyOid0eC5yZmlfc2NvcmU9KyV7dHguY3JpdGljYWxfYW5vbWFseV9zY29yZX0nLFwKICAgIHNldHZhcjondHguYW5vbWFseV9zY29yZV9wbDE9KyV7dHguY3JpdGljYWxfYW5vbWFseV9zY29yZX0nIgoKU2VjUnVsZSBRVUVSWV9TVFJJTkd8UkVRVUVTVF9CT0RZICJAcnggKD9pKSg/OlxiaW5jbHVkZVxzKlwoW14pXSp8bW9zQ29uZmlnX2Fic29sdXRlX3BhdGh8X0NPTkZcW3BhdGhcXXxfU0VSVkVSXFtET0NVTUVOVF9ST09UXF18R0FMTEVSWV9CQVNFRElSfHBhdGhcW2RvY3Jvb3RcXXxhcHBzZXJ2X3Jvb3R8Y29uZmlnXFtyb290X2RpclxdKT0oPzpmaWxlfGZ0cHM/fGh0dHBzPyk6XC9cLyIgXAogICAgImlkOjkzMTExMCxcCiAgICBwaGFzZToyLFwKICAgIGJsb2NrLFwKICAgIGNhcHR1cmUsXAogICAgdDpub25lLHQ6dXJsRGVjb2RlVW5pLFwKICAgIG1zZzonUG9zc2libGUgUmVtb3RlIEZpbGUgSW5jbHVzaW9uIChSRkkpIEF0dGFjazogQ29tbW9uIFJGSSBWdWxuZXJhYmxlIFBhcmFtZXRlciBOYW1lIHVzZWQgdy9VUkwgUGF5bG9hZCcsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9IGZvdW5kIHdpdGhpbiAle01BVENIRURfVkFSX05BTUV9OiAle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1tdWx0aScsXAogICAgdGFnOidwbGF0Zm9ybS1tdWx0aScsXAogICAgdGFnOidhdHRhY2stcmZpJyxcCiAgICB0YWc6J3BhcmFub2lhLWxldmVsLzEnLFwKICAgIHRhZzonT1dBU1BfQ1JTJyxcCiAgICB0YWc6J2NhcGVjLzEwMDAvMTUyLzE3NS8yNTMnLFwKICAgIGN0bDphdWRpdExvZ1BhcnRzPStFLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyxcCiAgICBzZXZlcml0eTonQ1JJVElDQUwnLFwKICAgIHNldHZhcjondHgucmZpX3Njb3JlPSsle3R4LmNyaXRpY2FsX2Fub21hbHlfc2NvcmV9JyxcCiAgICBzZXR2YXI6J3R4LmFub21hbHlfc2NvcmVfcGwxPSsle3R4LmNyaXRpY2FsX2Fub21hbHlfc2NvcmV9JyIKClNlY1J1bGUgQVJHUyAiQHJ4IF4oP2k6ZmlsZXxmdHBzP3xodHRwcz8pLio/XD8rJCIgXAogICAgImlkOjkzMTEyMCxcCiAgICBwaGFzZToyLFwKICAgIGJsb2NrLFwKICAgIGNhcHR1cmUsXAogICAgdDpub25lLFwKICAgIG1zZzonUG9zc2libGUgUmVtb3RlIEZpbGUgSW5jbHVzaW9uIChSRkkpIEF0dGFjazogVVJMIFBheWxvYWQgVXNlZCB3L1RyYWlsaW5nIFF1ZXN0aW9uIE1hcmsgQ2hhcmFjdGVyICg/KScsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9IGZvdW5kIHdpdGhpbiAle01BVENIRURfVkFSX05BTUV9OiAle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1tdWx0aScsXAogICAgdGFnOidwbGF0Zm9ybS1tdWx0aScsXAogICAgdGFnOidhdHRhY2stcmZpJyxcCiAgICB0YWc6J3BhcmFub2lhLWxldmVsLzEnLFwKICAgIHRhZzonT1dBU1BfQ1JTJyxcCiAgICB0YWc6J2NhcGVjLzEwMDAvMTUyLzE3NS8yNTMnLFwKICAgIGN0bDphdWRpdExvZ1BhcnRzPStFLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyxcCiAgICBzZXZlcml0eTonQ1JJVElDQUwnLFwKICAgIHNldHZhcjondHgucmZpX3Njb3JlPSsle3R4LmNyaXRpY2FsX2Fub21hbHlfc2NvcmV9JyxcCiAgICBzZXR2YXI6J3R4LmFub21hbHlfc2NvcmVfcGwxPSsle3R4LmNyaXRpY2FsX2Fub21hbHlfc2NvcmV9JyIKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAyIiAiaWQ6OTMxMDEzLHBoYXNlOjEscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTMxLUFQUExJQ0FUSU9OLUFUVEFDSy1SRkkiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMiIgImlkOjkzMTAxNCxwaGFzZToyLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTkzMS1BUFBMSUNBVElPTi1BVFRBQ0stUkZJIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMiA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogMiBvciBoaWdoZXIpCiMKClNlY1J1bGUgQVJHUyAiQHJ4IF4oP2k6ZmlsZXxmdHBzP3xodHRwcz8pOi8vKFteL10qKS4qJCIgXAogICAgImlkOjkzMTEzMCxcCiAgICBwaGFzZToyLFwKICAgIGJsb2NrLFwKICAgIGNhcHR1cmUsXAogICAgdDpub25lLFwKICAgIG1zZzonUG9zc2libGUgUmVtb3RlIEZpbGUgSW5jbHVzaW9uIChSRkkpIEF0dGFjazogT2ZmLURvbWFpbiBSZWZlcmVuY2UvTGluaycsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9IGZvdW5kIHdpdGhpbiAle01BVENIRURfVkFSX05BTUV9OiAle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1tdWx0aScsXAogICAgdGFnOidwbGF0Zm9ybS1tdWx0aScsXAogICAgdGFnOidhdHRhY2stcmZpJyxcCiAgICB0YWc6J09XQVNQX0NSUycsXAogICAgdGFnOidjYXBlYy8xMDAwLzE1Mi8xNzUvMjUzJyxcCiAgICB0YWc6J3BhcmFub2lhLWxldmVsLzInLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyxcCiAgICBzZXZlcml0eTonQ1JJVElDQUwnLFwKICAgIHNldHZhcjondHgucmZpX3BhcmFtZXRlcl8le01BVENIRURfVkFSX05BTUV9PS4le3R4LjF9JyxcCiAgICBjaGFpbiIKICAgIFNlY1J1bGUgVFg6L3JmaV9wYXJhbWV0ZXJfLiovICIhQGVuZHNXaXRoIC4le3JlcXVlc3RfaGVhZGVycy5ob3N0fSIgXAogICAgICAgICJjdGw6YXVkaXRMb2dQYXJ0cz0rRSxcCiAgICAgICAgc2V0dmFyOid0eC5yZmlfc2NvcmU9KyV7dHguY3JpdGljYWxfYW5vbWFseV9zY29yZX0nLFwKICAgICAgICBzZXR2YXI6J3R4LmFub21hbHlfc2NvcmVfcGwyPSsle3R4LmNyaXRpY2FsX2Fub21hbHlfc2NvcmV9JyIKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAzIiAiaWQ6OTMxMDE1LHBoYXNlOjEscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTMxLUFQUExJQ0FUSU9OLUFUVEFDSy1SRkkiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMyIgImlkOjkzMTAxNixwaGFzZToyLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTkzMS1BUFBMSUNBVElPTi1BVFRBQ0stUkZJIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMyA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogMyBvciBoaWdoZXIpCiMKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCA0IiAiaWQ6OTMxMDE3LHBoYXNlOjEscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTMxLUFQUExJQ0FUSU9OLUFUVEFDSy1SRkkiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgNCIgImlkOjkzMTAxOCxwaGFzZToyLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTkzMS1BUFBMSUNBVElPTi1BVFRBQ0stUkZJIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgNCA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogNCBvciBoaWdoZXIpCiMKCgoKIwojIC09IFBhcmFub2lhIExldmVscyBGaW5pc2hlZCA9LQojClNlY01hcmtlciAiRU5ELVJFUVVFU1QtOTMxLUFQUExJQ0FUSU9OLUFUVEFDSy1SRkkiCg==",
	"REQUEST-932-APPLICATION-ATTACK-RCE.conf": "",
	"REQUEST-933-APPLICATION-ATTACK-PHP.conf": "",
	"REQUEST-934-APPLICATION-ATTACK-NODEJS.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMCAoZW1wdHkpID0tIChhcHBseSB1bmNvbmRpdGlvbmFsbHkpCiMKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTM0MDExLHBoYXNlOjEscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTM0LUFQUExJQ0FUSU9OLUFUVEFDSy1OT0RFSlMiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMSIgImlkOjkzNDAxMixwaGFzZToyLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTkzNC1BUFBMSUNBVElPTi1BVFRBQ0stTk9ERUpTIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMSAoZGVmYXVsdCkgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDEgb3IgaGlnaGVyKQojCgoKIyBbIEluc2VjdXJlIHVuc2VyaWFsaXphdGlvbiAvIGdlbmVyaWMgUkNFIHNpZ25hdHVyZXMgXQojCiMgTGlicmFyaWVzIHBlcmZvcm1pbmcgaW5zZWN1cmUgdW5zZXJpYWxpemF0aW9uOgojIC0gbm9kZS1zZXJpYWxpemU6IF8kJE5EX0ZVTkMkJF8gKENWRS0yMDE3LTU5NDEpCiMgLSBmdW5jc3RlcjogX19qc19mdW5jdGlvbgojCiMgU2VlOgojIGh0dHBzOi8vb3BzZWN4LmNvbS9pbmRleC5waHAvMjAxNy8wMi8wOC9leHBsb2l0aW5nLW5vZGUtanMtZGVzZXJpYWxpemF0aW9uLWJ1Zy1mb3ItcmVtb3RlLWNvZGUtZXhlY3V0aW9uLwojIGh0dHBzOi8vd3d3LmFjdW5ldGl4LmNvbS9ibG9nL3dlYi1zZWN1cml0eS16b25lL2Rlc2VyaWFsaXphdGlvbi12dWxuZXJhYmlsaXRpZXMtYXR0YWNraW5nLWRlc2VyaWFsaXphdGlvbi1pbi1qcy8KIwojIFNvbWUgZ2VuZXJpYyBzbmlwcGV0cyB1c2VkOgojIC0gZnVuY3Rpb24oKSB7CiMgLSBuZXcgRnVuY3Rpb24oCiMgLSBldmFsKAojIC0gU3RyaW5nLmZyb21DaGFyQ29kZSgKIwojIExhc3QgdHdvIGFyZSB1c2VkIGJ5IG5vZGVqc3NoZWxsLnB5LAojIGh0dHBzOi8vZ2l0aHViLmNvbS9hamluYWJyYWhhbS9Ob2RlLkpzLVNlY3VyaXR5LUNvdXJzZS9ibG9iL21hc3Rlci9ub2RlanNzaGVsbC5weQojCiMgQXMgYmFzZTY0IGlzIHNvbWV0aW1lcyAoYnV0IG5vdCBhbHdheXMpIHVzZWQgdG8gZW5jb2RlIHNlcmlhbGl6ZWQgdmFsdWVzLAojIHVzZSBtdWx0aU1hdGNoIGFuZCB0OmJhc2U2NGRlY29kZS4KIwojIFJlZ2V4cCBnZW5lcmF0ZWQgZnJvbSB1dGlsL3JlZ2V4cC1hc3NlbWJsZS9yZWdleHAtOTM0MTAwLmRhdGEgdXNpbmcgUmVnZXhwOjpBc3NlbWJsZS4KIyBTZWUgaHR0cHM6Ly9jb3JlcnVsZXNldC5vcmcvMjAxOTA4MjYvb3B0aW1pemluZy1yZWd1bGFyLWV4cHJlc3Npb25zLyBmb3IgdXNhZ2UuCgpTZWNSdWxlIFJFUVVFU1RfQ09PS0lFU3whUkVRVUVTVF9DT09LSUVTOi9fX3V0bS98UkVRVUVTVF9DT09LSUVTX05BTUVTfEFSR1NfTkFNRVN8QVJHU3xYTUw6LyogIkByeCAoPzooPzpfKD86XCRcJE5EX0ZVTkNcJFwkX3xfanNfZnVuY3Rpb24pfCg/Om5ld1xzK0Z1bmN0aW9ufFxiZXZhbClccypcKHxTdHJpbmdccypcLlxzKmZyb21DaGFyQ29kZXxmdW5jdGlvblxzKlwoXHMqXClccyp7fHRoaXNcLmNvbnN0cnVjdG9yKXxtb2R1bGVcLmV4cG9ydHNccyo9KSIgXAogICAgImlkOjkzNDEwMCxcCiAgICBwaGFzZToyLFwKICAgIGJsb2NrLFwKICAgIGNhcHR1cmUsXAogICAgdDpub25lLHQ6dXJsRGVjb2RlVW5pLHQ6YmFzZTY0RGVjb2RlLFwKICAgIG1zZzonTm9kZS5qcyBJbmplY3Rpb24gQXR0YWNrJyxcCiAgICBsb2dkYXRhOidNYXRjaGVkIERhdGE6ICV7VFguMH0gZm91bmQgd2l0aGluICV7TUFUQ0hFRF9WQVJfTkFNRX06ICV7TUFUQ0hFRF9WQVJ9JyxcCiAgICB0YWc6J2FwcGxpY2F0aW9uLW11bHRpJyxcCiAgICB0YWc6J2xhbmd1YWdlLWphdmFzY3JpcHQnLFwKICAgIHRhZzoncGxhdGZvcm0tbXVsdGknLFwKICAgIHRhZzonYXR0YWNrLXJjZScsXAogICAgdGFnOidhdHRhY2staW5qZWN0aW9uLW5vZGVqcycsXAogICAgdGFnOidwYXJhbm9pYS1sZXZlbC8xJyxcCiAgICB0YWc6J09XQVNQX0NSUycsXAogICAgdGFnOidjYXBlYy8xMDAwLzE1Mi8yNDInLFwKICAgIGN0bDphdWRpdExvZ1BhcnRzPStFLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyxcCiAgICBzZXZlcml0eTonQ1JJVElDQUwnLFwKICAgIG11bHRpTWF0Y2gsXAogICAgc2V0dmFyOid0eC5yY2Vfc2NvcmU9KyV7dHguY3JpdGljYWxfYW5vbWFseV9zY29yZX0nLFwKICAgIHNldHZhcjondHguYW5vbWFseV9zY29yZV9wbDE9KyV7dHguY3JpdGljYWxfYW5vbWFseV9zY29yZX0nIgoKClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMiIgImlkOjkzNDAxMyxwaGFzZToxLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTkzNC1BUFBMSUNBVElPTi1BVFRBQ0stTk9ERUpTIgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDIiICJpZDo5MzQwMTQscGhhc2U6MixwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVRVUVTVC05MzQtQVBQTElDQVRJT04tQVRUQUNLLU5PREVKUyIKIwojIC09IFBhcmFub2lhIExldmVsIDIgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDIgb3IgaGlnaGVyKQojCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDMiICJpZDo5MzQwMTUscGhhc2U6MSxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVRVUVTVC05MzQtQVBQTElDQVRJT04tQVRUQUNLLU5PREVKUyIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAzIiAiaWQ6OTM0MDE2LHBoYXNlOjIscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTM0LUFQUExJQ0FUSU9OLUFUVEFDSy1OT0RFSlMiCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAzID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAzIG9yIGhpZ2hlcikKIwoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCA0IiAiaWQ6OTM0MDE3LHBoYXNlOjEscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTM0LUFQUExJQ0FUSU9OLUFUVEFDSy1OT0RFSlMiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgNCIgImlkOjkzNDAxOCxwaGFzZToyLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTkzNC1BUFBMSUNBVElPTi1BVFRBQ0stTk9ERUpTIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgNCA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogNCBvciBoaWdoZXIpCiMKCgoKIwojIC09IFBhcmFub2lhIExldmVscyBGaW5pc2hlZCA9LQojClNlY01hcmtlciAiRU5ELVJFUVVFU1QtOTM0LUFQUExJQ0FUSU9OLUFUVEFDSy1OT0RFSlMiCg==",
	"REQUEST-941-APPLICATION-ATTACK-XSS.conf": "",
	"REQUEST-942-APPLICATION-ATTACK-SQLI.conf": "",
	"REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMCAoZW1wdHkpID0tIChhcHBseSB1bmNvbmRpdGlvbmFsbHkpCiMKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTQzMDExLHBoYXNlOjEscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTQzLUFQUExJQ0FUSU9OLUFUVEFDSy1TRVNTSU9OLUZJWEFUSU9OIgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDEiICJpZDo5NDMwMTIscGhhc2U6MixwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVRVUVTVC05NDMtQVBQTElDQVRJT04tQVRUQUNLLVNFU1NJT04tRklYQVRJT04iCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAxIChkZWZhdWx0KSA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogMSBvciBoaWdoZXIpCiMKCiMKIyBTZXNzaW9uIGZpeGF0aW9uCiMKIyAtPVsgUmVmZXJlbmNlcyBdPS0KIyBodHRwOi8vcHJvamVjdHMud2ViYXBwc2VjLm9yZy9TZXNzaW9uLUZpeGF0aW9uCiMgaHR0cDovL3Byb2plY3RzLndlYmFwcHNlYy5vcmcvdy9wYWdlLzEzMjQ2OTYwL1Nlc3Npb24lMjBGaXhhdGlvbgojIGh0dHA6Ly9jYXBlYy5taXRyZS5vcmcvZGF0YS9kZWZpbml0aW9ucy82MS5odG1sCiMKU2VjUnVsZSBSRVFVRVNUX0NPT0tJRVN8IVJFUVVFU1RfQ09PS0lFUzovX191dG0vfFJFUVVFU1RfQ09PS0lFU19OQU1FU3xBUkdTX05BTUVTfEFSR1N8WE1MOi8qICJAcnggKD9pOlwuY29va2llXGIuKj87XFcqPyg/OmV4cGlyZXN8ZG9tYWluKVxXKj89fFxiaHR0cC1lcXVpdlxXK3NldC1jb29raWVcYikiIFwKICAgICJpZDo5NDMxMDAsXAogICAgcGhhc2U6MixcCiAgICBibG9jayxcCiAgICBjYXB0dXJlLFwKICAgIHQ6bm9uZSx0OnVybERlY29kZVVuaSxcCiAgICBtc2c6J1Bvc3NpYmxlIFNlc3Npb24gRml4YXRpb24gQXR0YWNrOiBTZXR0aW5nIENvb2tpZSBWYWx1ZXMgaW4gSFRNTCcsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9IGZvdW5kIHdpdGhpbiAle01BVENIRURfVkFSX05BTUV9OiAle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1tdWx0aScsXAogICAgdGFnOidwbGF0Zm9ybS1tdWx0aScsXAogICAgdGFnOidhdHRhY2stZml4YXRpb24nLFwKICAgIHRhZzoncGFyYW5vaWEtbGV2ZWwvMScsXAogICAgdGFnOidPV0FTUF9DUlMnLFwKICAgIHRhZzonY2FwZWMvMTAwMC8yMjUvMjEvNTkzLzYxJyxcCiAgICBjdGw6YXVkaXRMb2dQYXJ0cz0rRSxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgc2V2ZXJpdHk6J0NSSVRJQ0FMJyxcCiAgICBzZXR2YXI6J3R4LnNlc3Npb25fZml4YXRpb25fc2NvcmU9KyV7dHguY3JpdGljYWxfYW5vbWFseV9zY29yZX0nLFwKICAgIHNldHZhcjondHguYW5vbWFseV9zY29yZV9wbDE9KyV7dHguY3JpdGljYWxfYW5vbWFseV9zY29yZX0nIgoKClNlY1J1bGUgQVJHU19OQU1FUyAiQHJ4IF4oPzpqc2Vzc2lvbmlkfGFzcHNlc3Npb25pZHxhc3BcLm5ldF9zZXNzaW9uaWR8cGhwc2Vzc2lvbnxwaHBzZXNzaWR8d2VibG9naWNzZXNzaW9ufHNlc3Npb25faWR8c2Vzc2lvbi1pZHxjZmlkfGNmdG9rZW58Y2ZzaWR8anNlcnZzZXNzaW9ufGp3c2Vzc2lvbikkIiBcCiAgICAiaWQ6OTQzMTEwLFwKICAgIHBoYXNlOjIsXAogICAgYmxvY2ssXAogICAgY2FwdHVyZSxcCiAgICB0Om5vbmUsdDp1cmxEZWNvZGVVbmksdDpsb3dlcmNhc2UsXAogICAgbXNnOidQb3NzaWJsZSBTZXNzaW9uIEZpeGF0aW9uIEF0dGFjazogU2Vzc2lvbklEIFBhcmFtZXRlciBOYW1lIHdpdGggT2ZmLURvbWFpbiBSZWZlcmVyJyxcCiAgICBsb2dkYXRhOidNYXRjaGVkIERhdGE6ICV7VFguMH0gZm91bmQgd2l0aGluICV7TUFUQ0hFRF9WQVJfTkFNRX06ICV7TUFUQ0hFRF9WQVJ9JyxcCiAgICB0YWc6J2FwcGxpY2F0aW9uLW11bHRpJyxcCiAgICB0YWc6J2xhbmd1YWdlLW11bHRpJyxcCiAgICB0YWc6J3BsYXRmb3JtLW11bHRpJyxcCiAgICB0YWc6J2F0dGFjay1maXhhdGlvbicsXAogICAgdGFnOidwYXJhbm9pYS1sZXZlbC8xJyxcCiAgICB0YWc6J09XQVNQX0NSUycsXAogICAgdGFnOidjYXBlYy8xMDAwLzIyNS8yMS81OTMvNjEnLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyxcCiAgICBzZXZlcml0eTonQ1JJVElDQUwnLFwKICAgIGNoYWluIgogICAgU2VjUnVsZSBSRVFVRVNUX0hFQURFUlM6UmVmZXJlciAiQHJ4IF4oPzpodHxmKXRwcz86Ly8oLio/KVwvIiBcCiAgICAgICAgImNhcHR1cmUsXAogICAgICAgIGNoYWluIgogICAgICAgIFNlY1J1bGUgVFg6MSAiIUBlbmRzV2l0aCAle3JlcXVlc3RfaGVhZGVycy5ob3N0fSIgXAogICAgICAgICAgICAiY3RsOmF1ZGl0TG9nUGFydHM9K0UsXAogICAgICAgICAgICBzZXR2YXI6J3R4LnNlc3Npb25fZml4YXRpb25fc2NvcmU9KyV7dHguY3JpdGljYWxfYW5vbWFseV9zY29yZX0nLFwKICAgICAgICAgICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5jcml0aWNhbF9hbm9tYWx5X3Njb3JlfSciCgoKU2VjUnVsZSBBUkdTX05BTUVTICJAcnggXig/OmpzZXNzaW9uaWR8YXNwc2Vzc2lvbmlkfGFzcFwubmV0X3Nlc3Npb25pZHxwaHBzZXNzaW9ufHBocHNlc3NpZHx3ZWJsb2dpY3Nlc3Npb258c2Vzc2lvbl9pZHxzZXNzaW9uLWlkfGNmaWR8Y2Z0b2tlbnxjZnNpZHxqc2VydnNlc3Npb258andzZXNzaW9uKSQiIFwKICAgICJpZDo5NDMxMjAsXAogICAgcGhhc2U6MixcCiAgICBibG9jayxcCiAgICBjYXB0dXJlLFwKICAgIHQ6bm9uZSx0OnVybERlY29kZVVuaSx0Omxvd2VyY2FzZSxcCiAgICBtc2c6J1Bvc3NpYmxlIFNlc3Npb24gRml4YXRpb24gQXR0YWNrOiBTZXNzaW9uSUQgUGFyYW1ldGVyIE5hbWUgd2l0aCBObyBSZWZlcmVyJyxcCiAgICBsb2dkYXRhOidNYXRjaGVkIERhdGE6ICV7VFguMH0gZm91bmQgd2l0aGluICV7TUFUQ0hFRF9WQVJfTkFNRX06ICV7TUFUQ0hFRF9WQVJ9JyxcCiAgICB0YWc6J2FwcGxpY2F0aW9uLW11bHRpJyxcCiAgICB0YWc6J2xhbmd1YWdlLW11bHRpJyxcCiAgICB0YWc6J3BsYXRmb3JtLW11bHRpJyxcCiAgICB0YWc6J2F0dGFjay1maXhhdGlvbicsXAogICAgdGFnOidwYXJhbm9pYS1sZXZlbC8xJyxcCiAgICB0YWc6J09XQVNQX0NSUycsXAogICAgdGFnOidjYXBlYy8xMDAwLzIyNS8yMS81OTMvNjEnLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyxcCiAgICBzZXZlcml0eTonQ1JJVElDQUwnLFwKICAgIGNoYWluIgogICAgU2VjUnVsZSAmUkVRVUVTVF9IRUFERVJTOlJlZmVyZXIgIkBlcSAwIiBcCiAgICAgICAgImN0bDphdWRpdExvZ1BhcnRzPStFLFwKICAgICAgICBzZXR2YXI6J3R4LnNlc3Npb25fZml4YXRpb25fc2NvcmU9KyV7dHguY3JpdGljYWxfYW5vbWFseV9zY29yZX0nLFwKICAgICAgICBzZXR2YXI6J3R4LmFub21hbHlfc2NvcmVfcGwxPSsle3R4LmNyaXRpY2FsX2Fub21hbHlfc2NvcmV9JyIKCgoKClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMiIgImlkOjk0MzAxMyxwaGFzZToxLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTk0My1BUFBMSUNBVElPTi1BVFRBQ0stU0VTU0lPTi1GSVhBVElPTiIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAyIiAiaWQ6OTQzMDE0LHBoYXNlOjIscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTQzLUFQUExJQ0FUSU9OLUFUVEFDSy1TRVNTSU9OLUZJWEFUSU9OIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMiA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogMiBvciBoaWdoZXIpCiMKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAzIiAiaWQ6OTQzMDE1LHBoYXNlOjEscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTQzLUFQUExJQ0FUSU9OLUFUVEFDSy1TRVNTSU9OLUZJWEFUSU9OIgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDMiICJpZDo5NDMwMTYscGhhc2U6MixwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVRVUVTVC05NDMtQVBQTElDQVRJT04tQVRUQUNLLVNFU1NJT04tRklYQVRJT04iCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAzID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAzIG9yIGhpZ2hlcikKIwoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDQiICJpZDo5NDMwMTcscGhhc2U6MSxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVRVUVTVC05NDMtQVBQTElDQVRJT04tQVRUQUNLLVNFU1NJT04tRklYQVRJT04iClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgNCIgImlkOjk0MzAxOCxwaGFzZToyLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTk0My1BUFBMSUNBVElPTi1BVFRBQ0stU0VTU0lPTi1GSVhBVElPTiIKIwojIC09IFBhcmFub2lhIExldmVsIDQgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDQgb3IgaGlnaGVyKQojCgoKCiMKIyAtPSBQYXJhbm9pYSBMZXZlbHMgRmluaXNoZWQgPS0KIwpTZWNNYXJrZXIgIkVORC1SRVFVRVNULTk0My1BUFBMSUNBVElPTi1BVFRBQ0stU0VTU0lPTi1GSVhBVElPTiIK",
	"REQUEST-944-APPLICATION-ATTACK-JAVA.conf": "",
	"REQUEST-949-BLOCKING-EVALUATION.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMCAoZW1wdHkpID0tIChhcHBseSB1bmNvbmRpdGlvbmFsbHkpCiMKCiMgU3VtbWluZyB1cCB0aGUgYW5vbWFseSBzY29yZS4KCiMgTk9URTogdHguYW5vbWFseV9zY29yZSBzaG91bGQgbm90IGJlIHNldCBpbml0aWFsbHksIGJ1dCBtYXNraW5nIHdvdWxkIGxlYWQgdG8gZGlmZmljdWx0IGJ1Z3MuCiMgU28gd2UgYWRkIHRvIGl0LgpTZWNSdWxlIFRYOlBBUkFOT0lBX0xFVkVMICJAZ2UgMSIgXAogICAgImlkOjk0OTA2MCxcCiAgICBwaGFzZToyLFwKICAgIHBhc3MsXAogICAgdDpub25lLFwKICAgIG5vbG9nLFwKICAgIHNldHZhcjondHguYW5vbWFseV9zY29yZT0rJXt0eC5hbm9tYWx5X3Njb3JlX3BsMX0nIgoKU2VjUnVsZSBUWDpQQVJBTk9JQV9MRVZFTCAiQGdlIDIiIFwKICAgICJpZDo5NDkwNjEsXAogICAgcGhhc2U6MixcCiAgICBwYXNzLFwKICAgIHQ6bm9uZSxcCiAgICBub2xvZyxcCiAgICBzZXR2YXI6J3R4LmFub21hbHlfc2NvcmU9KyV7dHguYW5vbWFseV9zY29yZV9wbDJ9JyIKClNlY1J1bGUgVFg6UEFSQU5PSUFfTEVWRUwgIkBnZSAzIiBcCiAgICAiaWQ6OTQ5MDYyLFwKICAgIHBoYXNlOjIsXAogICAgcGFzcyxcCiAgICB0Om5vbmUsXAogICAgbm9sb2csXAogICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlPSsle3R4LmFub21hbHlfc2NvcmVfcGwzfSciCgpTZWNSdWxlIFRYOlBBUkFOT0lBX0xFVkVMICJAZ2UgNCIgXAogICAgImlkOjk0OTA2MyxcCiAgICBwaGFzZToyLFwKICAgIHBhc3MsXAogICAgdDpub25lLFwKICAgIG5vbG9nLFwKICAgIHNldHZhcjondHguYW5vbWFseV9zY29yZT0rJXt0eC5hbm9tYWx5X3Njb3JlX3BsNH0nIgoKClNlY01hcmtlciAiQkVHSU4tUkVRVUVTVC1CTE9DS0lORy1FVkFMIgoKIyBUaGVzZSBydWxlcyB1c2UgdGhlIGFub21hbHkgc2NvcmUgc2V0dGluZ3Mgc3BlY2lmaWVkIGluIHRoZSAxMCBjb25maWcgZmlsZS4KIyBZb3Ugc2hvdWxkIGFsc28gc2V0IHRoZSBkZXNpcmVkIGRpc3J1cHRpdmUgYWN0aW9uIChkZW55LCByZWRpcmVjdCwgZXRjLi4uKS4KIwojIC09WyBJUCBSZXB1dGF0aW9uIENoZWNrcyBdPS0KIwojIEJsb2NrIGJhc2VkIG9uIHZhcmlhYmxlIElQLlJFUFVUX0JMT0NLX0ZMQUcgYW5kIFRYLkRPX1JFUFVUX0JMT0NLCiMKU2VjUnVsZSBJUDpSRVBVVF9CTE9DS19GTEFHICJAZXEgMSIgXAogICAgImlkOjk0OTEwMCxcCiAgICBwaGFzZToyLFwKICAgIGRlbnksXAogICAgbG9nLFwKICAgIG1zZzonUmVxdWVzdCBEZW5pZWQgYnkgSVAgUmVwdXRhdGlvbiBFbmZvcmNlbWVudCcsXAogICAgbG9nZGF0YTonUHJldmlvdXMgQmxvY2sgUmVhc29uOiAle2lwLnJlcHV0X2Jsb2NrX3JlYXNvbn0nLFwKICAgIHRhZzonYXBwbGljYXRpb24tbXVsdGknLFwKICAgIHRhZzonbGFuZ3VhZ2UtbXVsdGknLFwKICAgIHRhZzoncGxhdGZvcm0tbXVsdGknLFwKICAgIHRhZzonYXR0YWNrLXJlcHV0YXRpb24taXAnLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyxcCiAgICBzZXZlcml0eTonQ1JJVElDQUwnLFwKICAgIGNoYWluIgogICAgU2VjUnVsZSBUWDpET19SRVBVVF9CTE9DSyAiQGVxIDEiIFwKICAgICAgICAic2V0dmFyOid0eC5pbmJvdW5kX2Fub21hbHlfc2NvcmU9JXt0eC5hbm9tYWx5X3Njb3JlfSciCgojCiMgLT1bIEFub21hbHkgTW9kZTogT3ZlcmFsbCBUcmFuc2FjdGlvbiBBbm9tYWx5IFNjb3JlIF09LQojClNlY1J1bGUgVFg6QU5PTUFMWV9TQ09SRSAiQGdlICV7dHguaW5ib3VuZF9hbm9tYWx5X3Njb3JlX3RocmVzaG9sZH0iIFwKICAgICJpZDo5NDkxMTAsXAogICAgcGhhc2U6MixcCiAgICBkZW55LFwKICAgIHQ6bm9uZSxcCiAgICBsb2csXAogICAgbXNnOidJbmJvdW5kIEFub21hbHkgU2NvcmUgRXhjZWVkZWQgKFRvdGFsIFNjb3JlOiAle1RYLkFOT01BTFlfU0NPUkV9KScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1tdWx0aScsXAogICAgdGFnOidwbGF0Zm9ybS1tdWx0aScsXAogICAgdGFnOidhdHRhY2stZ2VuZXJpYycsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIHNldmVyaXR5OidDUklUSUNBTCcsXAogICAgc2V0dmFyOid0eC5pbmJvdW5kX2Fub21hbHlfc2NvcmU9JXt0eC5hbm9tYWx5X3Njb3JlfSciCgoKClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMSIgImlkOjk0OTAxMSxwaGFzZToxLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVFVRVNULTk0OS1CTE9DS0lORy1FVkFMVUFUSU9OIgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDEiICJpZDo5NDkwMTIscGhhc2U6MixwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVRVUVTVC05NDktQkxPQ0tJTkctRVZBTFVBVElPTiIKIwojIC09IFBhcmFub2lhIExldmVsIDEgKGRlZmF1bHQpID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAxIG9yIGhpZ2hlcikKIwoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDIiICJpZDo5NDkwMTMscGhhc2U6MSxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVRVUVTVC05NDktQkxPQ0tJTkctRVZBTFVBVElPTiIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAyIiAiaWQ6OTQ5MDE0LHBoYXNlOjIscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTQ5LUJMT0NLSU5HLUVWQUxVQVRJT04iCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAyID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAyIG9yIGhpZ2hlcikKIwoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDMiICJpZDo5NDkwMTUscGhhc2U6MSxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVRVUVTVC05NDktQkxPQ0tJTkctRVZBTFVBVElPTiIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAzIiAiaWQ6OTQ5MDE2LHBoYXNlOjIscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTQ5LUJMT0NLSU5HLUVWQUxVQVRJT04iCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAzID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAzIG9yIGhpZ2hlcikKIwoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDQiICJpZDo5NDkwMTcscGhhc2U6MSxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVRVUVTVC05NDktQkxPQ0tJTkctRVZBTFVBVElPTiIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCA0IiAiaWQ6OTQ5MDE4LHBoYXNlOjIscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFUVVFU1QtOTQ5LUJMT0NLSU5HLUVWQUxVQVRJT04iCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCA0ID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiA0IG9yIGhpZ2hlcikKIwoKCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWxzIEZpbmlzaGVkID0tCiMKU2VjTWFya2VyICJFTkQtUkVRVUVTVC05NDktQkxPQ0tJTkctRVZBTFVBVElPTiIK",
	"RESPONSE-950-DATA-LEAKAGES.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojIFRoZSBwYXJhbm9pYSBsZXZlbCBza2lwIHJ1bGVzIDk1MDAyMCwgOTUwMDIxIGFuZCA5NTAwMjIgaGF2ZSBvZGQKIyBudW1iZXJzIG5vdCBpbiBzeW5jIHdpdGggb3RoZXIgcGFyYW5vaWEgbGV2ZWwgc2tpcCBydWxlcyBpbiBvdGhlcgojIGZpbGVzLiBUaGlzIGlzIGRvbmUgdG8gYXZvaWQgcnVsZSBpZCBjb2xsaXNpb25zIHdpdGggQ1JTdjIuCiMgVGhpcyBpcyBhbHNvIHRydWUgZm9yIHJ1bGUgOTUwMTMwLgoKIwojIC09IFBhcmFub2lhIExldmVsIDAgKGVtcHR5KSA9LSAoYXBwbHkgdW5jb25kaXRpb25hbGx5KQojCgoKClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMSIgImlkOjk1MDAyMCxwaGFzZTozLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVNQT05TRS05NTAtREFUQS1MRUFLQUdFUyIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTUwMDIxLHBoYXNlOjQscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1MC1EQVRBLUxFQUtBR0VTIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMSAoZGVmYXVsdCkgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDEgb3IgaGlnaGVyKQojCgojCiMgLT1bIERpcmVjdG9yeSBMaXN0aW5nIF09LQojClNlY1J1bGUgUkVTUE9OU0VfQk9EWSAiQHJ4ICg/OjwoPzpUSVRMRT5JbmRleCBvZi4qPzxIfHRpdGxlPkluZGV4IG9mLio/PGgpMT5JbmRleCBvZnw+XFtUbyBQYXJlbnQgRGlyZWN0b3J5XF08XC9bQWFdPjxicj4pIiBcCiAgICAiaWQ6OTUwMTMwLFwKICAgIHBoYXNlOjQsXAogICAgYmxvY2ssXAogICAgY2FwdHVyZSxcCiAgICB0Om5vbmUsXAogICAgbXNnOidEaXJlY3RvcnkgTGlzdGluZycsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9IGZvdW5kIHdpdGhpbiAle01BVENIRURfVkFSX05BTUV9OiAle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1tdWx0aScsXAogICAgdGFnOidwbGF0Zm9ybS1tdWx0aScsXAogICAgdGFnOidhdHRhY2stZGlzY2xvc3VyZScsXAogICAgdGFnOidwYXJhbm9pYS1sZXZlbC8xJyxcCiAgICB0YWc6J09XQVNQX0NSUycsXAogICAgdGFnOidjYXBlYy8xMDAwLzExOC8xMTYvNTQvMTI3JyxcCiAgICB0YWc6J1BDSS82LjUuNicsXAogICAgY3RsOmF1ZGl0TG9nUGFydHM9K0UsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIHNldmVyaXR5OidFUlJPUicsXAogICAgc2V0dmFyOid0eC5vdXRib3VuZF9hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfScsXAogICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfSciCgojCiMgLT1bIENHSSBTb3VyY2UgQ29kZSBMZWFrYWdlIF09LQojCiMgQSBDR0kgc2NyaXB0IGJlZ2lucyBub3JtYWxseSB3aXRoICMhIGFuZCB0aGUgaW50ZXJwcmV0ZXIsCiMgZm9yIGV4YW1wbGU6CiMKIyAjIS91c3IvYmluL3BlcmwKIyAjIS91c3IvYmluL3B5dGhvbgojICMhL3Vzci9iaW4vcnVieQojCiMgSWYgdGhlIENHSSBzY3JpcHQgcHJvY2Vzc29ycyBvciBNSU1FIHR5cGUgaGFuZGxlcnMgYXJlIG1pc2NvbmZpZ3VyZWQsCiMgdGhlIHNjcmlwdCdzIHNvdXJjZSBjb2RlIGNvdWxkIGJlIGVycm9uZW91c2x5IHJldHVybmVkIHRvIHRoZSBjbGllbnQuClNlY1J1bGUgUkVTUE9OU0VfQk9EWSAiQHJ4IF4jXCFccz8vIiBcCiAgICAiaWQ6OTUwMTQwLFwKICAgIHBoYXNlOjQsXAogICAgYmxvY2ssXAogICAgY2FwdHVyZSxcCiAgICB0Om5vbmUsXAogICAgbXNnOidDR0kgc291cmNlIGNvZGUgbGVha2FnZScsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9IGZvdW5kIHdpdGhpbiAle01BVENIRURfVkFSX05BTUV9OiAle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1tdWx0aScsXAogICAgdGFnOidwbGF0Zm9ybS1tdWx0aScsXAogICAgdGFnOidhdHRhY2stZGlzY2xvc3VyZScsXAogICAgdGFnOidwYXJhbm9pYS1sZXZlbC8xJyxcCiAgICB0YWc6J09XQVNQX0NSUycsXAogICAgdGFnOidjYXBlYy8xMDAwLzExOC8xMTYnLFwKICAgIHRhZzonUENJLzYuNS42JyxcCiAgICBjdGw6YXVkaXRMb2dQYXJ0cz0rRSxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgc2V2ZXJpdHk6J0VSUk9SJyxcCiAgICBzZXR2YXI6J3R4Lm91dGJvdW5kX2Fub21hbHlfc2NvcmVfcGwxPSsle3R4LmVycm9yX2Fub21hbHlfc2NvcmV9JyxcCiAgICBzZXR2YXI6J3R4LmFub21hbHlfc2NvcmVfcGwxPSsle3R4LmVycm9yX2Fub21hbHlfc2NvcmV9JyIKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDIiICJpZDo5NTAwMTMscGhhc2U6MyxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTUwLURBVEEtTEVBS0FHRVMiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMiIgImlkOjk1MDAxNCxwaGFzZTo0LHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVNQT05TRS05NTAtREFUQS1MRUFLQUdFUyIKIwojIC09IFBhcmFub2lhIExldmVsIDIgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDIgb3IgaGlnaGVyKQojCgojCiMgLT1bIFRoZSBhcHBsaWNhdGlvbiBpcyBub3QgYXZhaWxhYmxlIC0gNXh4IGxldmVsIHN0YXR1cyBjb2RlIF09LQojClNlY1J1bGUgUkVTUE9OU0VfU1RBVFVTICJAcnggXjVcZHsyfSQiIFwKICAgICJpZDo5NTAxMDAsXAogICAgcGhhc2U6NCxcCiAgICBibG9jayxcCiAgICBjYXB0dXJlLFwKICAgIHQ6bm9uZSxcCiAgICBtc2c6J1RoZSBBcHBsaWNhdGlvbiBSZXR1cm5lZCBhIDUwMC1MZXZlbCBTdGF0dXMgQ29kZScsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9IGZvdW5kIHdpdGhpbiAle01BVENIRURfVkFSX05BTUV9OiAle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1tdWx0aScsXAogICAgdGFnOidwbGF0Zm9ybS1tdWx0aScsXAogICAgdGFnOidhdHRhY2stZGlzY2xvc3VyZScsXAogICAgdGFnOidQQ0kvNi41LjYnLFwKICAgIHRhZzoncGFyYW5vaWEtbGV2ZWwvMicsXAogICAgdGFnOidPV0FTUF9DUlMnLFwKICAgIHRhZzonY2FwZWMvMTAwMC8xNTInLFwKICAgIGN0bDphdWRpdExvZ1BhcnRzPStFLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyxcCiAgICBzZXZlcml0eTonRVJST1InLFwKICAgIHNldHZhcjondHgub3V0Ym91bmRfYW5vbWFseV9zY29yZV9wbDI9KyV7dHguZXJyb3JfYW5vbWFseV9zY29yZX0nLFwKICAgIHNldHZhcjondHguYW5vbWFseV9zY29yZV9wbDI9KyV7dHguZXJyb3JfYW5vbWFseV9zY29yZX0nIgoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDMiICJpZDo5NTAwMTUscGhhc2U6MyxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTUwLURBVEEtTEVBS0FHRVMiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMyIgImlkOjk1MDAxNixwaGFzZTo0LHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVNQT05TRS05NTAtREFUQS1MRUFLQUdFUyIKIwojIC09IFBhcmFub2lhIExldmVsIDMgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDMgb3IgaGlnaGVyKQojCgoKClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgNCIgImlkOjk1MDAxNyxwaGFzZTozLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVNQT05TRS05NTAtREFUQS1MRUFLQUdFUyIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCA0IiAiaWQ6OTUwMDIyLHBoYXNlOjQscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1MC1EQVRBLUxFQUtBR0VTIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgNCA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogNCBvciBoaWdoZXIpCiMKCgoKIwojIC09IFBhcmFub2lhIExldmVscyBGaW5pc2hlZCA9LQojClNlY01hcmtlciAiRU5ELVJFU1BPTlNFLTk1MC1EQVRBLUxFQUtBR0VTIgo=",
	"RESPONSE-951-DATA-LEAKAGES-SQL.conf": "",
	"RESPONSE-952-DATA-LEAKAGES-JAVA.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMCAoZW1wdHkpID0tIChhcHBseSB1bmNvbmRpdGlvbmFsbHkpCiMKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTUyMDExLHBoYXNlOjMscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1Mi1EQVRBLUxFQUtBR0VTLUpBVkEiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMSIgImlkOjk1MjAxMixwaGFzZTo0LHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVNQT05TRS05NTItREFUQS1MRUFLQUdFUy1KQVZBIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMSAoZGVmYXVsdCkgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDEgb3IgaGlnaGVyKQojCgojCiMgLT1bIEphdmEgU291cmNlIENvZGUgTGVha2FnZXMgXT0tCiMKU2VjUnVsZSBSRVNQT05TRV9CT0RZICJAcG1Gcm9tRmlsZSBqYXZhLWNvZGUtbGVha2FnZXMuZGF0YSIgXAogICAgImlkOjk1MjEwMCxcCiAgICBwaGFzZTo0LFwKICAgIGJsb2NrLFwKICAgIGNhcHR1cmUsXAogICAgdDpub25lLFwKICAgIG1zZzonSmF2YSBTb3VyY2UgQ29kZSBMZWFrYWdlJyxcCiAgICBsb2dkYXRhOidNYXRjaGVkIERhdGE6ICV7VFguMH0gZm91bmQgd2l0aGluICV7TUFUQ0hFRF9WQVJfTkFNRX06ICV7TUFUQ0hFRF9WQVJ9JyxcCiAgICB0YWc6J2FwcGxpY2F0aW9uLW11bHRpJyxcCiAgICB0YWc6J2xhbmd1YWdlLWphdmEnLFwKICAgIHRhZzoncGxhdGZvcm0tbXVsdGknLFwKICAgIHRhZzonYXR0YWNrLWRpc2Nsb3N1cmUnLFwKICAgIHRhZzoncGFyYW5vaWEtbGV2ZWwvMScsXAogICAgdGFnOidPV0FTUF9DUlMnLFwKICAgIHRhZzonY2FwZWMvMTAwMC8xMTgvMTE2JyxcCiAgICB0YWc6J1BDSS82LjUuNicsXAogICAgY3RsOmF1ZGl0TG9nUGFydHM9K0UsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIHNldmVyaXR5OidFUlJPUicsXAogICAgc2V0dmFyOid0eC5vdXRib3VuZF9hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfScsXAogICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfSciCgojCiMgLT1bIEphdmEgRXJyb3JzIF09LQojCiMgUmVmOiBodHRwczovL2dpdGh1Yi5jb20vYW5kcmVzcmlhbmNoby93M2FmL2Jsb2IvbWFzdGVyL3czYWYvcGx1Z2lucy9ncmVwL2Vycm9yX3BhZ2VzLnB5CiMKU2VjUnVsZSBSRVNQT05TRV9CT0RZICJAcG1Gcm9tRmlsZSBqYXZhLWVycm9ycy5kYXRhIiBcCiAgICAiaWQ6OTUyMTEwLFwKICAgIHBoYXNlOjQsXAogICAgYmxvY2ssXAogICAgY2FwdHVyZSxcCiAgICB0Om5vbmUsXAogICAgbXNnOidKYXZhIEVycm9ycycsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9IGZvdW5kIHdpdGhpbiAle01BVENIRURfVkFSX05BTUV9OiAle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1qYXZhJyxcCiAgICB0YWc6J3BsYXRmb3JtLW11bHRpJyxcCiAgICB0YWc6J2F0dGFjay1kaXNjbG9zdXJlJyxcCiAgICB0YWc6J3BhcmFub2lhLWxldmVsLzEnLFwKICAgIHRhZzonT1dBU1BfQ1JTJyxcCiAgICB0YWc6J2NhcGVjLzEwMDAvMTE4LzExNicsXAogICAgdGFnOidQQ0kvNi41LjYnLFwKICAgIGN0bDphdWRpdExvZ1BhcnRzPStFLFwKICAgIHZlcjonT1dBU1BfQ1JTLzMuMy41JyxcCiAgICBzZXZlcml0eTonRVJST1InLFwKICAgIHNldHZhcjondHgub3V0Ym91bmRfYW5vbWFseV9zY29yZV9wbDE9KyV7dHguZXJyb3JfYW5vbWFseV9zY29yZX0nLFwKICAgIHNldHZhcjondHguYW5vbWFseV9zY29yZV9wbDE9KyV7dHguZXJyb3JfYW5vbWFseV9zY29yZX0nIgoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDIiICJpZDo5NTIwMTMscGhhc2U6MyxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTUyLURBVEEtTEVBS0FHRVMtSkFWQSIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAyIiAiaWQ6OTUyMDE0LHBoYXNlOjQscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1Mi1EQVRBLUxFQUtBR0VTLUpBVkEiCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAyID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAyIG9yIGhpZ2hlcikKIwoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDMiICJpZDo5NTIwMTUscGhhc2U6MyxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTUyLURBVEEtTEVBS0FHRVMtSkFWQSIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAzIiAiaWQ6OTUyMDE2LHBoYXNlOjQscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1Mi1EQVRBLUxFQUtBR0VTLUpBVkEiCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAzID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAzIG9yIGhpZ2hlcikKIwoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDQiICJpZDo5NTIwMTcscGhhc2U6MyxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTUyLURBVEEtTEVBS0FHRVMtSkFWQSIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCA0IiAiaWQ6OTUyMDE4LHBoYXNlOjQscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1Mi1EQVRBLUxFQUtBR0VTLUpBVkEiCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCA0ID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiA0IG9yIGhpZ2hlcikKIwoKCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWxzIEZpbmlzaGVkID0tCiMKU2VjTWFya2VyICJFTkQtUkVTUE9OU0UtOTUyLURBVEEtTEVBS0FHRVMtSkFWQSIK",
	"RESPONSE-953-DATA-LEAKAGES-PHP.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMCAoZW1wdHkpID0tIChhcHBseSB1bmNvbmRpdGlvbmFsbHkpCiMKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTUzMDExLHBoYXNlOjMscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1My1EQVRBLUxFQUtBR0VTLVBIUCIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTUzMDEyLHBoYXNlOjQscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1My1EQVRBLUxFQUtBR0VTLVBIUCIKIwojIC09IFBhcmFub2lhIExldmVsIDEgKGRlZmF1bHQpID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAxIG9yIGhpZ2hlcikKIwoKIwojIC09WyBQSFAgRXJyb3IgTWVzc2FnZSBMZWFrYWdlIF09LQojClNlY1J1bGUgUkVTUE9OU0VfQk9EWSAiQHBtRnJvbUZpbGUgcGhwLWVycm9ycy5kYXRhIiBcCiAgICAiaWQ6OTUzMTAwLFwKICAgIHBoYXNlOjQsXAogICAgYmxvY2ssXAogICAgY2FwdHVyZSxcCiAgICB0Om5vbmUsXAogICAgbXNnOidQSFAgSW5mb3JtYXRpb24gTGVha2FnZScsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9IGZvdW5kIHdpdGhpbiAle01BVENIRURfVkFSX05BTUV9OiAle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1waHAnLFwKICAgIHRhZzoncGxhdGZvcm0tbXVsdGknLFwKICAgIHRhZzonYXR0YWNrLWRpc2Nsb3N1cmUnLFwKICAgIHRhZzoncGFyYW5vaWEtbGV2ZWwvMScsXAogICAgdGFnOidPV0FTUF9DUlMnLFwKICAgIHRhZzonY2FwZWMvMTAwMC8xMTgvMTE2JyxcCiAgICB0YWc6J1BDSS82LjUuNicsXAogICAgY3RsOmF1ZGl0TG9nUGFydHM9K0UsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIHNldmVyaXR5OidFUlJPUicsXAogICAgc2V0dmFyOid0eC5vdXRib3VuZF9hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfScsXAogICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfSciCgojCiMgLT1bIFBIUCBzb3VyY2UgY29kZSBsZWFrYWdlIF09LQojCiMgRGV0ZWN0IHNvbWUgY29tbW9uIFBIUCBrZXl3b3JkcyBpbiBvdXRwdXQuCiMKU2VjUnVsZSBSRVNQT05TRV9CT0RZICJAcnggKD86XGIoPzpmKD86dHBfKD86bmJfKT9mPyg/OmdlfHB1KXR8Z2V0KD86cz9zfGMpfHNjYW5mfHdyaXRlfG9wZW58cmVhZCl8Z3ooPzooPzplbmNvZHx3cml0KWV8Y29tcHJlc3N8b3BlbnxyZWFkKXxzKD86ZXNzaW9uX3N0YXJ0fGNhbmRpcil8cmVhZCg/Oig/Omd6KT9maWxlfGRpcil8bW92ZV91cGxvYWRlZF9maWxlfCg/OnByb2NffGJ6KW9wZW58Y2FsbF91c2VyX2Z1bmMpfFwkXyg/Oig/OnBvc3xnZSl0fHNlc3Npb24pKVxiIiBcCiAgICAiaWQ6OTUzMTEwLFwKICAgIHBoYXNlOjQsXAogICAgYmxvY2ssXAogICAgY2FwdHVyZSxcCiAgICB0Om5vbmUsXAogICAgbXNnOidQSFAgc291cmNlIGNvZGUgbGVha2FnZScsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9IGZvdW5kIHdpdGhpbiAle01BVENIRURfVkFSX05BTUV9OiAle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1waHAnLFwKICAgIHRhZzoncGxhdGZvcm0tbXVsdGknLFwKICAgIHRhZzonYXR0YWNrLWRpc2Nsb3N1cmUnLFwKICAgIHRhZzoncGFyYW5vaWEtbGV2ZWwvMScsXAogICAgdGFnOidPV0FTUF9DUlMnLFwKICAgIHRhZzonY2FwZWMvMTAwMC8xMTgvMTE2JyxcCiAgICB0YWc6J1BDSS82LjUuNicsXAogICAgY3RsOmF1ZGl0TG9nUGFydHM9K0UsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIHNldmVyaXR5OidFUlJPUicsXAogICAgc2V0dmFyOid0eC5vdXRib3VuZF9hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfScsXAogICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfSciCgojIERldGVjdCB0aGUgcHJlc2VuY2Ugb2YgdGhlIFBIUCBvcGVuIHRhZyAiPD8iIG9yICI8P3BocCIgaW4gb3V0cHV0LgojCiMgVG8gcHJldmVudCBmYWxzZSBwb3NpdGl2ZXMgZHVlIHRvIHRoZSBzaG9ydCAiPD8iIHNlcXVlbmNlLCBhbiBhdHRlbXB0CiMgaXMgbWFkZSB0byBzdG9wIGFsZXJ0cyBpbiBiaW5hcnkgb3V0cHV0LiBUaGlzIGlzIGRvbmUgYnkgZGV0ZWN0aW5nCiMgc29tZSBjb21tb24gYmluYXJ5IGZpbGUgZm9ybWF0IGhlYWRlcnMsIHN1Y2ggYXMgZ3ppcCAoXHgxZlx4OGJceDA4KSwKIyBwbmcgKElIRFIpLCBtcDMgKElEMyksIG1vdmllIGZvcm1hdHMgZXQgY2V0ZXJhLgojCiMgTm90IHN1cHBvcnRlZCBieSByZTIgKD8hcmUpLgojClNlY1J1bGUgUkVTUE9OU0VfQk9EWSAiQHJ4IDxcPyg/IXhtbCkiIFwKICAgICJpZDo5NTMxMjAsXAogICAgcGhhc2U6NCxcCiAgICBibG9jayxcCiAgICBjYXB0dXJlLFwKICAgIHQ6bm9uZSxcCiAgICBtc2c6J1BIUCBzb3VyY2UgY29kZSBsZWFrYWdlJyxcCiAgICBsb2dkYXRhOidNYXRjaGVkIERhdGE6ICV7VFguMH0gZm91bmQgd2l0aGluICV7TUFUQ0hFRF9WQVJfTkFNRX06ICV7TUFUQ0hFRF9WQVJ9JyxcCiAgICB0YWc6J2FwcGxpY2F0aW9uLW11bHRpJyxcCiAgICB0YWc6J2xhbmd1YWdlLXBocCcsXAogICAgdGFnOidwbGF0Zm9ybS1tdWx0aScsXAogICAgdGFnOidhdHRhY2stZGlzY2xvc3VyZScsXAogICAgdGFnOidwYXJhbm9pYS1sZXZlbC8xJyxcCiAgICB0YWc6J09XQVNQX0NSUycsXAogICAgdGFnOidjYXBlYy8xMDAwLzExOC8xMTYnLFwKICAgIHRhZzonUENJLzYuNS42JyxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgc2V2ZXJpdHk6J0VSUk9SJyxcCiAgICBjaGFpbiIKICAgIFNlY1J1bGUgUkVTUE9OU0VfQk9EWSAiIUByeCAoPzpceDFmXHg4Ylx4MDh8XGIoPzooPzppKD86bnRlcnBsYXl8aGRyfGQzKXxtKD86b3ZpfHRoZCl8cig/OmFyIXxpZmYpfCg/OmV4fGpmKWlmfGYoPzpsdnx3cyl8dmFyZ3xjd3MpXGJ8Z2lmKXxCKD86JXBkZnxcLnJhKVxifF53T0ZbRjJdKSIgXAogICAgICAgICJjYXB0dXJlLFwKICAgICAgICB0Om5vbmUsXAogICAgICAgIGN0bDphdWRpdExvZ1BhcnRzPStFLFwKICAgICAgICBzZXR2YXI6J3R4Lm91dGJvdW5kX2Fub21hbHlfc2NvcmVfcGwxPSsle3R4LmVycm9yX2Fub21hbHlfc2NvcmV9JyxcCiAgICAgICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfSciCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAyIiAiaWQ6OTUzMDEzLHBoYXNlOjMscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1My1EQVRBLUxFQUtBR0VTLVBIUCIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAyIiAiaWQ6OTUzMDE0LHBoYXNlOjQscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1My1EQVRBLUxFQUtBR0VTLVBIUCIKIwojIC09IFBhcmFub2lhIExldmVsIDIgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDIgb3IgaGlnaGVyKQojCgoKClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMyIgImlkOjk1MzAxNSxwaGFzZTozLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVNQT05TRS05NTMtREFUQS1MRUFLQUdFUy1QSFAiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMyIgImlkOjk1MzAxNixwaGFzZTo0LHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVNQT05TRS05NTMtREFUQS1MRUFLQUdFUy1QSFAiCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAzID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAzIG9yIGhpZ2hlcikKIwoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDQiICJpZDo5NTMwMTcscGhhc2U6MyxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTUzLURBVEEtTEVBS0FHRVMtUEhQIgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDQiICJpZDo5NTMwMTgscGhhc2U6NCxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTUzLURBVEEtTEVBS0FHRVMtUEhQIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgNCA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogNCBvciBoaWdoZXIpCiMKCgoKIwojIC09IFBhcmFub2lhIExldmVscyBGaW5pc2hlZCA9LQojClNlY01hcmtlciAiRU5ELVJFU1BPTlNFLTk1My1EQVRBLUxFQUtBR0VTLVBIUCIK",
	"RESPONSE-954-DATA-LEAKAGES-IIS.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgMCAoZW1wdHkpID0tIChhcHBseSB1bmNvbmRpdGlvbmFsbHkpCiMKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTU0MDExLHBoYXNlOjMscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1NC1EQVRBLUxFQUtBR0VTLUlJUyIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTU0MDEyLHBoYXNlOjQscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1NC1EQVRBLUxFQUtBR0VTLUlJUyIKIwojIC09IFBhcmFub2lhIExldmVsIDEgKGRlZmF1bHQpID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAxIG9yIGhpZ2hlcikKIwoKIyBJSVMgZGVmYXVsdCBsb2NhdGlvbgpTZWNSdWxlIFJFU1BPTlNFX0JPRFkgIkByeCBbYS16XTpcXFxcaW5ldHB1YlxiIiBcCiAgICAiaWQ6OTU0MTAwLFwKICAgIHBoYXNlOjQsXAogICAgYmxvY2ssXAogICAgY2FwdHVyZSxcCiAgICB0Om5vbmUsdDpsb3dlcmNhc2UsXAogICAgbXNnOidEaXNjbG9zdXJlIG9mIElJUyBpbnN0YWxsIGxvY2F0aW9uJyxcCiAgICBsb2dkYXRhOidNYXRjaGVkIERhdGE6ICV7VFguMH0gZm91bmQgd2l0aGluICV7TUFUQ0hFRF9WQVJfTkFNRX06ICV7TUFUQ0hFRF9WQVJ9JyxcCiAgICB0YWc6J2FwcGxpY2F0aW9uLW11bHRpJyxcCiAgICB0YWc6J2xhbmd1YWdlLW11bHRpJyxcCiAgICB0YWc6J3BsYXRmb3JtLWlpcycsXAogICAgdGFnOidwbGF0Zm9ybS13aW5kb3dzJyxcCiAgICB0YWc6J2F0dGFjay1kaXNjbG9zdXJlJyxcCiAgICB0YWc6J3BhcmFub2lhLWxldmVsLzEnLFwKICAgIHRhZzonT1dBU1BfQ1JTJyxcCiAgICB0YWc6J2NhcGVjLzEwMDAvMTE4LzExNicsXAogICAgY3RsOmF1ZGl0TG9nUGFydHM9K0UsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIHNldmVyaXR5OidFUlJPUicsXAogICAgc2V0dmFyOid0eC5vdXRib3VuZF9hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfScsXAogICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfSciCgpTZWNSdWxlIFJFU1BPTlNFX0JPRFkgIkByeCAoPzpNaWNyb3NvZnQgT0xFIERCIFByb3ZpZGVyIGZvciBTUUwgU2VydmVyKD86PFwvZm9udD4uezEsMjB9P2Vycm9yICc4MDAoPzowNDAwNXw0MGUzMSknLnsxLDQwfT9UaW1lb3V0IGV4cGlyZWR8IFwoMHg4MDA0MGUzMVwpPGJyPlRpbWVvdXQgZXhwaXJlZDxicj4pfDxoMT5pbnRlcm5hbCBzZXJ2ZXIgZXJyb3I8XC9oMT4uKj88aDI+cGFydCBvZiB0aGUgc2VydmVyIGhhcyBjcmFzaGVkIG9yIGl0IGhhcyBhIGNvbmZpZ3VyYXRpb24gZXJyb3JcLjxcL2gyPnxjYW5ub3QgY29ubmVjdCB0byB0aGUgc2VydmVyOiB0aW1lZCBvdXQpIiBcCiAgICAiaWQ6OTU0MTEwLFwKICAgIHBoYXNlOjQsXAogICAgYmxvY2ssXAogICAgY2FwdHVyZSxcCiAgICB0Om5vbmUsXAogICAgbXNnOidBcHBsaWNhdGlvbiBBdmFpbGFiaWxpdHkgRXJyb3InLFwKICAgIGxvZ2RhdGE6J01hdGNoZWQgRGF0YTogJXtUWC4wfSBmb3VuZCB3aXRoaW4gJXtNQVRDSEVEX1ZBUl9OQU1FfTogJXtNQVRDSEVEX1ZBUn0nLFwKICAgIHRhZzonYXBwbGljYXRpb24tbXVsdGknLFwKICAgIHRhZzonbGFuZ3VhZ2UtbXVsdGknLFwKICAgIHRhZzoncGxhdGZvcm0taWlzJyxcCiAgICB0YWc6J3BsYXRmb3JtLXdpbmRvd3MnLFwKICAgIHRhZzonYXR0YWNrLWRpc2Nsb3N1cmUnLFwKICAgIHRhZzoncGFyYW5vaWEtbGV2ZWwvMScsXAogICAgdGFnOidQQ0kvNi41LjYnLFwKICAgIHRhZzonT1dBU1BfQ1JTJyxcCiAgICB0YWc6J2NhcGVjLzEwMDAvMTE4LzExNicsXAogICAgY3RsOmF1ZGl0TG9nUGFydHM9K0UsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIHNldmVyaXR5OidFUlJPUicsXAogICAgc2V0dmFyOid0eC5vdXRib3VuZF9hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfScsXAogICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlX3BsMT0rJXt0eC5lcnJvcl9hbm9tYWx5X3Njb3JlfSciCgojCiMgSUlTIEVycm9ycyBsZWFrYWdlCiMKU2VjUnVsZSBSRVNQT05TRV9CT0RZICJAcnggKD86XGIoPzpBKD86RE9EQlwuQ29tbWFuZFxiLnswLDEwMH0/XGIoPzpBcHBsaWNhdGlvbiB1c2VzIGEgdmFsdWUgb2YgdGhlIHdyb25nIHR5cGUgZm9yIHRoZSBjdXJyZW50IG9wZXJhdGlvblxifGVycm9yJyl8IHRyYXBwYWJsZSBlcnJvciBvY2N1cnJlZCBpbiBhbiBleHRlcm5hbCBvYmplY3RcLiBUaGUgc2NyaXB0IGNhbm5vdCBjb250aW51ZSBydW5uaW5nXGIpfE1pY3Jvc29mdCBWQlNjcmlwdCAoPzpjb21waWxhdGlvbiAoPzpcKDB4OHxlcnJvcil8cnVudGltZSAoPzpFcnJvcnxcKDB4OCkpXGJ8T2JqZWN0IHJlcXVpcmVkOiAnfGVycm9yICc4MDApfDxiPlZlcnNpb24gSW5mb3JtYXRpb246PFwvYj4oPzombmJzcDt8XHMpKD86TWljcm9zb2Z0IFwuTkVUIEZyYW1ld29ya3xBU1BcLk5FVCkgVmVyc2lvbjp8PmVycm9yICdBU1BcYnxBbiBFcnJvciBIYXMgT2NjdXJyZWR8PlN5bnRheCBlcnJvciBpbiBzdHJpbmcgaW4gcXVlcnkgZXhwcmVzc2lvbnxcL1tFZV1ycm9yW01tXWVzc2FnZVwuYXNweD9cP1tFZV1ycm9yXGIpIiBcCiAgICAiaWQ6OTU0MTIwLFwKICAgIHBoYXNlOjQsXAogICAgYmxvY2ssXAogICAgY2FwdHVyZSxcCiAgICB0Om5vbmUsXAogICAgbXNnOidJSVMgSW5mb3JtYXRpb24gTGVha2FnZScsXAogICAgbG9nZGF0YTonTWF0Y2hlZCBEYXRhOiAle1RYLjB9IGZvdW5kIHdpdGhpbiAle01BVENIRURfVkFSX05BTUV9OiAle01BVENIRURfVkFSfScsXAogICAgdGFnOidhcHBsaWNhdGlvbi1tdWx0aScsXAogICAgdGFnOidsYW5ndWFnZS1tdWx0aScsXAogICAgdGFnOidwbGF0Zm9ybS1paXMnLFwKICAgIHRhZzoncGxhdGZvcm0td2luZG93cycsXAogICAgdGFnOidhdHRhY2stZGlzY2xvc3VyZScsXAogICAgdGFnOidwYXJhbm9pYS1sZXZlbC8xJyxcCiAgICB0YWc6J09XQVNQX0NSUycsXAogICAgdGFnOidjYXBlYy8xMDAwLzExOC8xMTYnLFwKICAgIHRhZzonUENJLzYuNS42JyxcCiAgICBjdGw6YXVkaXRMb2dQYXJ0cz0rRSxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgc2V2ZXJpdHk6J0VSUk9SJyxcCiAgICBzZXR2YXI6J3R4Lm91dGJvdW5kX2Fub21hbHlfc2NvcmVfcGwxPSsle3R4LmVycm9yX2Fub21hbHlfc2NvcmV9JyxcCiAgICBzZXR2YXI6J3R4LmFub21hbHlfc2NvcmVfcGwxPSsle3R4LmVycm9yX2Fub21hbHlfc2NvcmV9JyIKCgpTZWNSdWxlIFJFU1BPTlNFX1NUQVRVUyAiIUByeCBeNDA0JCIgXAogICAgImlkOjk1NDEzMCxcCiAgICBwaGFzZTo0LFwKICAgIGJsb2NrLFwKICAgIGNhcHR1cmUsXAogICAgdDpub25lLFwKICAgIG1zZzonSUlTIEluZm9ybWF0aW9uIExlYWthZ2UnLFwKICAgIGxvZ2RhdGE6J01hdGNoZWQgRGF0YTogJXtUWC4wfSBmb3VuZCB3aXRoaW4gJXtNQVRDSEVEX1ZBUl9OQU1FfTogJXtNQVRDSEVEX1ZBUn0nLFwKICAgIHRhZzonYXBwbGljYXRpb24tbXVsdGknLFwKICAgIHRhZzonbGFuZ3VhZ2UtbXVsdGknLFwKICAgIHRhZzoncGxhdGZvcm0taWlzJyxcCiAgICB0YWc6J3BsYXRmb3JtLXdpbmRvd3MnLFwKICAgIHRhZzonYXR0YWNrLWRpc2Nsb3N1cmUnLFwKICAgIHRhZzoncGFyYW5vaWEtbGV2ZWwvMScsXAogICAgdGFnOidPV0FTUF9DUlMnLFwKICAgIHRhZzonY2FwZWMvMTAwMC8xMTgvMTE2JyxcCiAgICB0YWc6J1BDSS82LjUuNicsXAogICAgdmVyOidPV0FTUF9DUlMvMy4zLjUnLFwKICAgIHNldmVyaXR5OidFUlJPUicsXAogICAgY2hhaW4iCiAgICBTZWNSdWxlIFJFU1BPTlNFX0JPRFkgIkByeCBcYlNlcnZlciBFcnJvciBpbi57MCw1MH0/XGJBcHBsaWNhdGlvblxiIiBcCiAgICAgICAgImNhcHR1cmUsXAogICAgICAgIHQ6bm9uZSxcCiAgICAgICAgY3RsOmF1ZGl0TG9nUGFydHM9K0UsXAogICAgICAgIHNldHZhcjondHgub3V0Ym91bmRfYW5vbWFseV9zY29yZV9wbDE9KyV7dHguZXJyb3JfYW5vbWFseV9zY29yZX0nLFwKICAgICAgICBzZXR2YXI6J3R4LmFub21hbHlfc2NvcmVfcGwxPSsle3R4LmVycm9yX2Fub21hbHlfc2NvcmV9JyIKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAyIiAiaWQ6OTU0MDEzLHBoYXNlOjMscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1NC1EQVRBLUxFQUtBR0VTLUlJUyIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAyIiAiaWQ6OTU0MDE0LHBoYXNlOjQscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1NC1EQVRBLUxFQUtBR0VTLUlJUyIKIwojIC09IFBhcmFub2lhIExldmVsIDIgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDIgb3IgaGlnaGVyKQojCgoKClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMyIgImlkOjk1NDAxNSxwaGFzZTozLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVNQT05TRS05NTQtREFUQS1MRUFLQUdFUy1JSVMiClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMyIgImlkOjk1NDAxNixwaGFzZTo0LHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVNQT05TRS05NTQtREFUQS1MRUFLQUdFUy1JSVMiCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAzID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAzIG9yIGhpZ2hlcikKIwoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDQiICJpZDo5NTQwMTcscGhhc2U6MyxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTU0LURBVEEtTEVBS0FHRVMtSUlTIgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDQiICJpZDo5NTQwMTgscGhhc2U6NCxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTU0LURBVEEtTEVBS0FHRVMtSUlTIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgNCA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogNCBvciBoaWdoZXIpCiMKCgoKIwojIC09IFBhcmFub2lhIExldmVscyBGaW5pc2hlZCA9LQojClNlY01hcmtlciAiRU5ELVJFU1BPTlNFLTk1NC1EQVRBLUxFQUtBR0VTLUlJUyIK",
	"RESPONSE-959-BLOCKING-EVALUATION.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojIFlvdSBzaG91bGQgc2V0IHRoZSBzY29yZSB0byB0aGUgcHJvcGVyIHRocmVzaG9sZCB5b3Ugd291bGQgcHJlZmVyLiBJZiBrZXB0IGF0ICJAZ3QgMCIKIyBpdCB3aWxsIHdvcmsgc2ltaWxhcmx5IHRvIHByZXZpb3VzIE1vZCBDUlMgcnVsZXMgYW5kIHdpbGwgY3JlYXRlIGFuIGV2ZW50IGluIHRoZSBlcnJvcl9sb2cKIyBmaWxlIGlmIHRoZXJlIGFyZSBhbnkgcnVsZXMgdGhhdCBtYXRjaC4gIElmIHlvdSB3b3VsZCBsaWtlIHRvIGxlc3NlbiB0aGUgbnVtYmVyIG9mIGV2ZW50cwojIGdlbmVyYXRlZCBpbiB0aGUgZXJyb3JfbG9nIGZpbGUsIHlvdSBzaG91bGQgaW5jcmVhc2UgdGhlIGFub21hbHkgc2NvcmUgdGhyZXNob2xkIHRvCiMgc29tZXRoaW5nIGxpa2UgIkBndCAyMCIuICBUaGlzIHdvdWxkIG9ubHkgZ2VuZXJhdGUgYW4gZXZlbnQgaW4gdGhlIGVycm9yX2xvZyBmaWxlIGlmCiMgdGhlcmUgYXJlIG11bHRpcGxlIGxvd2VyIHNldmVyaXR5IHJ1bGUgbWF0Y2hlcyBvciBpZiBhbnkgMSBoaWdoZXIgc2V2ZXJpdHkgaXRlbSBtYXRjaGVzLgojCiMgWW91IHNob3VsZCBhbHNvIHNldCB0aGUgZGVzaXJlZCBkaXNydXB0aXZlIGFjdGlvbiAoZGVueSwgcmVkaXJlY3QsIGV0Yy4uLikuCiMKCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAwIChlbXB0eSkgPS0gKGFwcGx5IHVuY29uZGl0aW9uYWxseSkKIwoKIyBTdW1taW5nIHVwIHRoZSBhbm9tYWx5IHNjb3JlLgoKIyBOT1RFOiB0eC5hbm9tYWx5X3Njb3JlIHNob3VsZCBub3QgYmUgc2V0IGluaXRpYWxseSwgYnV0IG1hc2tpbmcgd291bGQgbGVhZCB0byBkaWZmaWN1bHQgYnVncy4KIyBTbyB3ZSBhZGQgdG8gaXQuClNlY1J1bGUgVFg6UEFSQU5PSUFfTEVWRUwgIkBnZSAxIiBcCiAgICAiaWQ6OTU5MDYwLFwKICAgIHBoYXNlOjQsXAogICAgcGFzcyxcCiAgICB0Om5vbmUsXAogICAgbm9sb2csXAogICAgc2V0dmFyOid0eC5vdXRib3VuZF9hbm9tYWx5X3Njb3JlPSsle3R4Lm91dGJvdW5kX2Fub21hbHlfc2NvcmVfcGwxfSciCgpTZWNSdWxlIFRYOlBBUkFOT0lBX0xFVkVMICJAZ2UgMiIgXAogICAgImlkOjk1OTA2MSxcCiAgICBwaGFzZTo0LFwKICAgIHBhc3MsXAogICAgdDpub25lLFwKICAgIG5vbG9nLFwKICAgIHNldHZhcjondHgub3V0Ym91bmRfYW5vbWFseV9zY29yZT0rJXt0eC5vdXRib3VuZF9hbm9tYWx5X3Njb3JlX3BsMn0nIgoKU2VjUnVsZSBUWDpQQVJBTk9JQV9MRVZFTCAiQGdlIDMiIFwKICAgICJpZDo5NTkwNjIsXAogICAgcGhhc2U6NCxcCiAgICBwYXNzLFwKICAgIHQ6bm9uZSxcCiAgICBub2xvZyxcCiAgICBzZXR2YXI6J3R4Lm91dGJvdW5kX2Fub21hbHlfc2NvcmU9KyV7dHgub3V0Ym91bmRfYW5vbWFseV9zY29yZV9wbDN9JyIKClNlY1J1bGUgVFg6UEFSQU5PSUFfTEVWRUwgIkBnZSA0IiBcCiAgICAiaWQ6OTU5MDYzLFwKICAgIHBoYXNlOjQsXAogICAgcGFzcyxcCiAgICB0Om5vbmUsXAogICAgbm9sb2csXAogICAgc2V0dmFyOid0eC5vdXRib3VuZF9hbm9tYWx5X3Njb3JlPSsle3R4Lm91dGJvdW5kX2Fub21hbHlfc2NvcmVfcGw0fSciCgoKIyBBbGVydCBhbmQgQmxvY2sgb24gSGlnaCBBbm9tYWx5IFNjb3JlcyAtIHRoaXMgd291bGQgYmxvY2sgb3V0Ym91bmQgZGF0YSBsZWFrYWdlcwojCiMgTm90ZTogVGhpcyBydWxlIGFsc28gc2V0cyB0aGUgJ3R4LmFub21hbHlfc2NvcmUnIHZhcmlhYmxlLgojIFRoYXQgdmFyaWFibGUgbmFtZSB3YXMgZm9ybWVybHkgdXNlZCBpbiBDUlMsIGJ1dCBub3QgYW55IGxvbmdlci4KIyBIb3dldmVyLCBKd2FsbCBBdWRpdENvbnNvbGUgZGVwZW5kcyBvbiB0aGlzIGV4YWN0IHZhcmlhYmxlIG5hbWUuCiMgV2l0aG91dCBzZXR0aW5nIGl0LCB0aGUgJ091dGJvdW5kIFNjb3JlJyBpbiB0aGUgQXVkaXRDb25zb2xlIEdVSSB3b3VsZCBhbHdheXMgYmUgMC4KClNlY1J1bGUgVFg6T1VUQk9VTkRfQU5PTUFMWV9TQ09SRSAiQGdlICV7dHgub3V0Ym91bmRfYW5vbWFseV9zY29yZV90aHJlc2hvbGR9IiBcCiAgICAiaWQ6OTU5MTAwLFwKICAgIHBoYXNlOjQsXAogICAgZGVueSxcCiAgICB0Om5vbmUsXAogICAgbXNnOidPdXRib3VuZCBBbm9tYWx5IFNjb3JlIEV4Y2VlZGVkIChUb3RhbCBTY29yZTogJXtUWC5PVVRCT1VORF9BTk9NQUxZX1NDT1JFfSknLFwKICAgIHRhZzonYW5vbWFseS1ldmFsdWF0aW9uJyxcCiAgICB2ZXI6J09XQVNQX0NSUy8zLjMuNScsXAogICAgc2V0dmFyOid0eC5hbm9tYWx5X3Njb3JlPSsle3R4Lm91dGJvdW5kX2Fub21hbHlfc2NvcmV9JyIKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAxIiAiaWQ6OTU5MDExLHBoYXNlOjMscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1OS1CTE9DS0lORy1FVkFMVUFUSU9OIgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDEiICJpZDo5NTkwMTIscGhhc2U6NCxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTU5LUJMT0NLSU5HLUVWQUxVQVRJT04iCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAxIChkZWZhdWx0KSA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogMSBvciBoaWdoZXIpCiMKCgoKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCAyIiAiaWQ6OTU5MDEzLHBoYXNlOjMscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1OS1CTE9DS0lORy1FVkFMVUFUSU9OIgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDIiICJpZDo5NTkwMTQscGhhc2U6NCxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTU5LUJMT0NLSU5HLUVWQUxVQVRJT04iCiMKIyAtPSBQYXJhbm9pYSBMZXZlbCAyID0tIChhcHBseSBvbmx5IHdoZW4gdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHN1ZmZpY2llbnRseSBoaWdoOiAyIG9yIGhpZ2hlcikKIwoKCgpTZWNSdWxlIFRYOkVYRUNVVElOR19QQVJBTk9JQV9MRVZFTCAiQGx0IDMiICJpZDo5NTkwMTUscGhhc2U6MyxwYXNzLG5vbG9nLHNraXBBZnRlcjpFTkQtUkVTUE9OU0UtOTU5LUJMT0NLSU5HLUVWQUxVQVRJT04iClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgMyIgImlkOjk1OTAxNixwaGFzZTo0LHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVNQT05TRS05NTktQkxPQ0tJTkctRVZBTFVBVElPTiIKIwojIC09IFBhcmFub2lhIExldmVsIDMgPS0gKGFwcGx5IG9ubHkgd2hlbiB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgaXMgc3VmZmljaWVudGx5IGhpZ2g6IDMgb3IgaGlnaGVyKQojCgoKClNlY1J1bGUgVFg6RVhFQ1VUSU5HX1BBUkFOT0lBX0xFVkVMICJAbHQgNCIgImlkOjk1OTAxNyxwaGFzZTozLHBhc3Msbm9sb2csc2tpcEFmdGVyOkVORC1SRVNQT05TRS05NTktQkxPQ0tJTkctRVZBTFVBVElPTiIKU2VjUnVsZSBUWDpFWEVDVVRJTkdfUEFSQU5PSUFfTEVWRUwgIkBsdCA0IiAiaWQ6OTU5MDE4LHBoYXNlOjQscGFzcyxub2xvZyxza2lwQWZ0ZXI6RU5ELVJFU1BPTlNFLTk1OS1CTE9DS0lORy1FVkFMVUFUSU9OIgojCiMgLT0gUGFyYW5vaWEgTGV2ZWwgNCA9LSAoYXBwbHkgb25seSB3aGVuIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCBpcyBzdWZmaWNpZW50bHkgaGlnaDogNCBvciBoaWdoZXIpCiMKCgoKIwojIC09IFBhcmFub2lhIExldmVscyBGaW5pc2hlZCA9LQojClNlY01hcmtlciAiRU5ELVJFU1BPTlNFLTk1OS1CTE9DS0lORy1FVkFMVUFUSU9OIgo=",
	"RESPONSE-980-CORRELATION.conf": "",
	"RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf.example": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojCiMgVGhlIHB1cnBvc2Ugb2YgdGhpcyBmaWxlIGlzIHRvIGhvbGQgTE9DQUwgZXhjZXB0aW9ucyBmb3IgeW91ciBzaXRlLgojIFRoZSB0eXBlcyBvZiBydWxlcyB0aGF0IHdvdWxkIGdvIGludG8gdGhpcyBmaWxlIGFyZSBvbmUgd2hlcmUgeW91IHdhbnQKIyB0byB1bmNvbmRpdGlvbmFsbHkgZGlzYWJsZSBydWxlcyBvciBtb2RpZnkgdGhlaXIgYWN0aW9ucyBkdXJpbmcgc3RhcnR1cC4KIwojIFBsZWFzZSBzZWUgdGhlIGZpbGUgUkVRVUVTVC05MDAtRVhDTFVTSU9OLVJVTEVTLUJFRk9SRS1DUlMuY29uZi5leGFtcGxlCiMgZm9yIGEgZGVzY3JpcHRpb24gb2YgdGhlIHJ1bGUgZXhjbHVzaW9ucyBtZWNoYW5pc20gYW5kIHRoZSBjb3JyZWN0CiMgdXNlIG9mIHRoaXMgZmlsZS4KIwoKIwojIEV4YW1wbGUgRXhjbHVzaW9uIFJ1bGU6IFRvIHVuY29uZGl0aW9uYWxseSBkaXNhYmxlIGEgcnVsZSBJRAojCiMgTW9kU2VjdXJpdHkgUnVsZSBFeGNsdXNpb246IDk0MjEwMCBTUUwgSW5qZWN0aW9uIERldGVjdGVkIHZpYSBsaWJpbmplY3Rpb24KIyBTZWNSdWxlUmVtb3ZlQnlJZCA5NDIxMDAKCiMgRXhhbXBsZSBFeGNsdXNpb24gUnVsZTogUmVtb3ZlIGEgZ3JvdXAgb2YgcnVsZXMKIwojIE1vZFNlY3VyaXR5IFJ1bGUgRXhjbHVzaW9uOiBEaXNhYmxlIFBIUCBpbmplY3Rpb24gcnVsZXMKIyBTZWNSdWxlUmVtb3ZlQnlUYWcgImF0dGFjay1pbmplY3Rpb24tcGhwIgoKIwojIEV4YW1wbGUgRXhjbHVzaW9uIFJ1bGU6IFRvIHVuY29uZGl0aW9uYWxseSByZW1vdmUgcGFyYW1ldGVyICJmb28iIGZyb20KIyAgICAgICAgICAgICAgICAgICAgICAgICBpbnNwZWN0aW9uIGZvciBTUUxpIHJ1bGVzCiMKIyBNb2RTZWN1cml0eSBSdWxlIEV4Y2x1c2lvbjogZGlzYWJsZSBzcWxpIHJ1bGVzIGZvciBwYXJhbWV0ZXIgZm9vLgojIFNlY1J1bGVVcGRhdGVUYXJnZXRCeVRhZyAiYXR0YWNrLXNxbGkiICIhQVJHUzpmb28iCgoKIyAtLSBbWyBDaGFuZ2luZyB0aGUgRGlzcnVwdGl2ZSBBY3Rpb24gZm9yIEFub21hbHkgTW9kZSBdXSAtLQojCiMgSW4gQW5vbWFseSBNb2RlIChkZWZhdWx0IGluIENSUzMpLCB0aGUgcnVsZXMgaW4gUkVRVUVTVC05NDktQkxPQ0tJTkctRVZBTFVBVElPTi5jb25mCiMgYW5kIFJFU1BPTlNFLTk1OS1CTE9DS0lORy1FVkFMVUFUSU9OLmNvbmYgY2hlY2sgdGhlIGFjY3VtdWxhdGVkIGF0dGFjayBzY29yZXMKIyBhZ2FpbnN0IHlvdXIgcG9saWN5LiBUbyBhcHBseSBhIGRpc3J1cHRpdmUgYWN0aW9uLCB0aGV5IG92ZXJ3cml0ZSB0aGUgZGVmYXVsdAojIGFjdGlvbnMgc3BlY2lmaWVkIGluIFNlY0RlZmF1bHRBY3Rpb24gKHNldHVwLmNvbmYpIHdpdGggYSAnZGVueScgYWN0aW9uLgojIFRoaXMgJ2RlbnknIGlzIGJ5IGRlZmF1bHQgcGFpcmVkIHdpdGggYSAnc3RhdHVzOjQwMycgYWN0aW9uLgojCiMgSW4gb3JkZXIgdG8gY2hhbmdlIHRoZSBkaXNydXB0aXZlIGFjdGlvbiBmcm9tICdkZW55JyB0byBzb21ldGhpbmcgZWxzZSwKIyB5b3UgbXVzdCB1c2UgU2VjUnVsZVVwZGF0ZUFjdGlvbkJ5SUQgZGlyZWN0aXZlcyBBRlRFUiB0aGUgQ1JTIHJ1bGVzCiMgYXJlIGNvbmZpZ3VyZWQsIGZvciBpbnN0YW5jZSBpbiB0aGUgUkVTUE9OU0UtOTk5LUVYQ0xVU0lPTi1SVUxFUy1BRlRFUi1DUlMuY29uZiBmaWxlLgojCiMgVGhlc2UgYWN0aW9ucyBvbmx5IGFwcGx5IHdoZW4gdXNpbmcgQW5vbWFseSBNb2RlLgojCiMgRGVmYXVsdCBhY3Rpb246IGJsb2NrIHdpdGggZXJyb3IgNDAzCiMgKE5vIGNvbmZpZ3VyYXRpb24gbmVlZGVkIGluIHRoaXMgZmlsZSBpZiB5b3Ugd2FudCB0aGUgZGVmYXVsdCBiZWhhdmlvci4pCiMKCiMgRXhhbXBsZTogcmVkaXJlY3QgYmFjayB0byB0aGUgaG9tZXBhZ2Ugb24gYmxvY2tpbmcKIwojIFNlY1J1bGVVcGRhdGVBY3Rpb25CeUlkIDk0OTExMCAidDpub25lLHJlZGlyZWN0OidodHRwOi8vJXtyZXF1ZXN0X2hlYWRlcnMuaG9zdH0vJyIKIyBTZWNSdWxlVXBkYXRlQWN0aW9uQnlJZCA5NTkxMDAgInQ6bm9uZSxyZWRpcmVjdDonaHR0cDovLyV7cmVxdWVzdF9oZWFkZXJzLmhvc3R9LyciCgojIEV4YW1wbGU6IHJlZGlyZWN0IHRvIGFub3RoZXIgVVJMIG9uIGJsb2NraW5nCiMKIyBTZWNSdWxlVXBkYXRlQWN0aW9uQnlJZCA5NDkxMTAgInQ6bm9uZSxyZWRpcmVjdDonaHR0cDovL2V4YW1wbGUuY29tL3JlcG9ydF9wcm9ibGVtJyIKIyBTZWNSdWxlVXBkYXRlQWN0aW9uQnlJZCA5NTkxMDAgInQ6bm9uZSxyZWRpcmVjdDonaHR0cDovL2V4YW1wbGUuY29tL3JlcG9ydF9wcm9ibGVtJyIKCiMgRXhhbXBsZTogc2VuZCBhbiBlcnJvciA0MDQKIwojIFNlY1J1bGVVcGRhdGVBY3Rpb25CeUlkIDk0OTExMCAidDpub25lLGRlbnksc3RhdHVzOjQwNCIKIyBTZWNSdWxlVXBkYXRlQWN0aW9uQnlJZCA5NTkxMDAgInQ6bm9uZSxkZW55LHN0YXR1czo0MDQiCgojIEV4YW1wbGU6IGRyb3AgdGhlIGNvbm5lY3Rpb24gKGJlc3QgZm9yIERvUyBhdHRhY2tzKQojCiMgU2VjUnVsZVVwZGF0ZUFjdGlvbkJ5SWQgOTQ5MTEwICJ0Om5vbmUsZHJvcCIKIyBTZWNSdWxlVXBkYXRlQWN0aW9uQnlJZCA5NTkxMDAgInQ6bm9uZSxkcm9wIgo=",
	"crawlers-user-agents.data": "IyBTZWFyY2ggZW5naW5lIGNyYXdsZXJzIGFuZCBvdGhlciBib3RzCiMgY3Jhd2xlcgojIGh0dHBzOi8vODBsZWdzLmNvbS8KODBsZWdzCiMgc2l0ZSByaXBwZXIKIyBodHRwOi8vd3d3LnNvZnRieXRlbGFicy5jb20vZW4vQmxhY2tXaWRvdy8KYmxhY2sgd2lkb3cKYmxhY2t3aWRvdwojIGNyYXdsZXIKIyAyMDA2CnByb3dlYndhbGtlcgojIGdlbmVyaWMgY3Jhd2xlcgpweW1pbGxzLXNwaWRlci8KIyBTRU8KIyBodHRwczovL2FocmVmcy5jb20vcm9ib3QKQWhyZWZzQm90CiMgcGVvcGxlIGRhdGFiYXNlCiMgaHR0cHM6Ly9waXBsLmNvbS9ib3QvClBpcGxCb3QKIyBhZHZlcnRpc2luZyB0YXJnZXRpbmcKIyBodHRwczovL3d3dy5ncmFwZXNob3QuY29tL2NyYXdsZXIvCkdyYXBlc2hvdENyYXdsZXIvMi4wCmdyYXBlRlgKIyBTRU8KIyBodHRwOi8vd3d3LnNlYXJjaG1ldHJpY3MuY29tL3NlYXJjaG1ldHJpY3Nib3QvClNlYXJjaG1ldHJpY3NCb3QKIyBTRU8KIyBodHRwczovL3d3dy5zZW1ydXNoLmNvbS9ib3QvClNlbXJ1c2hCb3QKIyBTRU8KIyBodHRwczovL21vei5jb20vaGVscC9ndWlkZXMvbW96LXByb2NlZHVyZXMvd2hhdC1pcy1yb2dlcmJvdApyb2dlcmJvdAojIFNFTwojIGh0dHA6Ly93d3cubWFqZXN0aWMxMi5jby51ay9wcm9qZWN0cy9kc2VhcmNoL21qMTJib3QucGhwCk1KMTJib3QKIyBuZXdzIHNlcnZpY2UKT3dsaW4gYm90CiMgbWlzYmVoYXZpbmcgc3BpZGVyCkxpbmdld291ZC01NTAtU3B5ZGVyCiMgaHR0cHM6Ly93d3cud2FwcGFseXplci5jb20vCldhcHBhbHl6ZXIK",
	"crs-setup.conf": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IHZlci4zLjMuNQojIENvcHlyaWdodCAoYykgMjAwNi0yMDIwIFRydXN0d2F2ZSBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgojIENvcHlyaWdodCAoYykgMjAyMS0yMDIzIENvcmUgUnVsZSBTZXQgcHJvamVjdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIwojIFRoZSBPV0FTUCBNb2RTZWN1cml0eSBDb3JlIFJ1bGUgU2V0IGlzIGRpc3RyaWJ1dGVkIHVuZGVyCiMgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgKEFTTCkgdmVyc2lvbiAyCiMgUGxlYXNlIHNlZSB0aGUgZW5jbG9zZWQgTElDRU5TRSBmaWxlIGZvciBmdWxsIGRldGFpbHMuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoKIwojIC0tIFtbIEludHJvZHVjdGlvbiBdXSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojCiMgVGhlIE9XQVNQIE1vZFNlY3VyaXR5IENvcmUgUnVsZSBTZXQgKENSUykgaXMgYSBzZXQgb2YgZ2VuZXJpYyBhdHRhY2sKIyBkZXRlY3Rpb24gcnVsZXMgdGhhdCBwcm92aWRlIGEgYmFzZSBsZXZlbCBvZiBwcm90ZWN0aW9uIGZvciBhbnkgd2ViCiMgYXBwbGljYXRpb24uIFRoZXkgYXJlIHdyaXR0ZW4gZm9yIHRoZSBvcGVuIHNvdXJjZSwgY3Jvc3MtcGxhdGZvcm0KIyBNb2RTZWN1cml0eSBXZWIgQXBwbGljYXRpb24gRmlyZXdhbGwuCiMKIyBTZWUgYWxzbzoKIyBodHRwczovL2NvcmVydWxlc2V0Lm9yZy8KIyBodHRwczovL2dpdGh1Yi5jb20vU3BpZGVyTGFicy9vd2FzcC1tb2RzZWN1cml0eS1jcnMKIyBodHRwczovL3d3dy5vd2FzcC5vcmcvaW5kZXgucGhwL0NhdGVnb3J5Ok9XQVNQX01vZFNlY3VyaXR5X0NvcmVfUnVsZV9TZXRfUHJvamVjdAojCgoKIwojIC0tIFtbIFN5c3RlbSBSZXF1aXJlbWVudHMgXV0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojCiMgQ1JTIHJlcXVpcmVzIE1vZFNlY3VyaXR5IHZlcnNpb24gMi44LjAgb3IgYWJvdmUuCiMgV2UgcmVjb21tZW5kIHRvIGFsd2F5cyB1c2UgdGhlIG5ld2VzdCBNb2RTZWN1cml0eSB2ZXJzaW9uLgojCiMgVGhlIGNvbmZpZ3VyYXRpb24gZGlyZWN0aXZlcy9zZXR0aW5ncyBpbiB0aGlzIGZpbGUgYXJlIHVzZWQgdG8gY29udHJvbAojIHRoZSBPV0FTUCBNb2RTZWN1cml0eSBDUlMuIFRoZXNlIHNldHRpbmdzIGRvICoqTk9UKiogY29uZmlndXJlIHRoZSBtYWluCiMgTW9kU2VjdXJpdHkgc2V0dGluZ3MgKG1vZHNlY3VyaXR5LmNvbmYpIHN1Y2ggYXMgU2VjUnVsZUVuZ2luZSwKIyBTZWNSZXF1ZXN0Qm9keUFjY2VzcywgU2VjQXVkaXRFbmdpbmUsIFNlY0RlYnVnTG9nLCBhbmQgWE1MIHByb2Nlc3NpbmcuCiMKIyBUaGUgQ1JTIGFzc3VtZXMgdGhhdCBtb2RzZWN1cml0eS5jb25mIGhhcyBiZWVuIGxvYWRlZC4gSXQgaXMgYnVuZGxlZCB3aXRoCiMgTW9kU2VjdXJpdHkuIElmIHlvdSBkb24ndCBoYXZlIGl0LCB5b3UgY2FuIGdldCBpdCBmcm9tOgojIDIueDogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1NwaWRlckxhYnMvTW9kU2VjdXJpdHkvdjIvbWFzdGVyL21vZHNlY3VyaXR5LmNvbmYtcmVjb21tZW5kZWQKIyAzLng6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9TcGlkZXJMYWJzL01vZFNlY3VyaXR5L3YzL21hc3Rlci9tb2RzZWN1cml0eS5jb25mLXJlY29tbWVuZGVkCiMKIyBUaGUgb3JkZXIgb2YgZmlsZSBpbmNsdXNpb24gaW4geW91ciB3ZWJzZXJ2ZXIgY29uZmlndXJhdGlvbiBzaG91bGQgYWx3YXlzIGJlOgojIDEuIG1vZHNlY3VyaXR5LmNvbmYKIyAyLiBjcnMtc2V0dXAuY29uZiAodGhpcyBmaWxlKQojIDMuIHJ1bGVzLyouY29uZiAodGhlIENSUyBydWxlIGZpbGVzKQojCiMgUGxlYXNlIHJlZmVyIHRvIHRoZSBJTlNUQUxMIGZpbGUgZm9yIGRldGFpbGVkIGluc3RhbGxhdGlvbiBpbnN0cnVjdGlvbnMuCiMKCgojCiMgLS0gW1sgTW9kZSBvZiBPcGVyYXRpb246IEFub21hbHkgU2NvcmluZyB2cy4gU2VsZi1Db250YWluZWQgXV0gLS0tLS0tLS0tLS0tLS0tCiMKIyBUaGUgQ1JTIGNhbiBydW4gaW4gdHdvIG1vZGVzOgojCiMgLS0gW1sgQW5vbWFseSBTY29yaW5nIE1vZGUgKGRlZmF1bHQpIF1dIC0tCiMgSW4gQ1JTMywgYW5vbWFseSBtb2RlIGlzIHRoZSBkZWZhdWx0IGFuZCByZWNvbW1lbmRlZCBtb2RlLCBzaW5jZSBpdCBnaXZlcyB0aGUKIyBtb3N0IGFjY3VyYXRlIGxvZyBpbmZvcm1hdGlvbiBhbmQgb2ZmZXJzIHRoZSBtb3N0IGZsZXhpYmlsaXR5IGluIHNldHRpbmcgeW91cgojIGJsb2NraW5nIHBvbGljaWVzLiBJdCBpcyBhbHNvIGNhbGxlZCAiY29sbGFib3JhdGl2ZSBkZXRlY3Rpb24gbW9kZSIuCiMgSW4gdGhpcyBtb2RlLCBlYWNoIG1hdGNoaW5nIHJ1bGUgaW5jcmVhc2VzIGFuICdhbm9tYWx5IHNjb3JlJy4KIyBBdCB0aGUgY29uY2x1c2lvbiBvZiB0aGUgaW5ib3VuZCBydWxlcywgYW5kIGFnYWluIGF0IHRoZSBjb25jbHVzaW9uIG9mIHRoZQojIG91dGJvdW5kIHJ1bGVzLCB0aGUgYW5vbWFseSBzY29yZSBpcyBjaGVja2VkLCBhbmQgdGhlIGJsb2NraW5nIGV2YWx1YXRpb24KIyBydWxlcyBhcHBseSBhIGRpc3J1cHRpdmUgYWN0aW9uLCBieSBkZWZhdWx0IHJldHVybmluZyBhbiBlcnJvciA0MDMuCiMKIyAtLSBbWyBTZWxmLUNvbnRhaW5lZCBNb2RlIF1dIC0tCiMgSW4gdGhpcyBtb2RlLCBydWxlcyBhcHBseSBhbiBhY3Rpb24gaW5zdGFudGx5LiBUaGlzIHdhcyB0aGUgQ1JTMiBkZWZhdWx0LgojIEl0IGNhbiBsb3dlciByZXNvdXJjZSB1c2FnZSwgYXQgdGhlIGNvc3Qgb2YgbGVzcyBmbGV4aWJpbGl0eSBpbiBibG9ja2luZyBwb2xpY3kKIyBhbmQgbGVzcyBpbmZvcm1hdGl2ZSBhdWRpdCBsb2dzIChvbmx5IHRoZSBmaXJzdCBkZXRlY3RlZCB0aHJlYXQgaXMgbG9nZ2VkKS4KIyBSdWxlcyBpbmhlcml0IHRoZSBkaXNydXB0aXZlIGFjdGlvbiB0aGF0IHlvdSBzcGVjaWZ5IChpLmUuIGRlbnksIGRyb3AsIGV0YykuCiMgVGhlIGZpcnN0IHJ1bGUgdGhhdCBtYXRjaGVzIHdpbGwgZXhlY3V0ZSB0aGlzIGFjdGlvbi4gSW4gbW9zdCBjYXNlcyB0aGlzIHdpbGwKIyBjYXVzZSBldmFsdWF0aW9uIHRvIHN0b3AgYWZ0ZXIgdGhlIGZpcnN0IHJ1bGUgaGFzIG1hdGNoZWQsIHNpbWlsYXIgdG8gaG93IG1hbnkKIyBJRFNzIGZ1bmN0aW9uLgojCiMgLS0gW1sgQWxlcnQgTG9nZ2luZyBDb250cm9sIF1dIC0tCiMgSW4gdGhlIG1vZGUgY29uZmlndXJhdGlvbiwgeW91IG11c3QgYWxzbyBhZGp1c3QgdGhlIGRlc2lyZWQgbG9nZ2luZyBvcHRpb25zLgojIFRoZXJlIGFyZSB0aHJlZSBjb21tb24gb3B0aW9ucyBmb3IgZGVhbGluZyB3aXRoIGxvZ2dpbmcuIEJ5IGRlZmF1bHQgQ1JTIGVuYWJsZXMKIyBsb2dnaW5nIHRvIHRoZSB3ZWJzZXJ2ZXIgZXJyb3IgbG9nIChvciBFdmVudCB2aWV3ZXIpIHBsdXMgZGV0YWlsZWQgbG9nZ2luZyB0bwojIHRoZSBNb2RTZWN1cml0eSBhdWRpdCBsb2cgKGNvbmZpZ3VyZWQgdW5kZXIgU2VjQXVkaXRMb2cgaW4gbW9kc2VjdXJpdHkuY29uZikuCiMKIyAtIFRvIGxvZyB0byBib3RoIGVycm9yIGxvZyBhbmQgTW9kU2VjdXJpdHkgYXVkaXQgbG9nIGZpbGUsIHVzZTogImxvZyxhdWRpdGxvZyIKIyAtIFRvIGxvZyAqb25seSogdG8gdGhlIE1vZFNlY3VyaXR5IGF1ZGl0IGxvZyBmaWxlLCB1c2U6ICJub2xvZyxhdWRpdGxvZyIKIyAtIFRvIGxvZyAqb25seSogdG8gdGhlIGVycm9yIGxvZyBmaWxlLCB1c2U6ICJsb2csbm9hdWRpdGxvZyIKIwojIEV4YW1wbGVzIGZvciB0aGUgdmFyaW91cyBtb2RlcyBmb2xsb3cuCiMgWW91IG11c3QgbGVhdmUgb25lIG9mIHRoZSBmb2xsb3dpbmcgb3B0aW9ucyBlbmFibGVkLgojIE5vdGUgdGhhdCB5b3UgbXVzdCBzcGVjaWZ5IHRoZSBzYW1lIGxpbmUgZm9yIHBoYXNlOjEgYW5kIHBoYXNlOjIuCiMKCiMgRGVmYXVsdDogQW5vbWFseSBTY29yaW5nIG1vZGUsIGxvZyB0byBlcnJvciBsb2csIGxvZyB0byBNb2RTZWN1cml0eSBhdWRpdCBsb2cKIyAtIEJ5IGRlZmF1bHQsIG9mZmVuZGluZyByZXF1ZXN0cyBhcmUgYmxvY2tlZCB3aXRoIGFuIGVycm9yIDQwMyByZXNwb25zZS4KIyAtIFRvIGNoYW5nZSB0aGUgZGlzcnVwdGl2ZSBhY3Rpb24sIHNlZSBSRVNQT05TRS05OTktRVhDTFVTSU9OLVJVTEVTLUFGVEVSLUNSUy5jb25mLmV4YW1wbGUKIyAgIGFuZCByZXZpZXcgc2VjdGlvbiAnQ2hhbmdpbmcgdGhlIERpc3J1cHRpdmUgQWN0aW9uIGZvciBBbm9tYWx5IE1vZGUnLgojIC0gSW4gQXBhY2hlLCB5b3UgY2FuIHVzZSBFcnJvckRvY3VtZW50IHRvIHNob3cgYSBmcmllbmRseSBlcnJvciBwYWdlIG9yCiMgICBwZXJmb3JtIGEgcmVkaXJlY3Q6IGh0dHBzOi8vaHR0cGQuYXBhY2hlLm9yZy9kb2NzLzIuNC9jdXN0b20tZXJyb3IuaHRtbAojClNlY0RlZmF1bHRBY3Rpb24gInBoYXNlOjEsbG9nLGF1ZGl0bG9nLHBhc3MiClNlY0RlZmF1bHRBY3Rpb24gInBoYXNlOjIsbG9nLGF1ZGl0bG9nLHBhc3MiCgojIEV4YW1wbGU6IEFub21hbHkgU2NvcmluZyBtb2RlLCBsb2cgb25seSB0byBNb2RTZWN1cml0eSBhdWRpdCBsb2cKIyAtIEJ5IGRlZmF1bHQsIG9mZmVuZGluZyByZXF1ZXN0cyBhcmUgYmxvY2tlZCB3aXRoIGFuIGVycm9yIDQwMyByZXNwb25zZS4KIyAtIFRvIGNoYW5nZSB0aGUgZGlzcnVwdGl2ZSBhY3Rpb24sIHNlZSBSRVNQT05TRS05OTktRVhDTFVTSU9OLVJVTEVTLUFGVEVSLUNSUy5jb25mLmV4YW1wbGUKIyAgIGFuZCByZXZpZXcgc2VjdGlvbiAnQ2hhbmdpbmcgdGhlIERpc3J1cHRpdmUgQWN0aW9uIGZvciBBbm9tYWx5IE1vZGUnLgojIC0gSW4gQXBhY2hlLCB5b3UgY2FuIHVzZSBFcnJvckRvY3VtZW50IHRvIHNob3cgYSBmcmllbmRseSBlcnJvciBwYWdlIG9yCiMgICBwZXJmb3JtIGEgcmVkaXJlY3Q6IGh0dHBzOi8vaHR0cGQuYXBhY2hlLm9yZy9kb2NzLzIuNC9jdXN0b20tZXJyb3IuaHRtbAojCiMgU2VjRGVmYXVsdEFjdGlvbiAicGhhc2U6MSxub2xvZyxhdWRpdGxvZyxwYXNzIgojIFNlY0RlZmF1bHRBY3Rpb24gInBoYXNlOjIsbm9sb2csYXVkaXRsb2cscGFzcyIKCiMgRXhhbXBsZTogU2VsZi1jb250YWluZWQgbW9kZSwgcmV0dXJuIGVycm9yIDQwMyBvbiBibG9ja2luZwojIC0gSW4gdGhpcyBjb25maWd1cmF0aW9uIHRoZSBkZWZhdWx0IGRpc3J1cHRpdmUgYWN0aW9uIGJlY29tZXMgJ2RlbnknLiBBZnRlciBhCiMgICBydWxlIHRyaWdnZXJzLCBpdCB3aWxsIHN0b3AgcHJvY2Vzc2luZyB0aGUgcmVxdWVzdCBhbmQgcmV0dXJuIGFuIGVycm9yIDQwMy4KIyAtIFlvdSBjYW4gYWxzbyB1c2UgYSBkaWZmZXJlbnQgZXJyb3Igc3RhdHVzLCBzdWNoIGFzIDQwNCwgNDA2LCBldCBjZXRlcmEuCiMgLSBJbiBBcGFjaGUsIHlvdSBjYW4gdXNlIEVycm9yRG9jdW1lbnQgdG8gc2hvdyBhIGZyaWVuZGx5IGVycm9yIHBhZ2Ugb3IKIyAgIHBlcmZvcm0gYSByZWRpcmVjdDogaHR0cHM6Ly9odHRwZC5hcGFjaGUub3JnL2RvY3MvMi40L2N1c3RvbS1lcnJvci5odG1sCiMKIyBTZWNEZWZhdWx0QWN0aW9uICJwaGFzZToxLGxvZyxhdWRpdGxvZyxkZW55LHN0YXR1czo0MDMiCiMgU2VjRGVmYXVsdEFjdGlvbiAicGhhc2U6Mixsb2csYXVkaXRsb2csZGVueSxzdGF0dXM6NDAzIgoKIyBFeGFtcGxlOiBTZWxmLWNvbnRhaW5lZCBtb2RlLCByZWRpcmVjdCBiYWNrIHRvIGhvbWVwYWdlIG9uIGJsb2NraW5nCiMgLSBJbiB0aGlzIGNvbmZpZ3VyYXRpb24gdGhlICd0YWcnIGFjdGlvbiBpbmNsdWRlcyB0aGUgSG9zdCBoZWFkZXIgZGF0YSBpbiB0aGUKIyAgIGxvZy4gVGhpcyBoZWxwcyB0byBpZGVudGlmeSB3aGljaCB2aXJ0dWFsIGhvc3QgdHJpZ2dlcmVkIHRoZSBydWxlIChpZiBhbnkpLgojIC0gTm90ZSB0aGF0IHRoaXMgbWlnaHQgY2F1c2UgcmVkaXJlY3QgbG9vcHMgaW4gc29tZSBzaXR1YXRpb25zOyBmb3IgZXhhbXBsZQojICAgaWYgYSBDb29raWUgb3IgVXNlci1BZ2VudCBoZWFkZXIgaXMgYmxvY2tlZCwgaXQgd2lsbCBhbHNvIGJlIGJsb2NrZWQgd2hlbgojICAgdGhlIGNsaWVudCBzdWJzZXF1ZW50bHkgdHJpZXMgdG8gYWNjZXNzIHRoZSBob21lcGFnZS4gWW91IGNhbiBhbHNvIHJlZGlyZWN0CiMgICB0byBhbm90aGVyIGN1c3RvbSBVUkwuCiMgU2VjRGVmYXVsdEFjdGlvbiAicGhhc2U6MSxsb2csYXVkaXRsb2cscmVkaXJlY3Q6J2h0dHA6Ly8le3JlcXVlc3RfaGVhZGVycy5ob3N0fS8nLHRhZzonSG9zdDogJXtyZXF1ZXN0X2hlYWRlcnMuaG9zdH0nIgojIFNlY0RlZmF1bHRBY3Rpb24gInBoYXNlOjIsbG9nLGF1ZGl0bG9nLHJlZGlyZWN0OidodHRwOi8vJXtyZXF1ZXN0X2hlYWRlcnMuaG9zdH0vJyx0YWc6J0hvc3Q6ICV7cmVxdWVzdF9oZWFkZXJzLmhvc3R9JyIKCgojCiMgLS0gW1sgUGFyYW5vaWEgTGV2ZWwgSW5pdGlhbGl6YXRpb24gXV0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMKIyBUaGUgUGFyYW5vaWEgTGV2ZWwgKFBMKSBzZXR0aW5nIGFsbG93cyB5b3UgdG8gY2hvb3NlIHRoZSBkZXNpcmVkIGxldmVsCiMgb2YgcnVsZSBjaGVja3MgdGhhdCB3aWxsIGFkZCB0byB5b3VyIGFub21hbHkgc2NvcmVzLgojCiMgV2l0aCBlYWNoIHBhcmFub2lhIGxldmVsIGluY3JlYXNlLCB0aGUgQ1JTIGVuYWJsZXMgYWRkaXRpb25hbCBydWxlcwojIGdpdmluZyB5b3UgYSBoaWdoZXIgbGV2ZWwgb2Ygc2VjdXJpdHkuIEhvd2V2ZXIsIGhpZ2hlciBwYXJhbm9pYSBsZXZlbHMKIyBhbHNvIGluY3JlYXNlIHRoZSBwb3NzaWJpbGl0eSBvZiBibG9ja2luZyBzb21lIGxlZ2l0aW1hdGUgdHJhZmZpYyBkdWUgdG8KIyBmYWxzZSBhbGFybXMgKGFsc28gbmFtZWQgZmFsc2UgcG9zaXRpdmVzIG9yIEZQcykuIElmIHlvdSB1c2UgaGlnaGVyCiMgcGFyYW5vaWEgbGV2ZWxzLCBpdCBpcyBsaWtlbHkgdGhhdCB5b3Ugd2lsbCBuZWVkIHRvIGFkZCBzb21lIGV4Y2x1c2lvbgojIHJ1bGVzIGZvciBjZXJ0YWluIHJlcXVlc3RzIGFuZCBhcHBsaWNhdGlvbnMgcmVjZWl2aW5nIGNvbXBsZXggaW5wdXQuCiMKIyAtIEEgcGFyYW5vaWEgbGV2ZWwgb2YgMSBpcyBkZWZhdWx0LiBJbiB0aGlzIGxldmVsLCBtb3N0IGNvcmUgcnVsZXMKIyAgIGFyZSBlbmFibGVkLiBQTDEgaXMgYWR2aXNlZCBmb3IgYmVnaW5uZXJzLCBpbnN0YWxsYXRpb25zCiMgICBjb3ZlcmluZyBtYW55IGRpZmZlcmVudCBzaXRlcyBhbmQgYXBwbGljYXRpb25zLCBhbmQgZm9yIHNldHVwcwojICAgd2l0aCBzdGFuZGFyZCBzZWN1cml0eSByZXF1aXJlbWVudHMuCiMgICBBdCBQTDEgeW91IHNob3VsZCBmYWNlIEZQcyByYXJlbHkuIElmIHlvdSBlbmNvdW50ZXIgRlBzLCBwbGVhc2UKIyAgIG9wZW4gYW4gaXNzdWUgb24gdGhlIENSUyBHaXRIdWIgc2l0ZSBhbmQgZG9uJ3QgZm9yZ2V0IHRvIGF0dGFjaCB5b3VyCiMgICBjb21wbGV0ZSBBdWRpdCBMb2cgcmVjb3JkIGZvciB0aGUgcmVxdWVzdCB3aXRoIHRoZSBpc3N1ZS4KIyAtIFBhcmFub2lhIGxldmVsIDIgaW5jbHVkZXMgbWFueSBleHRyYSBydWxlcywgZm9yIGluc3RhbmNlIGVuYWJsaW5nCiMgICBtYW55IHJlZ2V4cC1iYXNlZCBTUUwgYW5kIFhTUyBpbmplY3Rpb24gcHJvdGVjdGlvbnMsIGFuZCBhZGRpbmcKIyAgIGV4dHJhIGtleXdvcmRzIGNoZWNrZWQgZm9yIGNvZGUgaW5qZWN0aW9ucy4gUEwyIGlzIGFkdmlzZWQKIyAgIGZvciBtb2RlcmF0ZSB0byBleHBlcmllbmNlZCB1c2VycyBkZXNpcmluZyBtb3JlIGNvbXBsZXRlIGNvdmVyYWdlCiMgICBhbmQgZm9yIGluc3RhbGxhdGlvbnMgd2l0aCBlbGV2YXRlZCBzZWN1cml0eSByZXF1aXJlbWVudHMuCiMgICBQTDIgY29tZXMgd2l0aCBzb21lIEZQcyB3aGljaCB5b3UgbmVlZCB0byBoYW5kbGUuCiMgLSBQYXJhbm9pYSBsZXZlbCAzIGVuYWJsZXMgbW9yZSBydWxlcyBhbmQga2V5d29yZCBsaXN0cywgYW5kIHR3ZWFrcwojICAgbGltaXRzIG9uIHNwZWNpYWwgY2hhcmFjdGVycyB1c2VkLiBQTDMgaXMgYWltZWQgYXQgdXNlcnMgZXhwZXJpZW5jZWQKIyAgIGF0IHRoZSBoYW5kbGluZyBvZiBGUHMgYW5kIGF0IGluc3RhbGxhdGlvbnMgd2l0aCBhIGhpZ2ggc2VjdXJpdHkKIyAgIHJlcXVpcmVtZW50LgojIC0gUGFyYW5vaWEgbGV2ZWwgNCBmdXJ0aGVyIHJlc3RyaWN0cyBzcGVjaWFsIGNoYXJhY3RlcnMuCiMgICBUaGUgaGlnaGVzdCBsZXZlbCBpcyBhZHZpc2VkIGZvciBleHBlcmllbmNlZCB1c2VycyBwcm90ZWN0aW5nCiMgICBpbnN0YWxsYXRpb25zIHdpdGggdmVyeSBoaWdoIHNlY3VyaXR5IHJlcXVpcmVtZW50cy4gUnVubmluZyBQTDQgd2lsbAojICAgbGlrZWx5IHByb2R1Y2UgYSB2ZXJ5IGhpZ2ggbnVtYmVyIG9mIEZQcyB3aGljaCBoYXZlIHRvIGJlCiMgICB0cmVhdGVkIGJlZm9yZSB0aGUgc2l0ZSBjYW4gZ28gcHJvZHVjdGl2ZS4KIwojIEFsbCBydWxlcyB3aWxsIGxvZyB0aGVpciBQTCB0byB0aGUgYXVkaXQgbG9nOwojIGV4YW1wbGU6IFt0YWcgInBhcmFub2lhLWxldmVsLzIiXS4gVGhpcyBhbGxvd3MgeW91IHRvIGRlZHVjdCBmcm9tIHRoZQojIGF1ZGl0IGxvZyBob3cgdGhlIFdBRiBiZWhhdmlvciBpcyBhZmZlY3RlZCBieSBwYXJhbm9pYSBsZXZlbC4KIwojIEl0IGlzIGltcG9ydGFudCB0byBhbHNvIGxvb2sgaW50byB0aGUgdmFyaWFibGUKIyB0eC5lbmZvcmNlX2JvZHlwcm9jX3VybGVuY29kZWQgKEVuZm9yY2UgQm9keSBQcm9jZXNzb3IgVVJMRU5DT0RFRCkKIyBkZWZpbmVkIGJlbG93LiBFbmFibGluZyBpdCBjbG9zZXMgYSBwb3NzaWJsZSBieXBhc3Mgb2YgQ1JTLgojCiMgVW5jb21tZW50IHRoaXMgcnVsZSB0byBjaGFuZ2UgdGhlIGRlZmF1bHQ6CiMKI1NlY0FjdGlvbiBcCiMgICJpZDo5MDAwMDAsXAojICAgcGhhc2U6MSxcCiMgICBub2xvZyxcCiMgICBwYXNzLFwKIyAgIHQ6bm9uZSxcCiMgICBzZXR2YXI6dHgucGFyYW5vaWFfbGV2ZWw9MSIKCgojIEl0IGlzIHBvc3NpYmxlIHRvIGV4ZWN1dGUgcnVsZXMgZnJvbSBhIGhpZ2hlciBwYXJhbm9pYSBsZXZlbCBidXQgbm90IGluY2x1ZGUKIyB0aGVtIGluIHRoZSBhbm9tYWx5IHNjb3JpbmcuIFRoaXMgYWxsb3dzIHlvdSB0byB0YWtlIGEgd2VsbC10dW5lZCBzeXN0ZW0gb24KIyBwYXJhbm9pYSBsZXZlbCAxIGFuZCBhZGQgcnVsZXMgZnJvbSBwYXJhbm9pYSBsZXZlbCAyIHdpdGhvdXQgaGF2aW5nIHRvIGZlYXIKIyB0aGUgbmV3IHJ1bGVzIHdvdWxkIGxlYWQgdG8gZmFsc2UgcG9zaXRpdmVzIHRoYXQgcmFpc2UgeW91ciBzY29yZSBhYm92ZSB0aGUKIyB0aHJlc2hvbGQuCiMgVGhpcyBvcHRpb25hbCBmZWF0dXJlIGlzIGVuYWJsZWQgYnkgdW5jb21tZW50aW5nIHRoZSBmb2xsb3dpbmcgcnVsZSBhbmQKIyBzZXR0aW5nIHRoZSB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwuCiMgVGVjaG5pY2FsbHksIHJ1bGVzIHVwIHRvIHRoZSBsZXZlbCBkZWZpbmVkIGluIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbAojIHdpbGwgYmUgZXhlY3V0ZWQsIGJ1dCBvbmx5IHRoZSBydWxlcyB1cCB0byB0eC5wYXJhbm9pYV9sZXZlbCBhZmZlY3QgdGhlCiMgYW5vbWFseSBzY29yZXMuCiMgQnkgZGVmYXVsdCwgdHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsIGlzIHNldCB0byB0eC5wYXJhbm9pYV9sZXZlbC4KIyB0eC5leGVjdXRpbmdfcGFyYW5vaWFfbGV2ZWwgbXVzdCBub3QgYmUgbG93ZXIgdGhhbiB0eC5wYXJhbm9pYV9sZXZlbC4KIwojIFBsZWFzZSBub3RpY2UgdGhhdCBzZXR0aW5nIHR4LmV4ZWN1dGluZ19wYXJhbm9pYV9sZXZlbCB0byBhIGhpZ2hlciBwYXJhbm9pYQojIGxldmVsIHJlc3VsdHMgaW4gYSBwZXJmb3JtYW5jZSBpbXBhY3QgdGhhdCBpcyBlcXVhbGx5IGhpZ2ggYXMgc2V0dGluZwojIHR4LnBhcmFub2lhX2xldmVsIHRvIHNhaWQgbGV2ZWwuCiMKI1NlY0FjdGlvbiBcCiMgICJpZDo5MDAwMDEsXAojICAgcGhhc2U6MSxcCiMgICBub2xvZyxcCiMgICBwYXNzLFwKIyAgIHQ6bm9uZSxcCiMgICBzZXR2YXI6dHguZXhlY3V0aW5nX3BhcmFub2lhX2xldmVsPTEiCgoKIwojIC0tIFtbIEVuZm9yY2UgQm9keSBQcm9jZXNzb3IgVVJMRU5DT0RFRCBdXSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojCiMgTW9kU2VjdXJpdHkgc2VsZWN0cyB0aGUgYm9keSBwcm9jZXNzb3IgYmFzZWQgb24gdGhlIENvbnRlbnQtVHlwZSByZXF1ZXN0CiMgaGVhZGVyLiBCdXQgY2xpZW50cyBhcmUgbm90IGFsd2F5cyBzZXR0aW5nIHRoZSBDb250ZW50LVR5cGUgaGVhZGVyIGZvciB0aGVpcgojIHJlcXVlc3QgYm9keSBwYXlsb2Fkcy4gVGhpcyB3aWxsIGxlYXZlIE1vZFNlY3VyaXR5IHdpdGggbGltaXRlZCB2aXNpb24gaW50bwojIHRoZSBwYXlsb2FkLiAgVGhlIHZhcmlhYmxlIHR4LmVuZm9yY2VfYm9keXByb2NfdXJsZW5jb2RlZCBsZXRzIHlvdSBmb3JjZSB0aGUKIyBVUkxFTkNPREVEIGJvZHkgcHJvY2Vzc29yIGluIHRoZXNlIHNpdHVhdGlvbnMuIFRoaXMgaXMgb2ZmIGJ5IGRlZmF1bHQsIGFzIGl0CiMgaW1wbGllcyBhIGNoYW5nZSBvZiB0aGUgYmVoYXZpb3VyIG9mIE1vZFNlY3VyaXR5IGJleW9uZCBDUlMgKHRoZSBib2R5CiMgcHJvY2Vzc29yIGFwcGxpZXMgdG8gYWxsIHJ1bGVzLCBub3Qgb25seSBDUlMpIGFuZCBiZWNhdXNlIGl0IG1heSBsZWFkIHRvCiMgZmFsc2UgcG9zaXRpdmVzIGFscmVhZHkgb24gcGFyYW5vaWEgbGV2ZWwgMS4gSG93ZXZlciwgZW5hYmxpbmcgdGhpcyB2YXJpYWJsZQojIGNsb3NlcyBhIHBvc3NpYmxlIGJ5cGFzcyBvZiBDUlMgc28gaXQgc2hvdWxkIGJlIGNvbnNpZGVyZWQuCiMKIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIGNoYW5nZSB0aGUgZGVmYXVsdDoKIwojU2VjQWN0aW9uIFwKIyAgImlkOjkwMDAxMCxcCiMgICBwaGFzZToxLFwKIyAgIG5vbG9nLFwKIyAgIHBhc3MsXAojICAgdDpub25lLFwKIyAgIHNldHZhcjp0eC5lbmZvcmNlX2JvZHlwcm9jX3VybGVuY29kZWQ9MSIKCgojCiMgLS0gW1sgQW5vbWFseSBNb2RlIFNldmVyaXR5IExldmVscyBdXSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMKIyBFYWNoIHJ1bGUgaW4gdGhlIENSUyBoYXMgYW4gYXNzb2NpYXRlZCBzZXZlcml0eSBsZXZlbC4KIyBUaGVzZSBhcmUgdGhlIGRlZmF1bHQgc2NvcmluZyBwb2ludHMgZm9yIGVhY2ggc2V2ZXJpdHkgbGV2ZWwuCiMgVGhlc2Ugc2V0dGluZ3Mgd2lsbCBiZSB1c2VkIHRvIGluY3JlbWVudCB0aGUgYW5vbWFseSBzY29yZSBpZiBhIHJ1bGUgbWF0Y2hlcy4KIyBZb3UgbWF5IGFkanVzdCB0aGVzZSBwb2ludHMgdG8geW91ciBsaWtpbmcsIGJ1dCB0aGlzIGlzIHVzdWFsbHkgbm90IG5lZWRlZC4KIwojIC0gQ1JJVElDQUwgc2V2ZXJpdHk6IEFub21hbHkgU2NvcmUgb2YgNS4KIyAgICAgICBNb3N0bHkgZ2VuZXJhdGVkIGJ5IHRoZSBhcHBsaWNhdGlvbiBhdHRhY2sgcnVsZXMgKDkzeCBhbmQgOTR4IGZpbGVzKS4KIyAtIEVSUk9SIHNldmVyaXR5OiBBbm9tYWx5IFNjb3JlIG9mIDQuCiMgICAgICAgR2VuZXJhdGVkIG1vc3RseSBmcm9tIG91dGJvdW5kIGxlYWthZ2UgcnVsZXMgKDk1eCBmaWxlcykuCiMgLSBXQVJOSU5HIHNldmVyaXR5OiBBbm9tYWx5IFNjb3JlIG9mIDMuCiMgICAgICAgR2VuZXJhdGVkIG1vc3RseSBieSBtYWxpY2lvdXMgY2xpZW50IHJ1bGVzICg5MXggZmlsZXMpLgojIC0gTk9USUNFIHNldmVyaXR5OiBBbm9tYWx5IFNjb3JlIG9mIDIuCiMgICAgICAgR2VuZXJhdGVkIG1vc3RseSBieSB0aGUgcHJvdG9jb2wgcnVsZXMgKDkyeCBmaWxlcykuCiMKIyBJbiBhbm9tYWx5IG1vZGUsIHRoZXNlIHNjb3JlcyBhcmUgY3VtdWxhdGl2ZS4KIyBTbyBpdCdzIHBvc3NpYmxlIGZvciBhIHJlcXVlc3QgdG8gaGl0IG11bHRpcGxlIHJ1bGVzLgojCiMgKE5vdGU6IEluIHRoaXMgZmlsZSwgd2UgdXNlICdwaGFzZToxJyB0byBzZXQgQ1JTIGNvbmZpZ3VyYXRpb24gdmFyaWFibGVzLgojIEluIGdlbmVyYWwsICdwaGFzZTpyZXF1ZXN0JyBpcyB1c2VkLiBIb3dldmVyLCB3ZSB3YW50IHRvIG1ha2UgYWJzb2x1dGVseSBzdXJlCiMgdGhhdCBhbGwgY29uZmlndXJhdGlvbiB2YXJpYWJsZXMgYXJlIHNldCBiZWZvcmUgdGhlIENSUyBydWxlcyBhcmUgcHJvY2Vzc2VkLikKIwojU2VjQWN0aW9uIFwKIyAiaWQ6OTAwMTAwLFwKIyAgcGhhc2U6MSxcCiMgIG5vbG9nLFwKIyAgcGFzcyxcCiMgIHQ6bm9uZSxcCiMgIHNldHZhcjp0eC5jcml0aWNhbF9hbm9tYWx5X3Njb3JlPTUsXAojICBzZXR2YXI6dHguZXJyb3JfYW5vbWFseV9zY29yZT00LFwKIyAgc2V0dmFyOnR4Lndhcm5pbmdfYW5vbWFseV9zY29yZT0zLFwKIyAgc2V0dmFyOnR4Lm5vdGljZV9hbm9tYWx5X3Njb3JlPTIiCgoKIwojIC0tIFtbIEFub21hbHkgTW9kZSBCbG9ja2luZyBUaHJlc2hvbGQgTGV2ZWxzIF1dIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojCiMgSGVyZSwgeW91IGNhbiBzcGVjaWZ5IGF0IHdoaWNoIGN1bXVsYXRpdmUgYW5vbWFseSBzY29yZSBhbiBpbmJvdW5kIHJlcXVlc3QsCiMgb3Igb3V0Ym91bmQgcmVzcG9uc2UsIGdldHMgYmxvY2tlZC4KIwojIE1vc3QgZGV0ZWN0ZWQgaW5ib3VuZCB0aHJlYXRzIHdpbGwgZ2l2ZSBhIGNyaXRpY2FsIHNjb3JlIG9mIDUuCiMgU21hbGxlciB2aW9sYXRpb25zLCBsaWtlIHZpb2xhdGlvbnMgb2YgcHJvdG9jb2wvc3RhbmRhcmRzLCBjYXJyeSBsb3dlciBzY29yZXMuCiMKIyBbIEF0IGRlZmF1bHQgdmFsdWUgXQojIElmIHlvdSBrZWVwIHRoZSBibG9ja2luZyB0aHJlc2hvbGRzIGF0IHRoZSBkZWZhdWx0cywgdGhlIENSUyB3aWxsIHdvcmsKIyBzaW1pbGFybHkgdG8gcHJldmlvdXMgQ1JTIHZlcnNpb25zOiBhIHNpbmdsZSBjcml0aWNhbCBydWxlIG1hdGNoIHdpbGwgY2F1c2UKIyB0aGUgcmVxdWVzdCB0byBiZSBibG9ja2VkIGFuZCBsb2dnZWQuCiMKIyBbIFVzaW5nIGhpZ2hlciB2YWx1ZXMgXQojIElmIHlvdSB3YW50IHRvIG1ha2UgdGhlIENSUyBsZXNzIHNlbnNpdGl2ZSwgeW91IGNhbiBpbmNyZWFzZSB0aGUgYmxvY2tpbmcKIyB0aHJlc2hvbGRzLCBmb3IgaW5zdGFuY2UgdG8gNyAod2hpY2ggd291bGQgcmVxdWlyZSBtdWx0aXBsZSBydWxlIG1hdGNoZXMKIyBiZWZvcmUgYmxvY2tpbmcpIG9yIDEwICh3aGljaCB3b3VsZCByZXF1aXJlIGF0IGxlYXN0IHR3byBjcml0aWNhbCBhbGVydHMgLSBvcgojIGEgY29tYmluYXRpb24gb2YgbWFueSBsZXNzZXIgYWxlcnRzKSwgb3IgZXZlbiBoaWdoZXIuIEhvd2V2ZXIsIGluY3JlYXNpbmcgdGhlCiMgdGhyZXNob2xkcyBtaWdodCBjYXVzZSBzb21lIGF0dGFja3MgdG8gYnlwYXNzIHRoZSBDUlMgcnVsZXMgb3IgeW91ciBwb2xpY2llcy4KIwojIFsgTmV3IGRlcGxveW1lbnQgc3RyYXRlZ3k6IFN0YXJ0aW5nIGhpZ2ggYW5kIGRlY3JlYXNpbmcgXQojIEl0IGlzIGEgY29tbW9uIHByYWN0aWNlIHRvIHN0YXJ0IGEgZnJlc2ggQ1JTIGluc3RhbGxhdGlvbiB3aXRoIGVsZXZhdGVkCiMgYW5vbWFseSBzY29yaW5nIHRocmVzaG9sZHMgKD4xMDApIGFuZCB0aGVuIGxvd2VyIHRoZSBsaW1pdHMgYXMgeW91cgojIGNvbmZpZGVuY2UgaW4gdGhlIHNldHVwIGdyb3dzLiBZb3UgbWF5IGFsc28gbG9vayBpbnRvIHRoZSBTYW1wbGluZwojIFBlcmNlbnRhZ2Ugc2VjdGlvbiBiZWxvdyBmb3IgYSBkaWZmZXJlbnQgc3RyYXRlZ3kgdG8gZWFzZSBpbnRvIGEgbmV3CiMgQ1JTIGluc3RhbGxhdGlvbi4KIwojIFsgQW5vbWFseSBUaHJlc2hvbGQgLyBQYXJhbm9pYSBMZXZlbCBRdWFkcmFudCBdCiMKIyAgICAgSGlnaCBBbm9tYWx5IExpbWl0ICAgfCAgIEhpZ2ggQW5vbWFseSBMaW1pdAojICAgICBMb3cgUGFyYW5vaWEgTGV2ZWwgICB8ICAgSGlnaCBQYXJhbm9pYSBMZXZlbAojICAgICAtPiBGcmVzaCBTaXRlICAgICAgICB8ICAgLT4gRXhwZXJpbWVudGFsIFNpdGUKIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyAgICAgTG93IEFub21hbHkgTGltaXQgICAgfCAgIExvdyBBbm9tYWx5IExpbWl0CiMgICAgIExvdyBQYXJhbm9pYSBMZXZlbCAgIHwgICBIaWdoIFBhcmFub2lhIExldmVsCiMgICAgIC0+IFN0YW5kYXJkIFNpdGUgICAgIHwgICAtPiBIaWdoIFNlY3VyaXR5IFNpdGUKIwojIFVuY29tbWVudCB0aGlzIHJ1bGUgdG8gY2hhbmdlIHRoZSBkZWZhdWx0czoKIwpTZWNBY3Rpb24gXAoiaWQ6OTAwMTEwLFwKIHBoYXNlOjEsXAogbm9sb2csXAogcGFzcyxcCiB0Om5vbmUsXAogc2V0dmFyOnR4LmluYm91bmRfYW5vbWFseV9zY29yZV90aHJlc2hvbGQ9MTAwLFwKIHNldHZhcjp0eC5vdXRib3VuZF9hbm9tYWx5X3Njb3JlX3RocmVzaG9sZD0xMDAiCgojCiMgLS0gW1sgQXBwbGljYXRpb24gU3BlY2lmaWMgUnVsZSBFeGNsdXNpb25zIF1dIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIwojIFNvbWUgd2VsbC1rbm93biBhcHBsaWNhdGlvbnMgbWF5IHVuZGVydGFrZSBhY3Rpb25zIHRoYXQgYXBwZWFyIHRvIGJlCiMgbWFsaWNpb3VzLiBUaGlzIGluY2x1ZGVzIGFjdGlvbnMgc3VjaCBhcyBhbGxvd2luZyBIVE1MIG9yIEphdmFzY3JpcHQgd2l0aGluCiMgcGFyYW1ldGVycy4gSW4gc3VjaCBjYXNlcyB0aGUgQ1JTIGFpbXMgdG8gcHJldmVudCBmYWxzZSBwb3NpdGl2ZXMgYnkgYWxsb3dpbmcKIyBhZG1pbmlzdHJhdG9ycyB0byBlbmFibGUgcHJlYnVpbHQsIGFwcGxpY2F0aW9uIHNwZWNpZmljIGV4Y2x1c2lvbnMgb24gYW4KIyBhcHBsaWNhdGlvbiBieSBhcHBsaWNhdGlvbiBiYXNpcy4KIyBUaGVzZSBhcHBsaWNhdGlvbiBzcGVjaWZpYyBleGNsdXNpb25zIGFyZSBkaXN0aW5jdCBmcm9tIHRoZSBydWxlcyB0aGF0IHdvdWxkCiMgYmUgcGxhY2VkIGluIHRoZSBSRVFVRVNULTkwMC1FWENMVVNJT04tUlVMRVMtQkVGT1JFLUNSUyBjb25maWd1cmF0aW9uIGZpbGUgYXMKIyB0aGV5IGFyZSBwcmVidWlsdCBmb3Igc3BlY2lmaWMgYXBwbGljYXRpb25zLiBUaGUgJ1JFUVVFU1QtOTAwJyBmaWxlIGlzCiMgZGVzaWduZWQgZm9yIHVzZXJzIHRvIGFkZCB0aGVpciBvd24gY3VzdG9tIGV4Y2x1c2lvbnMuIE5vdGUsIHVzaW5nIHRoZXNlCiMgYXBwbGljYXRpb24gc3BlY2lmaWMgZXhjbHVzaW9ucyBtYXkgbG9vc2VuIHJlc3RyaWN0aW9ucyBvZiB0aGUgQ1JTLAojIGVzcGVjaWFsbHkgaWYgdXNlZCB3aXRoIGFuIGFwcGxpY2F0aW9uIHRoZXkgd2VyZW4ndCBkZXNpZ25lZCBmb3IuIEFzIGEgcmVzdWx0CiMgdGhleSBzaG91bGQgYmUgYXBwbGllZCB3aXRoIGNhcmUuCiMgVG8gdXNlIHRoaXMgZnVuY3Rpb25hbGl0eSB5b3UgbXVzdCBzcGVjaWZ5IGEgc3VwcG9ydGVkIGFwcGxpY2F0aW9uLiBUbyBkbyBzbwojIHVuY29tbWVudCBydWxlIDkwMDEzMC4gSW4gYWRkaXRpb24gdG8gdW5jb21tZW50aW5nIHRoZSBydWxlIHlvdSB3aWxsIG5lZWQgdG8KIyBzcGVjaWZ5IHdoaWNoIGFwcGxpY2F0aW9uKHMpIHlvdSdkIGxpa2UgdG8gZW5hYmxlIGV4Y2x1c2lvbnMgZm9yLiBPbmx5IGEKIyAodmVyeSkgbGltaXRlZCBzZXQgb2YgYXBwbGljYXRpb25zIGFyZSBjdXJyZW50bHkgc3VwcG9ydGVkLCBwbGVhc2UgdXNlIHRoZQojIGZpbGVuYW1lcyBwcmVmaXhlZCB3aXRoICdSRVFVRVNULTkwMycgdG8gZ3VpZGUgeW91IGluIHlvdXIgc2VsZWN0aW9uLgojIFN1Y2ggZmlsZW5hbWVzIHVzZSB0aGUgZm9sbG93aW5nIGNvbnZlbnRpb246CiMgUkVRVUVTVC05MDMuOVhYWC17QVBQTkFNRX0tRVhDTFVTSU9OUy1SVUxFUy5jb25mCiMKIyBJdCBpcyByZWNvbW1lbmRlZCBpZiB5b3UgcnVuIG11bHRpcGxlIHdlYiBhcHBsaWNhdGlvbnMgb24geW91ciBzaXRlIHRvIGxpbWl0CiMgdGhlIGVmZmVjdHMgb2YgdGhlIGV4Y2x1c2lvbiB0byBvbmx5IHRoZSBwYXRoIHdoZXJlIHRoZSBleGNsdWRlZCB3ZWJhcHAKIyByZXNpZGVzIHVzaW5nIGEgcnVsZSBzaW1pbGFyIHRvIHRoZSBmb2xsb3dpbmcgZXhhbXBsZToKIyBTZWNSdWxlIFJFUVVFU1RfVVJJICJAYmVnaW5zV2l0aCAvd29yZHByZXNzLyIgc2V0dmFyOnR4LmNyc19leGNsdXNpb25zX3dvcmRwcmVzcz0xCgojCiMgTW9kaWZ5IGFuZCB1bmNvbW1lbnQgdGhpcyBydWxlIHRvIHNlbGVjdCB3aGljaCBhcHBsaWNhdGlvbjoKIwojU2VjQWN0aW9uIFwKIyAiaWQ6OTAwMTMwLFwKIyAgcGhhc2U6MSxcCiMgIG5vbG9nLFwKIyAgcGFzcyxcCiMgIHQ6bm9uZSxcCiMgIHNldHZhcjp0eC5jcnNfZXhjbHVzaW9uc19jcGFuZWw9MSxcCiMgIHNldHZhcjp0eC5jcnNfZXhjbHVzaW9uc19kcnVwYWw9MSxcCiMgIHNldHZhcjp0eC5jcnNfZXhjbHVzaW9uc19kb2t1d2lraT0xLFwKIyAgc2V0dmFyOnR4LmNyc19leGNsdXNpb25zX25leHRjbG91ZD0xLFwKIyAgc2V0dmFyOnR4LmNyc19leGNsdXNpb25zX3dvcmRwcmVzcz0xLFwKIyAgc2V0dmFyOnR4LmNyc19leGNsdXNpb25zX3hlbmZvcm89MSIKCiMKIyAtLSBbWyBIVFRQIFBvbGljeSBTZXR0aW5ncyBdXSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIwojIFRoaXMgc2VjdGlvbiBkZWZpbmVzIHlvdXIgcG9saWNpZXMgZm9yIHRoZSBIVFRQIHByb3RvY29sLCBzdWNoIGFzOgojIC0gYWxsb3dlZCBIVFRQIHZlcnNpb25zLCBIVFRQIG1ldGhvZHMsIGFsbG93ZWQgcmVxdWVzdCBDb250ZW50LVR5cGVzCiMgLSBmb3JiaWRkZW4gZmlsZSBleHRlbnNpb25zIChlLmcuIC5iYWssIC5zcWwpIGFuZCByZXF1ZXN0IGhlYWRlcnMgKGUuZy4gUHJveHkpCiMKIyBUaGVzZSB2YXJpYWJsZXMgYXJlIHVzZWQgaW4gdGhlIGZvbGxvd2luZyBydWxlIGZpbGVzOgojIC0gUkVRVUVTVC05MTEtTUVUSE9ELUVORk9SQ0VNRU5ULmNvbmYKIyAtIFJFUVVFU1QtOTEyLURPUy1QUk9URUNUSU9OLmNvbmYKIyAtIFJFUVVFU1QtOTIwLVBST1RPQ09MLUVORk9SQ0VNRU5ULmNvbmYKCiMgSFRUUCBtZXRob2RzIHRoYXQgYSBjbGllbnQgaXMgYWxsb3dlZCB0byB1c2UuCiMgRGVmYXVsdDogR0VUIEhFQUQgUE9TVCBPUFRJT05TCiMgRXhhbXBsZTogZm9yIFJFU1RmdWwgQVBJcywgYWRkIHRoZSBmb2xsb3dpbmcgbWV0aG9kczogUFVUIFBBVENIIERFTEVURQojIEV4YW1wbGU6IGZvciBXZWJEQVYsIGFkZCB0aGUgZm9sbG93aW5nIG1ldGhvZHM6IENIRUNLT1VUIENPUFkgREVMRVRFIExPQ0sKIyAgICAgICAgICBNRVJHRSBNS0FDVElWSVRZIE1LQ09MIE1PVkUgUFJPUEZJTkQgUFJPUFBBVENIIFBVVCBVTkxPQ0sKIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIGNoYW5nZSB0aGUgZGVmYXVsdC4KI1NlY0FjdGlvbiBcCiMgImlkOjkwMDIwMCxcCiMgIHBoYXNlOjEsXAojICBub2xvZyxcCiMgIHBhc3MsXAojICB0Om5vbmUsXAojICBzZXR2YXI6J3R4LmFsbG93ZWRfbWV0aG9kcz1HRVQgSEVBRCBQT1NUIE9QVElPTlMnIgoKIyBDb250ZW50LVR5cGVzIHRoYXQgYSBjbGllbnQgaXMgYWxsb3dlZCB0byBzZW5kIGluIGEgcmVxdWVzdC4KIyBEZWZhdWx0OiB8YXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkfCB8bXVsdGlwYXJ0L2Zvcm0tZGF0YXwgfG11bHRpcGFydC9yZWxhdGVkfAojIHx0ZXh0L3htbHwgfGFwcGxpY2F0aW9uL3htbHwgfGFwcGxpY2F0aW9uL3NvYXAreG1sfCB8YXBwbGljYXRpb24vanNvbnwKIyB8YXBwbGljYXRpb24vY2xvdWRldmVudHMranNvbnwgfGFwcGxpY2F0aW9uL2Nsb3VkZXZlbnRzLWJhdGNoK2pzb258CiMKIyBQbGVhc2Ugbm90ZSwgdGhhdCB0aGUgcnVsZSB3aGVyZSBDUlMgdXNlcyB0aGlzIHZhcmlhYmxlICg5MjA0MjApIGV2YWx1YXRlcyBpdCB3aXRoIG9wZXJhdG9yCiMgYEB3aXRoaW5gLCB3aGljaCBpcyBjYXNlIHNlbnNpdGl2ZSwgYnV0IHVzZXMgdDpsb3dlcmNhc2UuIFlvdSBtdXN0IGFkZCB5b3VyIHdob2xlIGN1c3RvbQojIENvbnRlbnQtVHlwZSB3aXRoIGxvd2VyY2FzZS4KIwojIEJ5cGFzcyBXYXJuaW5nOiBzb21lIGFwcGxpY2F0aW9ucyBtYXkgbm90IHJlbHkgb24gdGhlIGNvbnRlbnQtdHlwZSByZXF1ZXN0IGhlYWRlciBpbiBvcmRlcgojIHRvIHBhcnNlIHRoZSByZXF1ZXN0IGJvZHkuIFRoaXMgY291bGQgbWFrZSBhbiBhdHRhY2tlciBhYmxlIHRvIHNlbmQgbWFsaWNpb3VzIFVSTEVOQ09ERUQvSlNPTi9YTUwKIyBwYXlsb2FkcyB3aXRob3V0IGJlaW5nIGRldGVjdGVkIGJ5IHRoZSBXQUYuIEFsbG93aW5nIHJlcXVlc3QgY29udGVudC10eXBlIHRoYXQgZG9lc24ndCBhY3RpdmF0ZSBhbnkKIyBib2R5IHByb2Nlc3NvciAoZm9yIGV4YW1wbGU6ICJ0ZXh0L3BsYWluIiwgImFwcGxpY2F0aW9uL3gtYW1mIiwgImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSIsIGV0Yy4uKQojIGNvdWxkIGxlYWQgdG8gYSBXQUYgYnlwYXNzLiBGb3IgZXhhbXBsZSwgYSBtYWxpY2lvdXMgSlNPTiBwYXlsb2FkIHN1Ym1pdHRlZCB3aXRoIGEgInRleHQvcGxhaW4iCiMgY29udGVudCB0eXBlIG1heSBzdGlsbCBiZSBpbnRlcnByZXRlZCBhcyBKU09OIGJ5IGEgYmFja2VuZCBhcHBsaWNhdGlvbiBidXQgd291bGQgbm90IHRyaWdnZXIgdGhlCiMgSlNPTiBib2R5IHBhcnNlciBhdCB0aGUgV0FGLCBsZWFkaW5nIHRvIGEgYnlwYXNzLgojCiMgVG8gcHJldmVudCBibG9ja2luZyByZXF1ZXN0IHdpdGggbm90IGFsbG93ZWQgY29udGVudC10eXBlIGJ5IGRlZmF1bHQsIHlvdSBjYW4gY3JlYXRlIGFuIGV4Y2x1c2lvbgojIHJ1bGUgdGhhdCByZW1vdmVzIHJ1bGUgOTIwNDIwLiBGb3IgZXhhbXBsZToKIyBTZWNSdWxlIFJFUVVFU1RfSEVBREVSUzpDb250ZW50LVR5cGUgIkByeCBedGV4dC9wbGFpbiIgXAojICAiaWQ6MTIzNCxcCiMgIHBoYXNlOjEsXAojICBub2xvZyxcCiMgIHBhc3MsXAojICB0Om5vbmUsXAojICBjdGw6cnVsZVJlbW92ZUJ5SWQ9OTIwNDIwLFwKIyAgY2hhaW4iCiMgIFNlY1J1bGUgUkVRVUVTVF9VUkkgIkByeCBeL2Zvby9iYXIiICJ0Om5vbmUiCiMKIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIGNoYW5nZSB0aGUgZGVmYXVsdC4KIwpTZWNBY3Rpb24gXAoiaWQ6OTAwMjIwLFwKIHBoYXNlOjEsXAogbm9sb2csXAogcGFzcyxcCiB0Om5vbmUsXAogc2V0dmFyOid0eC5hbGxvd2VkX3JlcXVlc3RfY29udGVudF90eXBlPXxhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWR8IHxtdWx0aXBhcnQvZm9ybS1kYXRhfCB8bXVsdGlwYXJ0L3JlbGF0ZWR8IHx0ZXh0L3htbHwgfGFwcGxpY2F0aW9uL3htbHwgfGFwcGxpY2F0aW9uL3NvYXAreG1sfCB8YXBwbGljYXRpb24vanNvbnwgfGFwcGxpY2F0aW9uL2Nsb3VkZXZlbnRzK2pzb258IHxhcHBsaWNhdGlvbi9jbG91ZGV2ZW50cy1iYXRjaCtqc29ufCB8YXBwbGljYXRpb24vZ3JwY3wgfGFwcGxpY2F0aW9uL2dycGMrcHJvdG98IHxhcHBsaWNhdGlvbi9ncnBjK2pzb258IHxhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW18JyIKCiMgQWxsb3dlZCBIVFRQIHZlcnNpb25zLgojIERlZmF1bHQ6IEhUVFAvMS4wIEhUVFAvMS4xIEhUVFAvMiBIVFRQLzIuMAojIEV4YW1wbGUgZm9yIGxlZ2FjeSBjbGllbnRzOiBIVFRQLzAuOSBIVFRQLzEuMCBIVFRQLzEuMSBIVFRQLzIgSFRUUC8yLjAKIyBOb3RlIHRoYXQgc29tZSB3ZWIgc2VydmVyIHZlcnNpb25zIHVzZSAnSFRUUC8yJywgc29tZSAnSFRUUC8yLjAnLCBzbwojIHdlIGluY2x1ZGUgYm90aCB2ZXJzaW9uIHN0cmluZ3MgYnkgZGVmYXVsdC4KIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIGNoYW5nZSB0aGUgZGVmYXVsdC4KI1NlY0FjdGlvbiBcCiMgImlkOjkwMDIzMCxcCiMgIHBoYXNlOjEsXAojICBub2xvZyxcCiMgIHBhc3MsXAojICB0Om5vbmUsXAojICBzZXR2YXI6J3R4LmFsbG93ZWRfaHR0cF92ZXJzaW9ucz1IVFRQLzEuMCBIVFRQLzEuMSBIVFRQLzIgSFRUUC8yLjAnIgoKIyBGb3JiaWRkZW4gZmlsZSBleHRlbnNpb25zLgojIEd1YXJkcyBhZ2FpbnN0IHVuaW50ZW5kZWQgZXhwb3N1cmUgb2YgZGV2ZWxvcG1lbnQvY29uZmlndXJhdGlvbiBmaWxlcy4KIyBEZWZhdWx0OiAuYXNhLyAuYXNheC8gLmFzY3gvIC5heGQvIC5iYWNrdXAvIC5iYWsvIC5iYXQvIC5jZHgvIC5jZXIvIC5jZmcvIC5jbWQvIC5jb20vIC5jb25maWcvIC5jb25mLyAuY3MvIC5jc3Byb2ovIC5jc3IvIC5kYXQvIC5kYi8gLmRiZi8gLmRsbC8gLmRvcy8gLmh0ci8gLmh0dy8gLmlkYS8gLmlkYy8gLmlkcS8gLmluYy8gLmluaS8gLmtleS8gLmxpY3gvIC5sbmsvIC5sb2cvIC5tZGIvIC5vbGQvIC5wYXNzLyAucGRiLyAucG9sLyAucHJpbnRlci8gLnB3ZC8gLnJkYi8gLnJlc291cmNlcy8gLnJlc3gvIC5zcWwvIC5zd3AvIC5zeXMvIC52Yi8gLnZicy8gLnZicHJvai8gLnZzZGlzY28vIC53ZWJpbmZvLyAueHNkLyAueHN4LwojIEV4YW1wbGU6IC5iYWsvIC5jb25maWcvIC5jb25mLyAuZGIvIC5pbmkvIC5sb2cvIC5vbGQvIC5wYXNzLyAucGRiLyAucmRiLyAuc3FsLwojIFVuY29tbWVudCB0aGlzIHJ1bGUgdG8gY2hhbmdlIHRoZSBkZWZhdWx0LgojU2VjQWN0aW9uIFwKIyAiaWQ6OTAwMjQwLFwKIyAgcGhhc2U6MSxcCiMgIG5vbG9nLFwKIyAgcGFzcyxcCiMgIHQ6bm9uZSxcCiMgIHNldHZhcjondHgucmVzdHJpY3RlZF9leHRlbnNpb25zPS5hc2EvIC5hc2F4LyAuYXNjeC8gLmF4ZC8gLmJhY2t1cC8gLmJhay8gLmJhdC8gLmNkeC8gLmNlci8gLmNmZy8gLmNtZC8gLmNvbS8gLmNvbmZpZy8gLmNvbmYvIC5jcy8gLmNzcHJvai8gLmNzci8gLmRhdC8gLmRiLyAuZGJmLyAuZGxsLyAuZG9zLyAuaHRyLyAuaHR3LyAuaWRhLyAuaWRjLyAuaWRxLyAuaW5jLyAuaW5pLyAua2V5LyAubGljeC8gLmxuay8gLmxvZy8gLm1kYi8gLm9sZC8gLnBhc3MvIC5wZGIvIC5wb2wvIC5wcmludGVyLyAucHdkLyAucmRiLyAucmVzb3VyY2VzLyAucmVzeC8gLnNxbC8gLnN3cC8gLnN5cy8gLnZiLyAudmJzLyAudmJwcm9qLyAudnNkaXNjby8gLndlYmluZm8vIC54c2QvIC54c3gvJyIKCiMgRm9yYmlkZGVuIHJlcXVlc3QgaGVhZGVycy4KIyBIZWFkZXIgbmFtZXMgc2hvdWxkIGJlIGxvd2VyY2FzZSwgZW5jbG9zZWQgYnkgL3NsYXNoZXMvIGFzIGRlbGltaXRlcnMuCiMgRGVmYXVsdDogL2FjY2VwdC1jaGFyc2V0LyAvY29udGVudC1lbmNvZGluZy8gL3Byb3h5LyAvbG9jay10b2tlbi8gL2NvbnRlbnQtcmFuZ2UvIC9pZi8KIwojIE5vdGU6IEFjY2VwdC1DaGFyc2V0IGlzIGEgZGVwcmVjYXRlZCBoZWFkZXIgdGhhdCBzaG91bGQgbm90IGJlIHVzZWQgYnkgY2xpZW50cyBhbmQKIyBpZ25vcmVkIGJ5IHNlcnZlcnMuIEl0IGNhbiBiZSB1c2VkIGZvciBhIHJlc3BvbnNlIFdBRiBieXBhc3MsIGJ5IGFza2luZyBmb3IgYSBjaGFyc2V0CiMgdGhhdCB0aGUgV0FGIGNhbm5vdCBkZWNvZGUuCiMgUmVmZXJlbmNlOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvQWNjZXB0LUNoYXJzZXQKIwojIE5vdGU6IENvbnRlbnQtRW5jb2RpbmcgaXMgdXNlZCB0byBsaXN0IGFueSBlbmNvZGluZ3MgdGhhdCBoYXZlIGJlZW4gYXBwbGllZCB0byB0aGUKIyBvcmlnaW5hbCBwYXlsb2FkLiBJdCBpcyBvbmx5IHVzZWQgZm9yIGNvbXByZXNzaW9uLCB3aGljaCBpc24ndCBzdXBwb3J0ZWQgYnkgQ1JTIGJ5CiMgZGVmYXVsdCBzaW5jZSBpdCBibG9ja3MgbmV3bGluZXMgYW5kIG51bGwgYnl0ZXMgaW5zaWRlIHRoZSByZXF1ZXN0IGJvZHkuIE1vc3QKIyBjb21wcmVzc2lvbiBhbGdvcml0aG1zIHJlcXVpcmUgYXQgbGVhc3QgbnVsbCBieXRlcyBwZXIgUkZDLiBCbG9ja2luZyBpdCBzaG91bGRuJ3QKIyBicmVhayBhbnl0aGluZyBhbmQgaW5jcmVhc2VzIHNlY3VyaXR5IHNpbmNlIE1vZFNlY3VyaXR5IGlzIGluY2FwYWJsZSBvZiBwcm9wZXJseQojIHNjYW5uaW5nIGNvbXByZXNzZWQgcmVxdWVzdCBib2RpZXMuCiMKIyBOb3RlOiBCbG9ja2luZyBQcm94eSBoZWFkZXIgcHJldmVudHMgJ2h0dHBveHknIHZ1bG5lcmFiaWxpdHk6IGh0dHBzOi8vaHR0cG94eS5vcmcKIwojIFVuY29tbWVudCB0aGlzIHJ1bGUgdG8gY2hhbmdlIHRoZSBkZWZhdWx0LgojU2VjQWN0aW9uIFwKIyAiaWQ6OTAwMjUwLFwKIyAgcGhhc2U6MSxcCiMgIG5vbG9nLFwKIyAgcGFzcyxcCiMgIHQ6bm9uZSxcCiMgIHNldHZhcjondHgucmVzdHJpY3RlZF9oZWFkZXJzPS9hY2NlcHQtY2hhcnNldC8gL2NvbnRlbnQtZW5jb2RpbmcvIC9wcm94eS8gL2xvY2stdG9rZW4vIC9jb250ZW50LXJhbmdlLyAvaWYvJyIKCiMgRmlsZSBleHRlbnNpb25zIGNvbnNpZGVyZWQgc3RhdGljIGZpbGVzLgojIEV4dGVuc2lvbnMgaW5jbHVkZSB0aGUgZG90LCBsb3dlcmNhc2UsIGVuY2xvc2VkIGJ5IC9zbGFzaGVzLyBhcyBkZWxpbWl0ZXJzLgojIFVzZWQgaW4gRG9TIHByb3RlY3Rpb24gcnVsZS4gU2VlIHNlY3Rpb24gIkFudGktQXV0b21hdGlvbiAvIERvUyBQcm90ZWN0aW9uIi4KIyBEZWZhdWx0OiAvLmpwZy8gLy5qcGVnLyAvLnBuZy8gLy5naWYvIC8uanMvIC8uY3NzLyAvLmljby8gLy5zdmcvIC8ud2VicC8KIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIGNoYW5nZSB0aGUgZGVmYXVsdC4KI1NlY0FjdGlvbiBcCiMgImlkOjkwMDI2MCxcCiMgIHBoYXNlOjEsXAojICBub2xvZyxcCiMgIHBhc3MsXAojICB0Om5vbmUsXAojICBzZXR2YXI6J3R4LnN0YXRpY19leHRlbnNpb25zPS8uanBnLyAvLmpwZWcvIC8ucG5nLyAvLmdpZi8gLy5qcy8gLy5jc3MvIC8uaWNvLyAvLnN2Zy8gLy53ZWJwLyciCgojIENvbnRlbnQtVHlwZXMgY2hhcnNldHMgdGhhdCBhIGNsaWVudCBpcyBhbGxvd2VkIHRvIHNlbmQgaW4gYSByZXF1ZXN0LgojIERlZmF1bHQ6IHV0Zi04fGlzby04ODU5LTF8aXNvLTg4NTktMTV8d2luZG93cy0xMjUyCiMgVW5jb21tZW50IHRoaXMgcnVsZSB0byBjaGFuZ2UgdGhlIGRlZmF1bHQuCiMgVXNlICJ8IiB0byBzZXBhcmF0ZSBtdWx0aXBsZSBjaGFyc2V0cyBsaWtlIGluIHRoZSBydWxlIGRlZmluaW5nCiMgdHguYWxsb3dlZF9yZXF1ZXN0X2NvbnRlbnRfdHlwZS4KI1NlY0FjdGlvbiBcCiMgImlkOjkwMDI4MCxcCiMgIHBoYXNlOjEsXAojICBub2xvZyxcCiMgIHBhc3MsXAojICB0Om5vbmUsXAojICBzZXR2YXI6J3R4LmFsbG93ZWRfcmVxdWVzdF9jb250ZW50X3R5cGVfY2hhcnNldD11dGYtOHxpc28tODg1OS0xfGlzby04ODU5LTE1fHdpbmRvd3MtMTI1MiciCgojCiMgLS0gW1sgSFRUUCBBcmd1bWVudC9VcGxvYWQgTGltaXRzIF1dIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMKIyBIZXJlIHlvdSBjYW4gZGVmaW5lIG9wdGlvbmFsIGxpbWl0cyBvbiBIVFRQIGdldC9wb3N0IHBhcmFtZXRlcnMgYW5kIHVwbG9hZHMuCiMgVGhpcyBjYW4gaGVscCB0byBwcmV2ZW50IGFwcGxpY2F0aW9uIHNwZWNpZmljIERvUyBhdHRhY2tzLgojCiMgVGhlc2UgdmFsdWVzIGFyZSBjaGVja2VkIGluIFJFUVVFU1QtOTIwLVBST1RPQ09MLUVORk9SQ0VNRU5ULmNvbmYuCiMgQmV3YXJlIG9mIGJsb2NraW5nIGxlZ2l0aW1hdGUgdHJhZmZpYyB3aGVuIGVuYWJsaW5nIHRoZXNlIGxpbWl0cy4KIwoKIyBCbG9jayByZXF1ZXN0IGlmIG51bWJlciBvZiBhcmd1bWVudHMgaXMgdG9vIGhpZ2gKIyBEZWZhdWx0OiB1bmxpbWl0ZWQKIyBFeGFtcGxlOiAyNTUKIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIHNldCBhIGxpbWl0LgojU2VjQWN0aW9uIFwKIyAiaWQ6OTAwMzAwLFwKIyAgcGhhc2U6MSxcCiMgIG5vbG9nLFwKIyAgcGFzcyxcCiMgIHQ6bm9uZSxcCiMgIHNldHZhcjp0eC5tYXhfbnVtX2FyZ3M9MjU1IgoKIyBCbG9jayByZXF1ZXN0IGlmIHRoZSBsZW5ndGggb2YgYW55IGFyZ3VtZW50IG5hbWUgaXMgdG9vIGhpZ2gKIyBEZWZhdWx0OiB1bmxpbWl0ZWQKIyBFeGFtcGxlOiAxMDAKIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIHNldCBhIGxpbWl0LgojU2VjQWN0aW9uIFwKIyAiaWQ6OTAwMzEwLFwKIyAgcGhhc2U6MSxcCiMgIG5vbG9nLFwKIyAgcGFzcyxcCiMgIHQ6bm9uZSxcCiMgIHNldHZhcjp0eC5hcmdfbmFtZV9sZW5ndGg9MTAwIgoKIyBCbG9jayByZXF1ZXN0IGlmIHRoZSBsZW5ndGggb2YgYW55IGFyZ3VtZW50IHZhbHVlIGlzIHRvbyBoaWdoCiMgRGVmYXVsdDogdW5saW1pdGVkCiMgRXhhbXBsZTogNDAwCiMgVW5jb21tZW50IHRoaXMgcnVsZSB0byBzZXQgYSBsaW1pdC4KI1NlY0FjdGlvbiBcCiMgImlkOjkwMDMyMCxcCiMgIHBoYXNlOjEsXAojICBub2xvZyxcCiMgIHBhc3MsXAojICB0Om5vbmUsXAojICBzZXR2YXI6dHguYXJnX2xlbmd0aD00MDAiCgojIEJsb2NrIHJlcXVlc3QgaWYgdGhlIHRvdGFsIGxlbmd0aCBvZiBhbGwgY29tYmluZWQgYXJndW1lbnRzIGlzIHRvbyBoaWdoCiMgRGVmYXVsdDogdW5saW1pdGVkCiMgRXhhbXBsZTogNjQwMDAKIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIHNldCBhIGxpbWl0LgojU2VjQWN0aW9uIFwKIyAiaWQ6OTAwMzMwLFwKIyAgcGhhc2U6MSxcCiMgIG5vbG9nLFwKIyAgcGFzcyxcCiMgIHQ6bm9uZSxcCiMgIHNldHZhcjp0eC50b3RhbF9hcmdfbGVuZ3RoPTY0MDAwIgoKIyBCbG9jayByZXF1ZXN0IGlmIHRoZSBmaWxlIHNpemUgb2YgYW55IGluZGl2aWR1YWwgdXBsb2FkZWQgZmlsZSBpcyB0b28gaGlnaAojIERlZmF1bHQ6IHVubGltaXRlZAojIEV4YW1wbGU6IDEwNDg1NzYKIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIHNldCBhIGxpbWl0LgojU2VjQWN0aW9uIFwKIyAiaWQ6OTAwMzQwLFwKIyAgcGhhc2U6MSxcCiMgIG5vbG9nLFwKIyAgcGFzcyxcCiMgIHQ6bm9uZSxcCiMgIHNldHZhcjp0eC5tYXhfZmlsZV9zaXplPTEwNDg1NzYiCgojIEJsb2NrIHJlcXVlc3QgaWYgdGhlIHRvdGFsIHNpemUgb2YgYWxsIGNvbWJpbmVkIHVwbG9hZGVkIGZpbGVzIGlzIHRvbyBoaWdoCiMgRGVmYXVsdDogdW5saW1pdGVkCiMgRXhhbXBsZTogMTA0ODU3NgojIFVuY29tbWVudCB0aGlzIHJ1bGUgdG8gc2V0IGEgbGltaXQuCiNTZWNBY3Rpb24gXAojICJpZDo5MDAzNTAsXAojICBwaGFzZToxLFwKIyAgbm9sb2csXAojICBwYXNzLFwKIyAgdDpub25lLFwKIyAgc2V0dmFyOnR4LmNvbWJpbmVkX2ZpbGVfc2l6ZXM9MTA0ODU3NiIKCgojCiMgLS0gW1sgRWFzaW5nIEluIC8gU2FtcGxpbmcgUGVyY2VudGFnZSBdXSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMKIyBBZGRpbmcgdGhlIENvcmUgUnVsZSBTZXQgdG8gYW4gZXhpc3RpbmcgcHJvZHVjdGl2ZSBzaXRlIGNhbiBsZWFkIHRvIGZhbHNlCiMgcG9zaXRpdmVzLCB1bmV4cGVjdGVkIHBlcmZvcm1hbmNlIGlzc3VlcyBhbmQgb3RoZXIgdW5kZXNpcmVkIHNpZGUgZWZmZWN0cy4KIwojIEl0IGNhbiBiZSBiZW5lZmljaWFsIHRvIHRlc3QgdGhlIHdhdGVyIGZpcnN0IGJ5IGVuYWJsaW5nIHRoZSBDUlMgZm9yIGEKIyBsaW1pdGVkIG51bWJlciBvZiByZXF1ZXN0cyBvbmx5IGFuZCB0aGVuLCB3aGVuIHlvdSBoYXZlIHNvbHZlZCB0aGUgaXNzdWVzIChpZgojIGFueSkgYW5kIHlvdSBoYXZlIGNvbmZpZGVuY2UgaW4gdGhlIHNldHVwLCB0byByYWlzZSB0aGUgcmF0aW8gb2YgcmVxdWVzdHMKIyBiZWluZyBzZW50IGludG8gdGhlIHJ1bGVzZXQuCiMKIyBBZGp1c3QgdGhlIHBlcmNlbnRhZ2Ugb2YgcmVxdWVzdHMgdGhhdCBhcmUgZnVubmVsbGVkIGludG8gdGhlIENvcmUgUnVsZXMgYnkKIyBzZXR0aW5nIFRYLnNhbXBsaW5nX3BlcmNlbnRhZ2UgYmVsb3cuIFRoZSBkZWZhdWx0IGlzIDEwMCwgbWVhbmluZyB0aGF0IGV2ZXJ5CiMgcmVxdWVzdCBnZXRzIGNoZWNrZWQgYnkgdGhlIENSUy4gIFRoZSBzZWxlY3Rpb24gb2YgcmVxdWVzdHMsIHdoaWNoIGFyZSBnb2luZwojIHRvIGJlIGNoZWNrZWQsIGlzIGJhc2VkIG9uIGEgcHNldWRvIHJhbmRvbSBudW1iZXIgZ2VuZXJhdGVkIGJ5IE1vZFNlY3VyaXR5LgojCiMgSWYgYSByZXF1ZXN0IGlzIGFsbG93ZWQgdG8gcGFzcyB3aXRob3V0IGJlaW5nIGNoZWNrZWQgYnkgdGhlIENSUywgdGhlcmUgaXMgbm8KIyBlbnRyeSBpbiB0aGUgYXVkaXQgbG9nIChmb3IgcGVyZm9ybWFuY2UgcmVhc29ucyksIGJ1dCBhbiBlcnJvciBsb2cgZW50cnkgaXMKIyB3cml0dGVuLiAgSWYgeW91IHdhbnQgdG8gZGlzYWJsZSB0aGUgZXJyb3IgbG9nIGVudHJ5LCB0aGVuIGlzc3VlIHRoZQojIGZvbGxvd2luZyBkaXJlY3RpdmUgc29tZXdoZXJlIGFmdGVyIHRoZSBpbmNsdXNpb24gb2YgdGhlIENSUwojIChFLmcuLCBSRVNQT05TRS05OTktRVhDTFVTSU9OLVJVTEVTLUFGVEVSLUNSUy5jb25mKS4KIwojIFNlY1J1bGVVcGRhdGVBY3Rpb25CeUlkIDkwMTE1MCAibm9sb2ciCiMKIyBBVFRFTlRJT046IElmIHRoaXMgVFguc2FtcGxpbmdfcGVyY2VudGFnZSBpcyBiZWxvdyAxMDAsIHRoZW4gc29tZSBvZiB0aGUKIyByZXF1ZXN0cyB3aWxsIGJ5cGFzcyB0aGUgQ29yZSBSdWxlcyBjb21wbGV0ZWx5IGFuZCB5b3UgbG9zZSB0aGUgYWJpbGl0eSB0bwojIHByb3RlY3QgeW91ciBzZXJ2aWNlIHdpdGggTW9kU2VjdXJpdHkuCiMKIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIGVuYWJsZSB0aGlzIGZlYXR1cmU6CiMKI1NlY0FjdGlvbiAiaWQ6OTAwNDAwLFwKIyAgcGhhc2U6MSxcCiMgIHBhc3MsXAojICBub2xvZyxcCiMgIHNldHZhcjp0eC5zYW1wbGluZ19wZXJjZW50YWdlPTEwMCIKCgojCiMgLS0gW1sgUHJvamVjdCBIb25leSBQb3QgSFRUUCBCbGFja2xpc3QgXV0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMKIyBPcHRpb25hbGx5LCB5b3UgY2FuIGNoZWNrIHRoZSBjbGllbnQgSVAgYWRkcmVzcyBhZ2FpbnN0IHRoZSBQcm9qZWN0IEhvbmV5IFBvdAojIEhUVFBCTCAoZG5zYmwuaHR0cGJsLm9yZykuIEluIG9yZGVyIHRvIHVzZSB0aGlzLCB5b3UgbmVlZCB0byByZWdpc3RlciB0byBnZXQgYQojIGZyZWUgQVBJIGtleS4gU2V0IGl0IGhlcmUgd2l0aCBTZWNIdHRwQmxLZXkuCiMKIyBQcm9qZWN0IEhvbmV5cG90IHJldHVybnMgbXVsdGlwbGUgZGlmZmVyZW50IG1hbGljaW91cyBJUCB0eXBlcy4KIyBZb3UgbWF5IHNwZWNpZnkgd2hpY2ggeW91IHdhbnQgdG8gYmxvY2sgYnkgZW5hYmxpbmcgb3IgZGlzYWJsaW5nIHRoZW0gYmVsb3cuCiMKIyBSZWY6IGh0dHBzOi8vd3d3LnByb2plY3Rob25leXBvdC5vcmcvaHR0cGJsLnBocAojIFJlZjogaHR0cHM6Ly9naXRodWIuY29tL1NwaWRlckxhYnMvTW9kU2VjdXJpdHkvd2lraS9SZWZlcmVuY2UtTWFudWFsI3dpa2ktU2VjSHR0cEJsS2V5CiMKIyBVbmNvbW1lbnQgdGhlc2UgcnVsZXMgdG8gdXNlIHRoaXMgZmVhdHVyZToKIwojU2VjSHR0cEJsS2V5IFhYWFhYWFhYWFhYWFhYWFhYCiNTZWNBY3Rpb24gImlkOjkwMDUwMCxcCiMgIHBoYXNlOjEsXAojICBub2xvZyxcCiMgIHBhc3MsXAojICB0Om5vbmUsXAojICBzZXR2YXI6dHguYmxvY2tfc2VhcmNoX2lwPTEsXAojICBzZXR2YXI6dHguYmxvY2tfc3VzcGljaW91c19pcD0xLFwKIyAgc2V0dmFyOnR4LmJsb2NrX2hhcnZlc3Rlcl9pcD0xLFwKIyAgc2V0dmFyOnR4LmJsb2NrX3NwYW1tZXJfaXA9MSIKCgojCiMgLS0gW1sgR2VvSVAgRGF0YWJhc2UgXV0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMKIyBUaGVyZSBhcmUgc29tZSBydWxlc2V0cyB0aGF0IGluc3BlY3QgZ2VvbG9jYXRpb24gZGF0YSBvZiB0aGUgY2xpZW50IElQIGFkZHJlc3MKIyAoZ2VvTG9va3VwKS4gVGhlIENSUyB1c2VzIGdlb0xvb2t1cCB0byBpbXBsZW1lbnQgb3B0aW9uYWwgY291bnRyeSBibG9ja2luZy4KIwojIFRvIHVzZSBnZW9sb2NhdGlvbiwgd2UgbWFrZSB1c2Ugb2YgdGhlIE1heE1pbmQgR2VvSVAgZGF0YWJhc2UuCiMgVGhpcyBkYXRhYmFzZSBpcyBub3QgaW5jbHVkZWQgd2l0aCB0aGUgQ1JTIGFuZCBtdXN0IGJlIGRvd25sb2FkZWQuCiMKIyBUaGVyZSBhcmUgdHdvIGZvcm1hdHMgZm9yIHRoZSBHZW9JUCBkYXRhYmFzZS4gTW9kU2VjdXJpdHkgdjIgdXNlcyBHZW9MaXRlICguZGF0IGZpbGVzKSwKIyBhbmQgTW9kU2VjdXJpdHkgdjMgdXNlcyBHZW9MaXRlMiAoLm1tZGIgZmlsZXMpLgojCiMgSWYgeW91IHVzZSBNb2RTZWN1cml0eSAzLCBNYXhNaW5kIHByb3ZpZGVzIGEgYmluYXJ5IGZvciB1cGRhdGluZyBHZW9MaXRlMiBmaWxlcywKIyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL21heG1pbmQvZ2VvaXB1cGRhdGUuCiMKIyBEb3dubG9hZCB0aGUgcGFja2FnZSBmb3IgeW91ciBPUywgYW5kIHJlYWQgaHR0cHM6Ly9kZXYubWF4bWluZC5jb20vZ2VvaXAvZ2VvaXB1cGRhdGUvCiMgZm9yIGNvbmZpZ3VyYXRpb24gb3B0aW9ucy4KIwojIFdhcm5pbmc6IEdlb0xpdGUgKG5vdCBHZW9MaXRlMikgZGF0YWJhc2VzIGFyZSBjb25zaWRlcmVkIGxlZ2FjeSwgYW5kIG5vdCBiZWluZyB1cGRhdGVkIGFueW1vcmUuCiMgU2VlIGh0dHBzOi8vc3VwcG9ydC5tYXhtaW5kLmNvbS9nZW9saXRlLWxlZ2FjeS1kaXNjb250aW51YXRpb24tbm90aWNlLyBmb3IgbW9yZSBpbmZvLgojCiMgVGhlcmVmb3JlLCBpZiB5b3UgdXNlIE1vZFNlY3VyaXR5IHYyLCB5b3UgbmVlZCB0byByZWdlbmVyYXRlIHVwZGF0ZWQgLmRhdCBmaWxlcwojIGZyb20gQ1NWIGZpbGVzIGZpcnN0LgojCiMgWW91IGNhbiBhY2hpZXZlIHRoaXMgdXNpbmcgaHR0cHM6Ly9naXRodWIuY29tL3NoZXJweWEvZ2VvbGl0ZTJsZWdhY3kKIyBQaWNrIHRoZSB6aXAgZmlsZXMgZnJvbSBtYXhtaW5kIHNpdGU6CiMgaHR0cHM6Ly9nZW9saXRlLm1heG1pbmQuY29tL2Rvd25sb2FkL2dlb2lwL2RhdGFiYXNlL0dlb0xpdGUyLUNvdW50cnktQ1NWLnppcAojCiMgRm9sbG93IHRoZSBndWlkZWxpbmVzIGZvciBpbnN0YWxsaW5nIHRoZSB0b29sIGFuZCBydW46CiMgLi9nZW9saXRlMmxlZ2FjeS5weSAtaSBHZW9MaXRlMi1Db3VudHJ5LUNTVi56aXAgXAojICAgICAgICAgICAgICAgICAgICAgLWYgZ2VvbmFtZTJmaXBzLmNzdiAtbyAvdXNyL3NoYXJlL0dlb2xpdGVDb3VudHJ5LmRhdAojCiMgVXBkYXRlIHRoZSBkYXRhYmFzZSByZWd1bGFybHksIHNlZSBTdGVwIDMgb2YgdGhlIGNvbmZpZ3VyYXRpb24gbGluayBhYm92ZS4KIwojIEJ5IGRlZmF1bHQsIHdoZW4geW91IGV4ZWN1dGUgYHN1ZG8gZ2VvaXB1cGRhdGVgIG9uIExpbnV4LCBmaWxlcyBmcm9tIHRoZSBmcmVlIGRhdGFiYXNlCiMgd2lsbCBiZSBkb3dubG9hZGVkIHRvIGAvdXNyL3NoYXJlL0dlb0lQYCAoYm90aCB2MSBhbmQgdjIpLgojCiMgVGhlbiBjaG9vc2UgZnJvbToKIyAgIC0gYEdlb0xpdGUyLUNvdW50cnkubW1kYmAgKGlmIHlvdSBhcmUgdXNpbmcgTW9kU2VjdXJpdHkgdjMpCiMgICAtIGBHZW9MaXRlQ291bnRyeS5kYXRgICAgIChpZiB5b3UgYXJlIHVzaW5nIE1vZFNlY3VyaXR5IHYyKQojCiMgUmVmOiBodHRwOi8vYmxvZy5zcGlkZXJsYWJzLmNvbS8yMDEwLzEwL2RldGVjdGluZy1tYWxpY2Utd2l0aC1tb2RzZWN1cml0eS1nZW9sb2NhdGlvbi1kYXRhLmh0bWwKIyBSZWY6IGh0dHA6Ly9ibG9nLnNwaWRlcmxhYnMuY29tLzIwMTAvMTEvZGV0ZWN0aW5nLW1hbGljZS13aXRoLW1vZHNlY3VyaXR5LWlwLWZvcmVuc2ljcy5odG1sCiMKIyBVbmNvbW1lbnQgb25seSBvbmUgb2YgdGhlIG5leHQgcnVsZXMgaGVyZSB0byB1c2UgdGhpcyBmZWF0dXJlLgojIENob29zZSB0aGUgb25lIGRlcGVuZGluZyBvbiB0aGUgTW9kU2VjdXJpdHkgdmVyc2lvbiB5b3UgYXJlIHVzaW5nLCBhbmQgY2hhbmdlIHRoZSBwYXRoIGFjY29yZGluZ2x5OgojCiMgRm9yIE1vZFNlY3VyaXR5IHYzOgojU2VjR2VvTG9va3VwREIgL3Vzci9zaGFyZS9HZW9JUC9HZW9MaXRlMi1Db3VudHJ5Lm1tZGIKIyBGb3IgTW9kU2VjdXJpdHkgdjIgKHBvaW50cyB0byB0aGUgY29udmVydGVkIG9uZSk6CiNTZWNHZW9Mb29rdXBEQiAvdXNyL3NoYXJlL0dlb0lQL0dlb0xpdGVDb3VudHJ5LmRhdAoKIwojIC09WyBCbG9jayBDb3VudHJpZXMgXT0tCiMKIyBSdWxlcyBpbiB0aGUgSVAgUmVwdXRhdGlvbiBmaWxlIGNhbiBjaGVjayB0aGUgY2xpZW50IGFnYWluc3QgYSBsaXN0IG9mIGhpZ2gKIyByaXNrIGNvdW50cnkgY29kZXMuIFRoZXNlIGNvdW50cmllcyBoYXZlIHRvIGJlIGRlZmluZWQgaW4gdGhlIHZhcmlhYmxlCiMgdHguaGlnaF9yaXNrX2NvdW50cnlfY29kZXMgdmlhIHRoZWlyIElTTyAzMTY2IHR3by1sZXR0ZXIgY291bnRyeSBjb2RlOgojIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0lTT18zMTY2LTFfYWxwaGEtMiNPZmZpY2lhbGx5X2Fzc2lnbmVkX2NvZGVfZWxlbWVudHMKIwojIElmIHlvdSBhcmUgc3VyZSB0aGF0IHlvdSBhcmUgbm90IGdldHRpbmcgYW55IGxlZ2l0aW1hdGUgcmVxdWVzdHMgZnJvbSBhIGdpdmVuCiMgY291bnRyeSwgdGhlbiB5b3UgY2FuIGRpc2FibGUgYWxsIGFjY2VzcyBmcm9tIHRoYXQgY291bnRyeSB2aWEgdGhpcyB2YXJpYWJsZS4KIyBUaGUgcnVsZSBwZXJmb3JtaW5nIHRoZSB0ZXN0IGhhcyB0aGUgcnVsZSBpZCA5MTAxMDAuCiMKIyBUaGlzIHJ1bGUgcmVxdWlyZXMgU2VjR2VvTG9va3VwREIgdG8gYmUgZW5hYmxlZCBhbmQgdGhlIEdlb0lQIGRhdGFiYXNlIHRvIGJlCiMgZG93bmxvYWRlZCAoc2VlIHRoZSBzZWN0aW9uICJHZW9JUCBEYXRhYmFzZSIgYWJvdmUuKQojCiMgQnkgZGVmYXVsdCwgdGhlIGxpc3QgaXMgZW1wdHkuIEEgbGlzdCB1c2VkIGJ5IHNvbWUgc2l0ZXMgd2FzIHRoZSBmb2xsb3dpbmc6CiMgc2V0dmFyOid0eC5oaWdoX3Jpc2tfY291bnRyeV9jb2Rlcz1VQSBJRCBZVSBMVCBFRyBSTyBCRyBUUiBSVSBQSyBNWSBDTiciCiMKIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIHVzZSB0aGlzIGZlYXR1cmU6CiMKI1NlY0FjdGlvbiBcCiMgImlkOjkwMDYwMCxcCiMgIHBoYXNlOjEsXAojICBub2xvZyxcCiMgIHBhc3MsXAojICB0Om5vbmUsXAojICBzZXR2YXI6J3R4LmhpZ2hfcmlza19jb3VudHJ5X2NvZGVzPSciCgoKIwojIC0tIFtbIEFudGktQXV0b21hdGlvbiAvIERvUyBQcm90ZWN0aW9uIF1dIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojCiMgT3B0aW9uYWwgRG9TIHByb3RlY3Rpb24gYWdhaW5zdCBjbGllbnRzIG1ha2luZyByZXF1ZXN0cyB0b28gcXVpY2tseS4KIwojIFdoZW4gYSBjbGllbnQgaXMgbWFraW5nIG1vcmUgdGhhbiAxMDAgcmVxdWVzdHMgKGV4Y2x1ZGluZyBzdGF0aWMgZmlsZXMpIHdpdGhpbgojIDYwIHNlY29uZHMsIHRoaXMgaXMgY29uc2lkZXJlZCBhICdidXJzdCcuIEFmdGVyIHR3byBidXJzdHMsIHRoZSBjbGllbnQgaXMKIyBibG9ja2VkIGZvciA2MDAgc2Vjb25kcy4KIwojIFJlcXVlc3RzIHRvIHN0YXRpYyBmaWxlcyBhcmUgbm90IGNvdW50ZWQgdG93YXJkcyBEb1M7IHRoZXkgYXJlIGxpc3RlZCBpbiB0aGUKIyAndHguc3RhdGljX2V4dGVuc2lvbnMnIHNldHRpbmcsIHdoaWNoIHlvdSBjYW4gY2hhbmdlIGluIHRoaXMgZmlsZSAoc2VlCiMgc2VjdGlvbiAiSFRUUCBQb2xpY3kgU2V0dGluZ3MiKS4KIwojIEZvciBhIGRldGFpbGVkIGRlc2NyaXB0aW9uLCBzZWUgcnVsZSBmaWxlIFJFUVVFU1QtOTEyLURPUy1QUk9URUNUSU9OLmNvbmYuCiMKIyBVbmNvbW1lbnQgdGhpcyBydWxlIHRvIHVzZSB0aGlzIGZlYXR1cmU6CiMKI1NlY0FjdGlvbiBcCiMgImlkOjkwMDcwMCxcCiMgIHBoYXNlOjEsXAojICBub2xvZyxcCiMgIHBhc3MsXAojICB0Om5vbmUsXAojICBzZXR2YXI6J3R4LmRvc19idXJzdF90aW1lX3NsaWNlPTYwJyxcCiMgIHNldHZhcjondHguZG9zX2NvdW50ZXJfdGhyZXNob2xkPTEwMCcsXAojICBzZXR2YXI6J3R4LmRvc19ibG9ja190aW1lb3V0PTYwMCciCgoKIwojIC0tIFtbIENoZWNrIFVURi04IGVuY29kaW5nIF1dIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojCiMgVGhlIENSUyBjYW4gb3B0aW9uYWxseSBjaGVjayByZXF1ZXN0IGNvbnRlbnRzIGZvciBpbnZhbGlkIFVURi04IGVuY29kaW5nLgojIFdlIG9ubHkgd2FudCB0byBhcHBseSB0aGlzIGNoZWNrIGlmIFVURi04IGVuY29kaW5nIGlzIGFjdHVhbGx5IHVzZWQgYnkgdGhlCiMgc2l0ZTsgb3RoZXJ3aXNlIGl0IHdpbGwgcmVzdWx0IGluIGZhbHNlIHBvc2l0aXZlcy4KIwojIFVuY29tbWVudCB0aGlzIHJ1bGUgdG8gdXNlIHRoaXMgZmVhdHVyZToKIwojU2VjQWN0aW9uIFwKIyAiaWQ6OTAwOTUwLFwKIyAgcGhhc2U6MSxcCiMgIG5vbG9nLFwKIyAgcGFzcyxcCiMgIHQ6bm9uZSxcCiMgIHNldHZhcjp0eC5jcnNfdmFsaWRhdGVfdXRmOF9lbmNvZGluZz0xIgoKCiMKIyAtLSBbWyBCbG9ja2luZyBCYXNlZCBvbiBJUCBSZXB1dGF0aW9uIF1dIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojCiMgQmxvY2tpbmcgYmFzZWQgb24gcmVwdXRhdGlvbiBpcyBwZXJtYW5lbnQgaW4gdGhlIENSUy4gVW5saWtlIG90aGVyIHJ1bGVzLAojIHdoaWNoIGxvb2sgYXQgdGhlIGluZGl2aWR1YWwgcmVxdWVzdCwgdGhlIGJsb2NraW5nIG9mIElQcyBpcyBiYXNlZCBvbgojIGEgcGVyc2lzdGVudCByZWNvcmQgaW4gdGhlIElQIGNvbGxlY3Rpb24sIHdoaWNoIHJlbWFpbnMgYWN0aXZlIGZvciBhCiMgY2VydGFpbiBhbW91bnQgb2YgdGltZS4KIwojIFRoZXJlIGFyZSB0d28gd2F5cyBhbiBpbmRpdmlkdWFsIGNsaWVudCBjYW4gYmVjb21lIGZsYWdnZWQgZm9yIGJsb2NraW5nOgojIC0gRXh0ZXJuYWwgaW5mb3JtYXRpb24gKFJCTCwgR2VvSVAsIGV0Yy4pCiMgLSBJbnRlcm5hbCBpbmZvcm1hdGlvbiAoQ29yZSBSdWxlcykKIwojIFRoZSByZWNvcmQgaW4gdGhlIElQIGNvbGxlY3Rpb24gY2FycmllcyBhIGZsYWcsIHdoaWNoIHRhZ3MgcmVxdWVzdHMgZnJvbQojIGluZGl2aWR1YWwgY2xpZW50cyB3aXRoIGEgZmxhZyBuYW1lZCBJUC5yZXB1dF9ibG9ja19mbGFnLgojIEJ1dCB0aGUgZmxhZyBhbG9uZSBpcyBub3QgZW5vdWdoIHRvIGhhdmUgYSBjbGllbnQgYmxvY2tlZC4gVGhlcmUgaXMgYWxzbwojIGEgZ2xvYmFsIHN3aXRjaCBuYW1lZCB0eC5kb19yZXB1dF9ibG9jay4gVGhpcyBpcyBvZmYgYnkgZGVmYXVsdC4gSWYgeW91IHNldAojIGl0IHRvIDEgKD1PbiksIHJlcXVlc3RzIGZyb20gY2xpZW50cyB3aXRoIHRoZSBJUC5yZXB1dF9ibG9ja19mbGFnIHdpbGwKIyBiZSBibG9ja2VkIGZvciBhIGNlcnRhaW4gZHVyYXRpb24uCiMKIyBWYXJpYWJsZXMKIyBpcC5yZXB1dF9ibG9ja19mbGFnICAgICAgQmxvY2tpbmcgZmxhZyBmb3IgdGhlIElQIGNvbGxlY3Rpb24gcmVjb3JkCiMgaXAucmVwdXRfYmxvY2tfcmVhc29uICAgIFJlYXNvbiAoPSBydWxlIG1lc3NhZ2UpIHRoYXQgY2F1c2VkIHRvIGJsb2NraW5nIGZsYWcKIyB0eC5kb19yZXB1dF9ibG9jayAgICAgICAgU3dpdGNoIGRlY2lkaW5nIGlmIHdlIHJlYWxseSBibG9jayBiYXNlZCBvbiBmbGFnCiMgdHgucmVwdXRfYmxvY2tfZHVyYXRpb24gIFNldHRpbmcgdG8gZGVmaW5lIHRoZSBkdXJhdGlvbiBvZiBhIGJsb2NrCiMKIyBJdCBtYXkgYmUgaW1wb3J0YW50IHRvIGtub3csIHRoYXQgYWxsIHRoZSBvdGhlciBjb3JlIHJ1bGVzIGFyZSBza2lwcGVkIGZvcgojIHJlcXVlc3RzLCB3aGVuIGl0IGlzIGNsZWFyIHRoYXQgdGhleSBjYXJyeSB0aGUgYmxvY2tpbmcgZmxhZyBpbiBxdWVzdGlvbi4KIwojIFVuY29tbWVudCB0aGlzIHJ1bGUgdG8gdXNlIHRoaXMgZmVhdHVyZToKIwojU2VjQWN0aW9uIFwKIyAiaWQ6OTAwOTYwLFwKIyAgcGhhc2U6MSxcCiMgIG5vbG9nLFwKIyAgcGFzcyxcCiMgIHQ6bm9uZSxcCiMgIHNldHZhcjp0eC5kb19yZXB1dF9ibG9jaz0xIgojCiMgVW5jb21tZW50IHRoaXMgcnVsZSB0byBjaGFuZ2UgdGhlIGJsb2NraW5nIHRpbWU6CiMgRGVmYXVsdDogMzAwICg1IG1pbnV0ZXMpCiMKI1NlY0FjdGlvbiBcCiMgImlkOjkwMDk3MCxcCiMgIHBoYXNlOjEsXAojICBub2xvZyxcCiMgIHBhc3MsXAojICB0Om5vbmUsXAojICBzZXR2YXI6dHgucmVwdXRfYmxvY2tfZHVyYXRpb249MzAwIgoKCiMKIyAtLSBbWyBDb2xsZWN0aW9uIHRpbWVvdXQgXV0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIwojIFNldCB0aGUgU2VjQ29sbGVjdGlvblRpbWVvdXQgZGlyZWN0aXZlIGZyb20gdGhlIE1vZFNlY3VyaXR5IGRlZmF1bHQgKDEgaG91cikKIyB0byBhIGxvd2VyIHNldHRpbmcgd2hpY2ggaXMgYXBwcm9wcmlhdGUgdG8gbW9zdCBzaXRlcy4KIyBUaGlzIGluY3JlYXNlcyBwZXJmb3JtYW5jZSBieSBjbGVhbmluZyBvdXQgc3RhbGUgY29sbGVjdGlvbiAoYmxvY2spIGVudHJpZXMuCiMKIyBUaGlzIHZhbHVlIHNob3VsZCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG86CiMgdHgucmVwdXRfYmxvY2tfZHVyYXRpb24gKHNlZSBzZWN0aW9uICJCbG9ja2luZyBCYXNlZCBvbiBJUCBSZXB1dGF0aW9uIikgYW5kCiMgdHguZG9zX2Jsb2NrX3RpbWVvdXQgKHNlZSBzZWN0aW9uICJBbnRpLUF1dG9tYXRpb24gLyBEb1MgUHJvdGVjdGlvbiIpLgojCiMgUmVmOiBodHRwczovL2dpdGh1Yi5jb20vU3BpZGVyTGFicy9Nb2RTZWN1cml0eS93aWtpL1JlZmVyZW5jZS1NYW51YWwjd2lraS1TZWNDb2xsZWN0aW9uVGltZW91dAoKIyBQbGVhc2Uga2VlcCB0aGlzIGRpcmVjdGl2ZSB1bmNvbW1lbnRlZC4KIyBEZWZhdWx0OiA2MDAgKDEwIG1pbnV0ZXMpClNlY0NvbGxlY3Rpb25UaW1lb3V0IDYwMAoKCiMKIyAtLSBbWyBFbmQgb2Ygc2V0dXAgXV0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIwojIFRoZSBDUlMgY2hlY2tzIHRoZSB0eC5jcnNfc2V0dXBfdmVyc2lvbiB2YXJpYWJsZSB0byBlbnN1cmUgdGhhdCB0aGUgc2V0dXAKIyBoYXMgYmVlbiBsb2FkZWQuIElmIHlvdSBhcmUgbm90IHBsYW5uaW5nIHRvIHVzZSB0aGlzIHNldHVwIHRlbXBsYXRlLAojIHlvdSBtdXN0IG1hbnVhbGx5IHNldCB0aGUgdHguY3JzX3NldHVwX3ZlcnNpb24gdmFyaWFibGUgYmVmb3JlIGluY2x1ZGluZwojIHRoZSBDUlMgcnVsZXMvKiBmaWxlcy4KIwojIFRoZSB2YXJpYWJsZSBpcyBhIG51bWVyaWNhbCByZXByZXNlbnRhdGlvbiBvZiB0aGUgQ1JTIHZlcnNpb24gbnVtYmVyLgojIEUuZy4sIHYzLjAuMCBpcyByZXByZXNlbnRlZCBhcyAzMDAuCiMKU2VjQWN0aW9uIFwKICAgICJpZDo5MDA5OTAsXAogICAgcGhhc2U6MSxcCiAgICBwYXNzLFwKICAgIHQ6bm9uZSxcCiAgICBub2xvZyxcCiAgICBzZXR2YXI6dHguY3JzX3NldHVwX3ZlcnNpb249MzM1Igo=",
	"iis-errors.data": "PGgyIHN0eWxlPSJmb250OjhwdC8xMXB0IHZlcmRhbmE7IGNvbG9yOjAwMDAwMCI+SFRUUCA0MDMuNiAtIEZvcmJpZGRlbjogSVAgYWRkcmVzcyByZWplY3RlZDxicj4KPFRJVExFPjUwMCBJbnRlcm5hbCBTZXJ2ZXIgRXJyb3I8L1RJVExFPgpNaWNyb3NvZnQgVkJTY3JpcHQgcnVudGltZSAoMHg4CmVycm9yICc4MDAKQXBwbGljYXRpb24gdXNlcyBhIHZhbHVlIG9mIHRoZSB3cm9uZyB0eXBlIGZvciB0aGUgY3VycmVudCBvcGVyYXRpb24KTWljcm9zb2Z0IFZCU2NyaXB0IGNvbXBpbGF0aW9uICgweDgKTWljcm9zb2Z0IFZCU2NyaXB0IGNvbXBpbGF0aW9uIGVycm9yCk1pY3Jvc29mdCAuTkVUIEZyYW1ld29yayBWZXJzaW9uOgpBIHRyYXBwYWJsZSBlcnJvciBvY2N1cnJlZCBpbiBhbiBleHRlcm5hbCBvYmplY3QuIFRoZSBzY3JpcHQgY2Fubm90IGNvbnRpbnVlIHJ1bm5pbmcKTWljcm9zb2Z0IFZCU2NyaXB0IHJ1bnRpbWUgRXJyb3IKPlN5bnRheCBlcnJvciBpbiBzdHJpbmcgaW4gcXVlcnkgZXhwcmVzc2lvbgpBRE9EQi5Db21tYW5kCk9iamVjdCByZXF1aXJlZDogJwo=",
	"java-classes.data": "Y29tLm9wZW5zeW1waG9ueS54d29yazIKY29tLnN1bi5vcmcuYXBhY2hlCmphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbQpqYXZhLmlvLkJ1ZmZlcmVkUmVhZGVyCmphdmEuaW8uQnl0ZUFycmF5SW5wdXRTdHJlYW0KamF2YS5pby5CeXRlQXJyYXlPdXRwdXRTdHJlYW0KamF2YS5pby5DaGFyQXJyYXlSZWFkZXIKamF2YS5pby5EYXRhSW5wdXRTdHJlYW0KamF2YS5pby5GaWxlCmphdmEuaW8uRmlsZU91dHB1dFN0cmVhbQpqYXZhLmlvLkZpbGVQZXJtaXNzaW9uCmphdmEuaW8uRmlsZVdyaXRlcgpqYXZhLmlvLkZpbHRlcklucHV0U3RyZWFtCmphdmEuaW8uRmlsdGVyT3V0cHV0U3RyZWFtCmphdmEuaW8uRmlsdGVyUmVhZGVyCmphdmEuaW8uSW5wdXRTdHJlYW0KamF2YS5pby5JbnB1dFN0cmVhbVJlYWRlcgpqYXZhLmlvLkxpbmVOdW1iZXJSZWFkZXIKamF2YS5pby5PYmplY3RPdXRwdXRTdHJlYW0KamF2YS5pby5PdXRwdXRTdHJlYW0KamF2YS5pby5QaXBlZE91dHB1dFN0cmVhbQpqYXZhLmlvLlBpcGVkUmVhZGVyCmphdmEuaW8uUHJpbnRTdHJlYW0KamF2YS5pby5QdXNoYmFja0lucHV0U3RyZWFtCmphdmEuaW8uUmVhZGVyCmphdmEuaW8uU3RyaW5nUmVhZGVyCmphdmEubGFuZy5DbGFzcwpqYXZhLmxhbmcuSW50ZWdlcgpqYXZhLmxhbmcuTnVtYmVyCmphdmEubGFuZy5PYmplY3QKamF2YS5sYW5nLlByb2Nlc3MKamF2YS5sYW5nLlByb2Nlc3NCdWlsZGVyCmphdmEubGFuZy5yZWZsZWN0CmphdmEubGFuZy5SdW50aW1lCmphdmEubGFuZy5TdHJpbmcKamF2YS5sYW5nLlN0cmluZ0J1aWxkZXIKamF2YS5sYW5nLlN5c3RlbQpqYXZheC5zY3JpcHQuU2NyaXB0RW5naW5lTWFuYWdlcgpvcmcuYXBhY2hlLmNvbW1vbnMKb3JnLmFwYWNoZS5zdHJ1dHMKb3JnLmFwYWNoZS5zdHJ1dHMyCm9yZy5vbWcuQ09SQkEKamF2YS5iZWFucy5YTUxEZWNvZGUK",
	"java-code-leakages.data": "PGpzcDoKamF2YXguc2VydmxldAouYWRkaGVhZGVyCi5jcmVhdGV0ZXh0ZmlsZQouZ2V0ZmlsZQoubG9hZGZyb21maWxlCnJlc3BvbnNlLmJpbmFyeXdyaXRlCnJlc3BvbnNlLndyaXRlCnNjcmlwdGluZy5maWxlc3lzdGVtb2JqZWN0CnNlcnZlci5jcmVhdGVvYmplY3QKc2VydmVyLmV4ZWN1dGUKc2VydmVyLmh0bWxlbmNvZGUKc2VydmVyLm1hcHBhdGgKc2VydmVyLnVybGVuY29kZQp2YnNjcmlwdC5lbmNvZGUKd3NjcmlwdC5uZXR3b3JrCndzY3JpcHQuc2hlbGwK",
	"java-errors.data": "W2phdmEubGFuZy4KY2xhc3MgamF2YS5sYW5nLgpqYXZhLmxhbmcuTnVsbFBvaW50ZXJFeGNlcHRpb24KamF2YS5ybWkuU2VydmVyRXhjZXB0aW9uCmF0IGphdmEubGFuZy4Kb25jbGljaz0idG9nZ2xlKCdmdWxsIGV4Y2VwdGlvbiBjaGFpbiBzdGFja3RyYWNlJykiCmF0IG9yZy5hcGFjaGUuY2F0YWxpbmEKYXQgb3JnLmFwYWNoZS5jb3lvdGUuCmF0IG9yZy5hcGFjaGUudG9tY2F0LgphdCBvcmcuYXBhY2hlLmphc3Blci4K",
	"lfi-os-files.data": "",
	"modsecdefault.conf": "",
	"php-config-directives.data": "YWxsb3dfY2FsbF90aW1lX3Bhc3NfcmVmZXJlbmNlCmFsbG93X3VybF9mb3BlbgphbGxvd191cmxfaW5jbHVkZQphbHdheXNfcG9wdWxhdGVfcmF3X3Bvc3RfZGF0YQphcmdfc2VwYXJhdG9yLmlucHV0CmFyZ19zZXBhcmF0b3Iub3V0cHV0CmFzcF90YWdzCmFzc2VydC5hY3RpdmUKYXNzZXJ0LmJhaWwKYXNzZXJ0LmNhbGxiYWNrCmFzc2VydC5xdWlldF9ldmFsCmFzc2VydC53YXJuaW5nCmF1dG9fYXBwZW5kX2ZpbGUKYXV0b19kZXRlY3RfbGluZV9lbmRpbmdzCmF1dG9fZ2xvYmFsc19qaXQKYXV0b19wcmVwZW5kX2ZpbGUKYmNtYXRoLnNjYWxlCmJpcmRzdGVwLm1heF9saW5rcwpicm93c2NhcApjZ2kuZml4X3BhdGhpbmZvCmNnaS5mb3JjZV9yZWRpcmVjdApjZ2kubnBoCmNnaS5yZWRpcmVjdF9zdGF0dXNfZW52CmNnaS5yZmMyNjE2X2hlYWRlcnMKY29tLmFsbG93X2Rjb20KY29tLmF1dG9yZWdpc3Rlcl9jYXNlc2Vuc2l0aXZlCmNvbS5hdXRvcmVnaXN0ZXJfdHlwZWxpYgpjb20uYXV0b3JlZ2lzdGVyX3ZlcmJvc2UKY29tLmNvZGVfcGFnZQpjb20udHlwZWxpYl9maWxlCmRhdGUuZGVmYXVsdF9sYXRpdHVkZQpkYXRlLmRlZmF1bHRfbG9uZ2l0dWRlCmRhdGUuc3VucmlzZV96ZW5pdGgKZGF0ZS5zdW5zZXRfemVuaXRoCmRhdGUudGltZXpvbmUKZGJhLmRlZmF1bHRfaGFuZGxlcgpkZWZhdWx0X2NoYXJzZXQKZGVmYXVsdF9taW1ldHlwZQpkZWZhdWx0X3NvY2tldF90aW1lb3V0CmRlZmluZV9zeXNsb2dfdmFyaWFibGVzCmRpc2FibGVfY2xhc3NlcwpkaXNhYmxlX2Z1bmN0aW9ucwpkaXNwbGF5X2Vycm9ycwpkaXNwbGF5X3N0YXJ0dXBfZXJyb3JzCmRvY19yb290CmRvY3JlZl9leHQKZG9jcmVmX3Jvb3QKZW5hYmxlX2RsCmVycm9yX2FwcGVuZF9zdHJpbmcKZXJyb3JfbG9nCmVycm9yX3ByZXBlbmRfc3RyaW5nCmVycm9yX3JlcG9ydGluZwpleGlmLmRlY29kZV9qaXNfaW50ZWwKZXhpZi5kZWNvZGVfamlzX21vdG9yb2xhCmV4aWYuZGVjb2RlX3VuaWNvZGVfaW50ZWwKZXhpZi5kZWNvZGVfdW5pY29kZV9tb3Rvcm9sYQpleGlmLmVuY29kZV9qaXMKZXhpZi5lbmNvZGVfdW5pY29kZQpleHBvc2VfcGhwCmV4dGVuc2lvbl9kaXIKZmFzdGNnaS5pbXBlcnNvbmF0ZQpmYXN0Y2dpLmxvZ2dpbmcKZmlsZV91cGxvYWRzCmZpbHRlci5kZWZhdWx0CmZpbHRlci5kZWZhdWx0X2ZsYWdzCmdkLmpwZWdfaWdub3JlX3dhcm5pbmcKaGlnaGxpZ2h0LmJnCmhpZ2hsaWdodC5jb21tZW50CmhpZ2hsaWdodC5kZWZhdWx0CmhpZ2hsaWdodC5odG1sCmhpZ2hsaWdodC5rZXl3b3JkCmhpZ2hsaWdodC5zdHJpbmcKaHRtbF9lcnJvcnMKaWJhc2UuYWxsb3dfcGVyc2lzdGVudAppYmFzZS5kYXRlZm9ybWF0CmliYXNlLmRlZmF1bHRfY2hhcnNldAppYmFzZS5kZWZhdWx0X2RiCmliYXNlLmRlZmF1bHRfcGFzc3dvcmQKaWJhc2UuZGVmYXVsdF91c2VyCmliYXNlLm1heF9saW5rcwppYmFzZS5tYXhfcGVyc2lzdGVudAppYmFzZS50aW1lZm9ybWF0CmliYXNlLnRpbWVzdGFtcGZvcm1hdAppY29udi5pbnB1dF9lbmNvZGluZwppY29udi5pbnRlcm5hbF9lbmNvZGluZwppY29udi5vdXRwdXRfZW5jb2RpbmcKaWdub3JlX3JlcGVhdGVkX2Vycm9ycwppZ25vcmVfcmVwZWF0ZWRfc291cmNlCmlnbm9yZV91c2VyX2Fib3J0CmltcGxpY2l0X2ZsdXNoCmluY2x1ZGVfcGF0aAppbnRsLmRlZmF1bHRfbG9jYWxlCmludGwuZXJyb3JfbGV2ZWwKbGRhcC5tYXhfbGlua3MKbG9nX2Vycm9ycwpsb2dfZXJyb3JzX21heF9sZW4KbWFnaWNfcXVvdGVzX2dwYwptYWdpY19xdW90ZXNfcnVudGltZQptYWdpY19xdW90ZXNfc3liYXNlCm1haWwuYWRkX3hfaGVhZGVyCm1haWwuZm9yY2VfZXh0cmFfcGFyYW1ldGVycwptYWlsLmxvZwptYXhfZXhlY3V0aW9uX3RpbWUKbWF4X2ZpbGVfdXBsb2FkcwptYXhfaW5wdXRfbmVzdGluZ19sZXZlbAptYXhfaW5wdXRfdGltZQptYnN0cmluZy5kZXRlY3Rfb3JkZXIKbWJzdHJpbmcuZW5jb2RpbmdfdHJhbnNsYXRpb24KbWJzdHJpbmcuZnVuY19vdmVybG9hZAptYnN0cmluZy5odHRwX2lucHV0Cm1ic3RyaW5nLmh0dHBfb3V0cHV0Cm1ic3RyaW5nLmh0dHBfb3V0cHV0X2NvbnZfbWltZXR5cGUKbWJzdHJpbmcuaW50ZXJuYWxfZW5jb2RpbmcKbWJzdHJpbmcubGFuZ3VhZ2UKbWJzdHJpbmcuc2NyaXB0X2VuY29kaW5nCm1ic3RyaW5nLnN0cmljdF9kZXRlY3Rpb24KbWJzdHJpbmcuc3Vic3RpdHV0ZV9jaGFyYWN0ZXIKbWNyeXB0LmFsZ29yaXRobXNfZGlyCm1jcnlwdC5tb2Rlc19kaXIKbWVtb3J5X2xpbWl0Cm1zc3FsLmFsbG93X3BlcnNpc3RlbnQKbXNzcWwuYmF0Y2hzaXplCm1zc3FsLmNoYXJzZXQKbXNzcWwuY29tcGF0YWJpbGl0eV9tb2RlCm1zc3FsLmNvbm5lY3RfdGltZW91dAptc3NxbC5kYXRldGltZWNvbnZlcnQKbXNzcWwubWF4X2xpbmtzCm1zc3FsLm1heF9wZXJzaXN0ZW50Cm1zc3FsLm1heF9wcm9jcwptc3NxbC5taW5fZXJyb3Jfc2V2ZXJpdHkKbXNzcWwubWluX21lc3NhZ2Vfc2V2ZXJpdHkKbXNzcWwuc2VjdXJlX2Nvbm5lY3Rpb24KbXNzcWwudGV4dGxpbWl0Cm1zc3FsLnRleHRzaXplCm1zc3FsLnRpbWVvdXQKbXlzcWwuYWxsb3dfbG9jYWxfaW5maWxlCm15c3FsLmFsbG93X3BlcnNpc3RlbnQKbXlzcWwuY2FjaGVfc2l6ZQpteXNxbC5jb25uZWN0X3RpbWVvdXQKbXlzcWwuZGVmYXVsdF9ob3N0Cm15c3FsLmRlZmF1bHRfcGFzc3dvcmQKbXlzcWwuZGVmYXVsdF9wb3J0Cm15c3FsLmRlZmF1bHRfc29ja2V0Cm15c3FsLmRlZmF1bHRfdXNlcgpteXNxbC5tYXhfbGlua3MKbXlzcWwubWF4X3BlcnNpc3RlbnQKbXlzcWwudHJhY2VfbW9kZQpteXNxbGkuYWxsb3dfbG9jYWxfaW5maWxlCm15c3FsaS5hbGxvd19wZXJzaXN0ZW50Cm15c3FsaS5jYWNoZV9zaXplCm15c3FsaS5kZWZhdWx0X2hvc3QKbXlzcWxpLmRlZmF1bHRfcG9ydApteXNxbGkuZGVmYXVsdF9wdwpteXNxbGkuZGVmYXVsdF9zb2NrZXQKbXlzcWxpLmRlZmF1bHRfdXNlcgpteXNxbGkubWF4X2xpbmtzCm15c3FsaS5tYXhfcGVyc2lzdGVudApteXNxbGkucmVjb25uZWN0Cm15c3FsbmQuY29sbGVjdF9tZW1vcnlfc3RhdGlzdGljcwpteXNxbG5kLmNvbGxlY3Rfc3RhdGlzdGljcwpteXNxbG5kLm5ldF9jbWRfYnVmZmVyX3NpemUKbXlzcWxuZC5uZXRfcmVhZF9idWZmZXJfc2l6ZQpvY2k4LmNvbm5lY3Rpb25fY2xhc3MKb2NpOC5kZWZhdWx0X3ByZWZldGNoCm9jaTguZXZlbnRzCm9jaTgubWF4X3BlcnNpc3RlbnQKb2NpOC5vbGRfb2NpX2Nsb3NlX3NlbWFudGljcwpvY2k4LnBlcnNpc3RlbnRfdGltZW91dApvY2k4LnBpbmdfaW50ZXJ2YWwKb2NpOC5wcml2aWxlZ2VkX2Nvbm5lY3QKb2NpOC5zdGF0ZW1lbnRfY2FjaGVfc2l6ZQpvZGJjLmFsbG93X3BlcnNpc3RlbnQKb2RiYy5jaGVja19wZXJzaXN0ZW50Cm9kYmMuZGVmYXVsdF9kYgpvZGJjLmRlZmF1bHRfcHcKb2RiYy5kZWZhdWx0X3VzZXIKb2RiYy5kZWZhdWx0YmlubW9kZQpvZGJjLmRlZmF1bHRscmwKb2RiYy5tYXhfbGlua3MKb2RiYy5tYXhfcGVyc2lzdGVudApvcGVuX2Jhc2VkaXIKb3V0cHV0X2J1ZmZlcmluZwpvdXRwdXRfaGFuZGxlcgpwY3JlLmJhY2t0cmFja19saW1pdApwY3JlLnJlY3Vyc2lvbl9saW1pdApwZG9fbXlzcWwuY2FjaGVfc2l6ZQpwZG9fbXlzcWwuZGVmYXVsdF9zb2NrZXQKcGRvX29kYmMuY29ubmVjdGlvbl9wb29saW5nCnBnc3FsLmFsbG93X3BlcnNpc3RlbnQKcGdzcWwuYXV0b19yZXNldF9wZXJzaXN0ZW50CnBnc3FsLmlnbm9yZV9ub3RpY2UKcGdzcWwubG9nX25vdGljZQpwZ3NxbC5tYXhfbGlua3MKcGdzcWwubWF4X3BlcnNpc3RlbnQKcGhhci5jYWNoZV9saXN0CnBoYXIucmVhZG9ubHkKcGhhci5yZXF1aXJlX2hhc2gKcG9zdF9tYXhfc2l6ZQpyZWFscGF0aF9jYWNoZV9zaXplCnJlYWxwYXRoX2NhY2hlX3R0bApyZWdpc3Rlcl9hcmdjX2FyZ3YKcmVnaXN0ZXJfZ2xvYmFscwpyZWdpc3Rlcl9sb25nX2FycmF5cwpyZXBvcnRfbWVtbGVha3MKcmVwb3J0X3plbmRfZGVidWcKcmVxdWVzdF9vcmRlcgpzYWZlX21vZGUKc2FmZV9tb2RlX2FsbG93ZWRfZW52X3ZhcnMKc2FmZV9tb2RlX2V4ZWNfZGlyCnNhZmVfbW9kZV9naWQKc2FmZV9tb2RlX2luY2x1ZGVfZGlyCnNhZmVfbW9kZV9wcm90ZWN0ZWRfZW52X3ZhcnMKc2VuZG1haWxfZnJvbQpzZW5kbWFpbF9wYXRoCnNlcmlhbGl6ZV9wcmVjaXNpb24Kc2Vzc2lvbi5hdXRvX3N0YXJ0CnNlc3Npb24uYnVnX2NvbXBhdF80MgpzZXNzaW9uLmJ1Z19jb21wYXRfd2FybgpzZXNzaW9uLmNhY2hlX2V4cGlyZQpzZXNzaW9uLmNhY2hlX2xpbWl0ZXIKc2Vzc2lvbi5jb29raWVfZG9tYWluCnNlc3Npb24uY29va2llX2h0dHBvbmx5CnNlc3Npb24uY29va2llX2xpZmV0aW1lCnNlc3Npb24uY29va2llX3BhdGgKc2Vzc2lvbi5jb29raWVfc2VjdXJlCnNlc3Npb24uZW50cm9weV9maWxlCnNlc3Npb24uZW50cm9weV9sZW5ndGgKc2Vzc2lvbi5nY19kaXZpc29yCnNlc3Npb24uZ2NfbWF4bGlmZXRpbWUKc2Vzc2lvbi5nY19wcm9iYWJpbGl0eQpzZXNzaW9uLmhhc2hfYml0c19wZXJfY2hhcmFjdGVyCnNlc3Npb24uaGFzaF9mdW5jdGlvbgpzZXNzaW9uLm5hbWUKc2Vzc2lvbi5yZWZlcmVyX2NoZWNrCnNlc3Npb24uc2F2ZV9oYW5kbGVyCnNlc3Npb24uc2F2ZV9wYXRoCnNlc3Npb24uc2VyaWFsaXplX2hhbmRsZXIKc2Vzc2lvbi51c2VfY29va2llcwpzZXNzaW9uLnVzZV9vbmx5X2Nvb2tpZXMKc2Vzc2lvbi51c2VfdHJhbnNfc2lkCnNob3J0X29wZW5fdGFnCnNvYXAud3NkbF9jYWNoZV9kaXIKc29hcC53c2RsX2NhY2hlX2VuYWJsZWQKc29hcC53c2RsX2NhY2hlX2xpbWl0CnNvYXAud3NkbF9jYWNoZV90dGwKc3FsLnNhZmVfbW9kZQpzcWxpdGUuYXNzb2NfY2FzZQpzcWxpdGUzLmV4dGVuc2lvbl9kaXIKc3liY3QuYWxsb3dfcGVyc2lzdGVudApzeWJjdC5kZWFkbG9ja19yZXRyeV9jb3VudApzeWJjdC5ob3N0bmFtZQpzeWJjdC5sb2dpbl90aW1lb3V0CnN5YmN0Lm1heF9saW5rcwpzeWJjdC5tYXhfcGVyc2lzdGVudApzeWJjdC5taW5fY2xpZW50X3NldmVyaXR5CnN5YmN0Lm1pbl9zZXJ2ZXJfc2V2ZXJpdHkKc3liY3QudGltZW91dApzeXN2c2htLmluaXRfbWVtCnRpZHkuY2xlYW5fb3V0cHV0CnRpZHkuZGVmYXVsdF9jb25maWcKdHJhY2tfZXJyb3JzCnVuc2VyaWFsaXplX2NhbGxiYWNrX2Z1bmMKdXBsb2FkX21heF9maWxlc2l6ZQp1cGxvYWRfdG1wX2Rpcgp1cmxfcmV3cml0ZXIudGFncwp1c2VyX2FnZW50CnVzZXJfZGlyCnVzZXJfaW5pLmNhY2hlX3R0bAp1c2VyX2luaS5maWxlbmFtZQp2YXJpYWJsZXNfb3JkZXIKeG1scnBjX2Vycm9yX251bWJlcgp4bWxycGNfZXJyb3JzCnkya19jb21wbGlhbmNlCnpsaWIub3V0cHV0X2NvbXByZXNzaW9uCnpsaWIub3V0cHV0X2NvbXByZXNzaW9uX2xldmVsCnpsaWIub3V0cHV0X2hhbmRsZXIK",
	"php-errors.data": "",
	"php-function-names-933150.data": "X19oYWx0X2NvbXBpbGVyCmFwYWNoZV9jaGlsZF90ZXJtaW5hdGUKYmFzZTY0X2RlY29kZQpiemRlY29tcHJlc3MKY2FsbF91c2VyX2Z1bmMKY2FsbF91c2VyX2Z1bmNfYXJyYXkKY2FsbF91c2VyX21ldGhvZApjYWxsX3VzZXJfbWV0aG9kX2FycmF5CmNvbnZlcnRfdXVkZWNvZGUKZmlsZV9nZXRfY29udGVudHMKZmlsZV9wdXRfY29udGVudHMKZnNvY2tvcGVuCmdldF9jbGFzc19tZXRob2RzCmdldF9jbGFzc192YXJzCmdldF9kZWZpbmVkX2NvbnN0YW50cwpnZXRfZGVmaW5lZF9mdW5jdGlvbnMKZ2V0X2RlZmluZWRfdmFycwpnemRlY29kZQpnemluZmxhdGUKZ3p1bmNvbXByZXNzCmluY2x1ZGVfb25jZQppbnZva2VhcmdzCnBjbnRsX2V4ZWMKcGNudGxfZm9yawpwZnNvY2tvcGVuCnBvc2l4X2dldGN3ZApwb3NpeF9nZXRwd3VpZApwb3NpeF9nZXR1aWQKcG9zaXhfdW5hbWUKUmVmbGVjdGlvbkZ1bmN0aW9uCnJlcXVpcmVfb25jZQpzaGVsbF9leGVjCnN0cl9yb3QxMwpzeXNfZ2V0X3RlbXBfZGlyCndwX3JlbW90ZV9mb3Blbgp3cF9yZW1vdGVfZ2V0CndwX3JlbW90ZV9oZWFkCndwX3JlbW90ZV9wb3N0CndwX3JlbW90ZV9yZXF1ZXN0CndwX3NhZmVfcmVtb3RlX2dldAp3cF9zYWZlX3JlbW90ZV9oZWFkCndwX3NhZmVfcmVtb3RlX3Bvc3QKd3Bfc2FmZV9yZW1vdGVfcmVxdWVzdAp6bGliX2RlY29kZQo=",
	"php-function-names-933151.data": "",
	"php-variables.data": "JEdMT0JBTFMKJEhUVFBfQ09PS0lFX1ZBUlMKJEhUVFBfRU5WX1ZBUlMKJEhUVFBfR0VUX1ZBUlMKJEhUVFBfUE9TVF9GSUxFUwokSFRUUF9QT1NUX1ZBUlMKJEhUVFBfUkFXX1BPU1RfREFUQQokSFRUUF9SRVFVRVNUX1ZBUlMKJEhUVFBfU0VSVkVSX1ZBUlMKJF9DT09LSUUKJF9FTlYKJF9GSUxFUwokX0dFVAokX1BPU1QKJF9SRVFVRVNUCiRfU0VSVkVSCiRfU0VTU0lPTgokYXJnYwokYXJndgo=",
	"restricted-files.data": "IyBBcGFjaGUKIyAobm8gc2xhc2g7IGFsc28gZ3VhcmRzIGFnYWluc3Qgb2xkLmh0YWNjZXNzLCBvbGQuaHRwYXNzd2QsIGV0Yy4pCi5odGFjY2VzcwouaHRkaWdlc3QKLmh0cGFzc3dkCiMgaG9tZSBsZXZlbCBkb3RmaWxlcyAoa2VlcCBpbiBzeW5jIHdpdGggbGZpLW9zLWZpbGVzLmRhdGEpCi5hcHRpdHVkZS9jb25maWcKLmJhc2hfY29uZmlnCi5iYXNoX2hpc3RvcnkKLmJhc2hfbG9nb3V0Ci5iYXNoX3Byb2ZpbGUKLmJhc2hyYwouY2FjaGUvbm90aWZ5LW9zZC5sb2cKLmNvbmZpZy9vZGVzay9vZGVzayB0ZWFtLmNvbmYKLmNzaHJjCi5kcnVzaC8KLmdpdGNvbmZpZwouZ251cGcvCi5ocGxpcC9ocGxpcC5jb25mCi5rc2hfaGlzdG9yeQoubGVzc2hzdAoubGZ0cC8KLmxoaXN0b3J5Ci5sbGRiLWhpc3RvcnkKLmxvY2FsL3NoYXJlL21jLwoubXkuY25mCi5teXNxbF9oaXN0b3J5Ci5uYW5vX2hpc3RvcnkKLm5vZGVfcmVwbF9oaXN0b3J5Ci5uc3IKLnBlYXJyYwoucGhwX2hpc3RvcnkKLnBraS8KLnByb2ZpbGUKLnBzcWxfaGlzdG9yeQoucHl0aG9uX2hpc3RvcnkKLnJlZGlzY2xpX2hpc3RvcnkKLlJoaXN0b3J5Ci5zaF9oaXN0b3J5Ci5zcWxpdGVfaGlzdG9yeQouc3NoL2F1dGhvcml6ZWRfa2V5cwouc3NoL2NvbmZpZwouc3NoL2lkX2RzYQouc3NoL2lkX2RzYS5wdWIKLnNzaC9pZF9yc2EKLnNzaC9pZF9yc2EucHViCi5zc2gvaWRlbnRpdHkKLnNzaC9pZGVudGl0eS5wdWIKLnNzaC9rbm93bl9ob3N0cwouc3VidmVyc2lvbi9hdXRoCi5zdWJ2ZXJzaW9uL2NvbmZpZwouc3VidmVyc2lvbi9zZXJ2ZXJzCi50Y29ubi90Y29ubi5jb25mCi50Y3NocmMKLnZpZGFsaWEvdmlkYWxpYS5jb25mCi52aW1pbmZvCi52aW1yYwoueGF1dGhvcml0eQouemhpc3RvcnkKLnpzaHJjCi56c2hfaGlzdG9yeQoubnNjb25maWcKIyBWZXJzaW9uIGNvbnRyb2wKLy5naXQvCi8uZ2l0aWdub3JlCi8uaGcvCi8uaGdpZ25vcmUKLy5zdm4vCiMgV29yZHByZXNzCndwLWNvbmZpZy5waHAKd3AtY29uZmlnLmJhawp3cC1jb25maWcub2xkCndwLWNvbmZpZy50ZW1wCndwLWNvbmZpZy50bXAKd3AtY29uZmlnLnR4dAojIFN5bWZvbnkKL2NvbmZpZy9jb25maWcueW1sCi9jb25maWcvY29uZmlnX2Rldi55bWwKL2NvbmZpZy9jb25maWdfcHJvZC55bWwKL2NvbmZpZy9jb25maWdfdGVzdC55bWwKL2NvbmZpZy9wYXJhbWV0ZXJzLnltbAovY29uZmlnL3JvdXRpbmcueW1sCi9jb25maWcvc2VjdXJpdHkueW1sCi9jb25maWcvc2VydmljZXMueW1sCiMgRHJ1cGFsCi9zaXRlcy9kZWZhdWx0L2RlZmF1bHQuc2V0dGluZ3MucGhwCi9zaXRlcy9kZWZhdWx0L3NldHRpbmdzLnBocAovc2l0ZXMvZGVmYXVsdC9zZXR0aW5ncy5sb2NhbC5waHAKIyBNYWdlbnRvCi9hcHAvZXRjL2xvY2FsLnhtbAojIFN1YmxpbWUgVGV4dAovc2Z0cC1jb25maWcuanNvbgojIEFTUC5ORVQKL1dlYi5jb25maWcKIyBOb2RlCi9wYWNrYWdlLmpzb24KL3BhY2thZ2UtbG9jay5qc29uCi9ncnVudGZpbGUuanMKL25wbS1kZWJ1Zy5sb2cKL29ybWNvbmZpZy5qc29uCi90c2NvbmZpZy5qc29uCi93ZWJwYWNrLmNvbmZpZy5qcwoveWFybi5sb2NrCiMgQ29tcG9zZXIKL2NvbXBvc2VyLmpzb24KL2NvbXBvc2VyLmxvY2sKL3BhY2thZ2VzLmpzb24KIyBkb3RlbnYKLy5lbnYKIyBPU1gKLy5EU19TdG9yZQojIFdTIEZUUAovLndzX2Z0cC5pbmkKIyBjb21tb24sIG9sZCBuZXR3b3JrIGNvbmZpZyBmaWxlCi5uZXRyYwojIE5ldyBUb3AgTGV2ZWwgZG90ZmlsZXMKLnRodW5kZXJiaXJkLwoudm13YXJlLwoua3ViZS8KLmphdmEvCi5hbnlkZXNrLwouZG9ja2VyLwoubnBtLwoubnZtLwoubWluaWt1YmUvCi5hdG9tLwouYXdzL2NvbmZpZwouYXdzL2NyZWRlbnRpYWxzCi5jdXBzLwouZGJ1cy8KLmJvdG8KLmdlbS8KLmdub25tZS8KLmdzdXRpbC8KIyBOZXcgUGVyLVByb2plY3QgRmlsZXMKLmlkZWEKbmJwcm9qZWN0Lwpib3dlci5qc29uCi5ib3dlcnJjCi5lc2xpbnRyYwouanNoaW50cmMKLmdpdGxhYi1jaS55bWwKLnRyYXZpcy55bWwKZGF0YWJhc2UueW1sCkRvY2tlcmZpbGUK",
	"restricted-upload.data": "IyBBcGFjaGUgd2Vic2VydmVyCi5odGFjY2VzcwouaHRkaWdlc3QKLmh0cGFzc3dkCiMgV29yZFByZXNzIGNvbmZpZ3VyYXRpb24gZmlsZQp3cC1jb25maWcucGhwCiMgU3ltZm9ueSBjb25maWd1cmF0aW9uIGZpbGVzCmNvbmZpZy55bWwKY29uZmlnX2Rldi55bWwKY29uZmlnX3Byb2QueW1sCmNvbmZpZ190ZXN0LnltbApwYXJhbWV0ZXJzLnltbApyb3V0aW5nLnltbApzZWN1cml0eS55bWwKc2VydmljZXMueW1sCiMgRHJ1cGFsIGNvbmZpZ3VyYXRpb24gZmlsZXMKZGVmYXVsdC5zZXR0aW5ncy5waHAKc2V0dGluZ3MucGhwCnNldHRpbmdzLmxvY2FsLnBocAojIE1hZ2VudG8gY29uZmlndXJhdGlvbiBmaWxlcwpsb2NhbC54bWwKIyBkb3RlbnYgY29uZmlndXJhdGlvbiBmaWxlCi5lbnYK",
	"scanners-headers.data": "YWN1bmV0aXgtcHJvZHVjdAooYWN1bmV0aXggd2ViIHZ1bG5lcmFiaWxpdHkgc2Nhbm5lcgphY3VuZXRpeC1zY2FubmluZy1hZ3JlZW1lbnQKYWN1bmV0aXgtdXNlci1hZ3JlZW1lbnQKbXl2YXI9MTIzNAp4LXJhdHByb3h5LWxvb3AKYnl0ZXM9MC0sNS0wLDUtMSw1LTIsNS0zLDUtNCw1LTUsNS02LDUtNyw1LTgsNS05LDUtMTAsNS0xMSw1LTEyLDUtMTMsNS0xNAp4LXNjYW5uZXIK",
	"scanners-urls.data": "Ly5hZFNlbnNlcG9zdG5vdHRoZXJlbm9ub2Jvb2sKLzxpbnZhbGlkPmhlbGxvLmh0bWwKL2FjdFNlbnNlcG9zdG5vdHRoZXJlbm9ub3RpdmUKL2FjdW5ldGl4LXd2cy10ZXN0LWZvci1zb21lLWluZXhpc3RlbnQtZmlsZQovYW50aWRpc2VzdGFibGlzaG1lbnRhcmlhbmlzbQovYXBwc2Nhbl9maW5nZXJwcmludC9tYWNfYWRkcmVzcwovYXJhY2huaS0KL2N5YmVyY29wCi9uZXNzdXNfaXNfcHJvYmluZ195b3VfCi9uZXNzdXN0ZXN0Ci9uZXRzcGFya2VyLQovcmZpaW5jLnR4dAovdGhlcmVpc25vd2F5dGhhdC15b3UtY2FuYmV0aGVyZQovdzNhZi9yZW1vdGVmaWxlaW5jbHVkZS5odG1sCmFwcHNjYW5fZmluZ2VycHJpbnQKdzAwdHcwMHQuYXQuSVNDLlNBTlMuREZpbmQKdzAwdHcwMHQuYXQuYmxhY2toYXRzLnJvbWFuaWFuLmFudGktc2VjCg==",
	"scanners-user-agents.data": "IyBWdWxuZXJhYmlsaXR5IHNjYW5uZXJzLCBicnV0ZWZvcmNlIHBhc3N3b3JkIGNyYWNrZXJzIGFuZCBleHBsb2l0YXRpb24gdG9vbHMKCiMgcGFzc3dvcmQgY3JhY2tlcgojIGh0dHA6Ly9zZWN0b29scy5vcmcvdG9vbC9oeWRyYS8KKGh5ZHJhKQojIHZ1bG4gc2Nhbm5lcgojIGh0dHA6Ly92aXJ0dWFsYmx1ZW5lc3MubmV0L25hc2wuaHRtbAoubmFzbAojIHNxbCBpbmplY3Rpb24KIyBodHRwczovL3NvdXJjZWZvcmdlLm5ldC9wcm9qZWN0cy9hYnNpbnRoZS8KYWJzaW50aGUKIyBlbWFpbCBoYXJ2ZXN0aW5nCiMgZGVhZD8gMjAwNAphZHZhbmNlZCBlbWFpbCBleHRyYWN0b3IKIyB2dWxuIHNjYW5uZXIKIyBodHRwOi8vd3d3LmFyYWNobmktc2Nhbm5lci5jb20vCmFyYWNobmkvCmF1dG9nZXRjb250ZW50CiMgbmVzc3VzIGZyb250ZW5kCiMgaHR0cDovL3d3dy5jcm9zc2xleS1uaWxzZW4uY29tL0xpbnV4L0JpbGJvXy1fTmVzc3VzX1dFQi9iaWxib18tX25lc3N1c193ZWIuaHRtbAojIGRlYWQ/IDIwMDMKYmlsYm8KIyBCYWNrdXAgRmlsZSBBcnRpZmFjdHMgQ2hlY2tlcgojIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXplbjE2MC9iZmFjCkJGQUMKIyBwYXNzd29yZCBjcmFja2VyCiMgaHR0cDovL3NlY3Rvb2xzLm9yZy90b29sL2JydXR1cy8KYnJ1dHVzCmJydXR1cy9hZXQKIyBzcWwgaW5qZWN0aW9uCiMgaHR0cHM6Ly93d3cubm90c29zZWN1cmUuY29tL2JzcWxiZi12Mi1ibGluZC1zcWwtaW5qZWN0aW9uLWJydXRlLWZvcmNlci8KYnNxbGJmCiMgdnVsbiBzY2FubmVyCiMgaHR0cDovL2ZyZWVjb2RlLmNvbS9wcm9qZWN0cy9jZ2ljaGsgZGVhZD8gMjAwMQpjZ2ljaGsKIyB2dWxuIHNjYW5uZXIKIyBodHRwczovL3NvdXJjZWZvcmdlLm5ldC9wcm9qZWN0cy9jaXNjby10b3JjaC8KY2lzY28tdG9yY2gKIyB2dWxuIHNjYW5uZXIKIyBodHRwczovL2dpdGh1Yi5jb20vc3Rhc2lub3BvdWxvcy9jb21taXgKY29tbWl4CiMgTVMgRnJvbnRQYWdlIHZ1bG4gc2Nhbm5lcj8KY29yZS1wcm9qZWN0LzEuMAojIHZ1bG4gc2Nhbm5lcj8KY3JpbXNjYW5uZXIvCiMgdnVsbiBzY2FubmVyCmRhdGFjaGEwcwojIGhpZGRlbiBwYWdlIHNjYW5uZXIKIyBodHRwczovL3d3dy5vd2FzcC5vcmcvaW5kZXgucGhwL0NhdGVnb3J5Ok9XQVNQX0RpckJ1c3Rlcl9Qcm9qZWN0CmRpcmJ1c3RlcgojIHZ1bG4gc2Nhbm5lcgojIGh0dHBzOi8vc291cmNlZm9yZ2UubmV0L3Byb2plY3RzL2RvbWlub2h1bnRlci8KZG9taW5vIGh1bnRlcgojIHZ1bG4gc2Nhbm5lciAtIGRpcmVjdG9yeSB0cmF2ZXJzYWwgZnV6emVyCiMgaHR0cHM6Ly9naXRodWIuY29tL3dpcmVnaG91bC9kb3Rkb3Rwd24KZG90ZG90cHduCmVtYWlsIGV4dHJhY3RvcgojIHZ1bG4gc2Nhbm5lcgpmaHNjYW4gY29yZSAxLgpmbG9vZGdhdGUKIyAiRi1TZWN1cmUgUmFkYXIgaXMgYSB0dXJua2V5IHZ1bG5lcmFiaWxpdHkgc2Nhbm5pbmcgYW5kIG1hbmFnZW1lbnQgcGxhdGZvcm0uIgpGLVNlY3VyZSBSYWRhcgpnZXQtbWluaW1hbAojIFNjYW5uZXIgdGhhdCBsb29rcyBmb3IgZXhpc3Rpbmcgb3IgaGlkZGVuIHdlYiBvYmplY3RzCiMgaHR0cHM6Ly9naXRodWIuY29tL09KL2dvYnVzdGVyCmdvYnVzdGVyCiMgdnVsbiBzY2FubmVyCmdvb3RraXQgYXV0by1yb290ZXIgc2Nhbm5lcgpncmFiYmVyCiMgdnVsbiBzY2FubmVyCiMgaHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvZ3JlbmRlbC8KZ3JlbmRlbC1zY2FuCiMgc3FsIGluamVjdGlvbgpoYXZpagojIHZ1bG4gc2Nhbm5lciAtIHBhdGggZGlzY2xvc3VyZSBmaW5kZXIKIyBodHRwOi8vc2VjbGlzdHMub3JnL2Z1bGxkaXNjbG9zdXJlLzIwMTAvU2VwLzM3NQppbnNwYXRoCmludGVybmV0IG5pbmphCiMgdnVsbiBzY2FubmVyCmphYXNjb2lzCiMgdnVsbiBzY2FubmVyCnptZXUKIyAiTW96aWxsYS81LjAgSm9yZ2VlIiwgdnVsbiBzY2FubmVyCkpvcmdlZQojIHBvcnQgc2Nhbm5lcgojIGh0dHBzOi8vZ2l0aHViLmNvbS9yb2JlcnRkYXZpZGdyYWhhbS9tYXNzY2FuCm1hc3NjYW4KIyB2dWxuIHNjYW5uZXIKIyBodHRwOi8vd3d3LnNldmVydXMub3JnL3NhY2hhL21ldGlzLwptZXRpcwojIHZ1bG4gc2Nhbm5lcgptb3JmZXVzIGZ1Y2tpbmcgc2Nhbm5lcgojIHNxbCBpbmplY3Rpb24KIyBodHRwczovL2dpdGh1Yi5jb20vZHRyaXAvbXlzcWxvaXQKbXlzcWxvaXQKIyB2dWxuIHNjYW5uZXIKIyBodHRwOi8vd3d3Lm5zdGFsa2VyLmNvbS8Kbi1zdGVhbHRoCiMgdnVsbiBzY2FubmVyCiMgaHR0cDovL3d3dy50ZW5hYmxlLmNvbS9wcm9kdWN0cy9uZXNzdXMtdnVsbmVyYWJpbGl0eS1zY2FubmVyCm5lc3N1cwojIHZ1bG4gc2Nhbm5lcgojIGh0dHBzOi8vd3d3Lm5ldHNwYXJrZXIuY29tL3dlYi12dWxuZXJhYmlsaXR5LXNjYW5uZXIvCm5ldHNwYXJrZXIKIyB2dWxuIHNjYW5uZXIKIyBodHRwczovL2NpcnQubmV0L05pa3RvMgpuaWt0bwojIHZ1bG4gc2Nhbm5lcgpubWFwIG5zZQpubWFwIHNjcmlwdGluZyBlbmdpbmUKbm1hcC1uc2UKIyB2dWxuIHNjYW5uZXIKIyBodHRwOi8vd3d3Lm5zYXVkaXRvci5jb20vCm5zYXVkaXRvcgojIHZ1bG4gc2Nhbm5lcgojIGh0dHBzOi8vZ2l0aHViLmNvbS9wcm9qZWN0ZGlzY292ZXJ5L251Y2xlaQpOdWNsZWkKIyB2dWxuIHNjYW5uZXIKIyBodHRwOi8vd3d3Lm9wZW52YXMub3JnLwpvcGVudmFzCiMgc3FsIGluamVjdGlvbgojIGh0dHA6Ly93d3cudmVhbHRlbC5jb20vc29mdHdhcmUvbm9zZWMvcGFuZ29saW4vCnBhbmdvbGluCiMgd2ViIHByb3h5ICYgdnVsbiBzY2FubmVyCiMgaHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvcGFyb3MvCnBhcm9zCiMgcGhwbXlhZG1pbiB2dWxuIHNjYW5uZXIKIyBkZWFkIDIwMDU/CnBtYWZpbmQKcHJvZy5jdXN0b21jcmF3bGVyCiMgUVFHYW1lSGFsbCBEb1MvVmlydXMvTWFsd2FyZS9BZHdhcmUKIyBodHRwczovL3R3aXR0ZXIuY29tL2JhZ2Rlci9zdGF0dXMvMTI0NDk4MjU1Njk1ODgyNjQ5Nj9zPTIwClFRR2FtZUhhbGwKIyB2dWxuIHNjYW5uZXIKIyBodHRwczovL3d3dy5xdWFseXMuY29tL3N1aXRlL3dlYi1hcHBsaWNhdGlvbi1zY2FubmluZy8KcXVhbHlzIHdhcwpzLnQuYS5sLmsuZS5yLgpzZWN1cml0eSBzY2FuCiMgdnVsbiBzY2FubmVyCiMgaHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvc3ByaW5nZW53ZXJrLwpzcHJpbmdlbndlcmsKIyBzcWwgaW5qZWN0aW9uCiMgaHR0cDovL3d3dy5zcWxwb3dlcmluamVjdG9yLmNvbS8Kc3FsIHBvd2VyIGluamVjdG9yCiMgc3FsIGluamVjdGlvbgojIGh0dHA6Ly9zcWxtYXAub3JnLwpzcWxtYXAKIyBzcWwgaW5qZWN0aW9uCiMgaHR0cDovL3NxbG5pbmphLnNvdXJjZWZvcmdlLm5ldC8Kc3FsbmluamEKIyBodHRwczovL3d3dy5jeWJlci5uai5nb3YvdGhyZWF0LXByb2ZpbGVzL3Ryb2phbi12YXJpYW50cy9zeXNzY2FuCnN5c3NjYW4KIyBwYXNzd29yZCBjcmFja2VyCiMgaHR0cDovL2Zvb2Z1cy5uZXQvZ29vbnMvam1rL21lZHVzYS9tZWR1c2EuaHRtbAp0ZWggZm9yZXN0IGxvYnN0ZXIKdGhpcyBpcyBhbiBleHBsb2l0CiMgdnVsbiBzY2FubmVyPwp0b2F0YSBkcmFnb3N0ZWEKdG9hdGEgZHJhZ29zdGVhIG1lYSBwZW50cnUgZGlhdm9sYQojIFNRTCBib3QKIyBodHRwOi8vdG9vbHMuY2lzY28uY29tL3NlY3VyaXR5L2NlbnRlci92aWV3SXBzU2lnbmF0dXJlLng/c2lnbmF0dXJlSWQ9MjIxNDImc2lnbmF0dXJlU3ViSWQ9MAp1aWwycG4KIyBiYWRseSBzY3JpcHRlZCBVQXMgKGUuZy4gVXNlci1BZ2VudDogVXNlci1BZ2VudDogZm9vKQp1c2VyLWFnZW50OgojIHZ1bG4gc2Nhbm5yCiMgaHR0cHM6Ly9zdWJncmFwaC5jb20vdmVnYS8KdmVnYS8KIyB2dWxuIHNjYW5uZXIKIyBkZWFkPwp2b2lkZXllCiMgdnVsbiBzY2FubmVyCiMgaHR0cDovL3czYWYub3JnLwp3M2FmLnNmLm5ldAp3M2FmLnNvdXJjZWZvcmdlLm5ldAp3M2FmLm9yZwojIHNpdGUgc2Nhbm5lciAobGVnYWN5KQojIGh0dHA6Ly93d3cucm9ib3RzdHh0Lm9yZy9kYi93ZWJiYW5kaXQuaHRtbAp3ZWJiYW5kaXQKIyB2dWxuIHNjYW5uZXIKIyBodHRwOi8vd3d3OC5ocC5jb20vdXMvZW4vc29mdHdhcmUtc29sdXRpb25zL3dlYmluc3BlY3QtZHluYW1pYy1hbmFseXNpcy1kYXN0Lwp3ZWJpbnNwZWN0CiMgc2l0ZSBzY2FubmVyCiMgaHR0cDovL3d3dy5zY3J0LmNoL2VuL2F0dGFjay9kb3dubG9hZHMvd2Vic2hhZwp3ZWJzaGFnCiMgdnVsbiBzY2FubmVyCiMgZGVhZD8Kd2VidHJlbmRzIHNlY3VyaXR5IGFuYWx5emVyCiMgdnVsbiBzY2FubmVyCiMgaHR0cHM6Ly9naXRodWIuY29tL2hodWNuL3dlYnZ1bG5zY2FuCndlYnZ1bG5zY2FuCiMgdnVsbiBzY2FubmVyCiMgaHR0cHM6Ly9naXRodWIuY29tL3htZW5kZXovd2Z1enoKV2Z1enoKIyB2dWxuIHNjYW5uZXIKIyBodHRwczovL2dpdGh1Yi5jb20vZmZ1Zi9mZnVmCkZ1enogRmFzdGVyIFUgRm9vbAojIHdlYiB0ZWNobm9sb2d5IHNjYW5uZXIKIyBodHRwczovL3d3dy5tb3JuaW5nc3RhcnNlY3VyaXR5LmNvbS9yZXNlYXJjaC93aGF0d2ViCndoYXR3ZWIKIyB2dWxuIHNjYW5uZXIKd2hjYy8KIyBleHBsb2l0IHBvYwp3b3JkcHJlc3MgaGFzaCBncmFiYmVyCiMgZXhwbG9pdAp4bWxycGMgZXhwbG9pdAojIHdvcmRwcmVzcyB2dWxuIHNjYW5uZXIKIyBodHRwczovL3dwc2Nhbi5vcmcvCldQU2NhbgojIHZ1bG4gc2Nhbm5lcgojIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXplbjE2MC9zdHJ1dHMtcHduCnN0cnV0cy1wd24KIyBEZXRlY3RpZnkgd2Vic2l0ZSB2dWxuZXJhYmlsaXR5IHNjYW5uZXIKIyBodHRwczovL2RldGVjdGlmeS5jb20vCkRldGVjdGlmeQojIFpHcmFiIHNjYW5uZXIgKE1vemlsbGEvNS4wIHpncmFiLzAueCkKIyBodHRwczovL3ptYXAuaW8KemdyYWIK",
	"scripting-user-agents.data": "IyBHZW5lcmljIEhUVFAgY2xpZW50cyAocG9wdWxhciBsaWJyYXJpZXMpCgojIGh0dHAgbGlicmFyeQojIGh0dHA6Ly9zZWFyY2guY3Bhbi5vcmcvfm9wZXJhL0hUVFAtREFWL0RBVi5wbQpkYXYucG0vdgojIGh0dHAgbGlicmFyeQojIGh0dHA6Ly9zZWFyY2guY3Bhbi5vcmcvZGlzdC9saWJ3d3ctcGVybC9saWIvTFdQLnBtCmxpYnd3dy1wZXJsCiMgZ2VuZXJpYwptb3ppbGxhLzQuMCAoY29tcGF0aWJsZSkKbW96aWxsYS80LjAgKGNvbXBhdGlibGU7IG1zaWUgNi4wOyB3aW4zMikKbW96aWxsYS81LjAgc2YvCm1vemlsbGEvNS4wIHNmLy8KIyBodHRwIGxpYnJhcnkKIyBodHRwczovL3B5cGkucHl0aG9uLm9yZy9weXBpL2h0dHBsaWIyCnB5dGhvbi1odHRwbGliMgojIGh0dHAgbGlicmFyeQojIGh0dHA6Ly9kb2NzLnB5dGhvbi1yZXF1ZXN0cy5vcmcvZW4vbWFzdGVyLwpweXRob24tcmVxdWVzdHMKIyBodHRwIGxpYnJhcnkKIyBodHRwczovL2RvY3MucHl0aG9uLm9yZy8yL2xpYnJhcnkvdXJsbGliLmh0bWwKUHl0aG9uLXVybGxpYgojIGh0dHAgbGlicmFyeQojIGh0dHBzOi8vZ2l0aHViLmNvbS90eXBob2V1cy90eXBob2V1cwp0eXBob2V1cwojIGh0dHAgbGlicmFyeQojIGh0dHBzOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvd2luZG93cy9kZXNrdG9wL2FhMzgyOTI1JTI4dj12cy44NSUyOS5hc3B4Cndpbmh0dHAud2luaHR0cHJlcXVlc3QK",
	"sql-errors.data": "TXlTcWxDbGllbnQuClNlcnZlciBtZXNzYWdlClNRTCBlcnJvcgpPcmFjbGUgZXJyb3IKSkVUIERhdGFiYXNlIEVuZ2luZQpQcm9jZWR1cmUgb3IgZnVuY3Rpb24gClNRTGl0ZS5FeGNlcHRpb24KW0lCTV1bQ0xJIERyaXZlcl1bREIyLzYwMDBdCnRoZSB1c2VkIHNlbGVjdCBzdGF0ZW1lbnRzIGhhdmUgZGlmZmVyZW50IG51bWJlciBvZiBjb2x1bW5zCm9yZy5wb3N0Z3Jlc3FsLnV0aWwuUFNRTEV4Y2VwdGlvbgpBY2Nlc3MgRGF0YWJhc2UgRW5naW5lCkluY29ycmVjdCBzeW50YXggbmVhcgpTeW50YXggZXJyb3IgaW4gc3RyaW5nIGluIHF1ZXJ5IGV4cHJlc3Npb24KU1FMaXRlRXhjZXB0aW9uCicgZG9lc24ndCBleGlzdApDTEkgRHJpdmVyCm9uIE15U1FMIHJlc3VsdCBpbmRleApzeWJhc2UKY29tLmluZm9ybWl4LmpkYmMKW015U1FMXVtPREJDCkVycm9yCmhhcyBvY2N1cnJlZCBpbiB0aGUgdmljaW5pdHkgb2Y6ClNpbnRheGlzIGluY29ycmVjdGEgY2VyY2EgZGUKTXlTUUwgc2VydmVyIHZlcnNpb24gZm9yIHRoZSByaWdodCBzeW50YXggdG8gdXNlCmNvbS5teXNxbC5qZGJjLmV4Y2VwdGlvbnMKWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4IG5lYXIKWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OwpBbiBpbGxlZ2FsIGNoYXJhY3RlciBoYXMgYmVlbiBmb3VuZCBpbiB0aGUgc3RhdGVtZW50CnBnX3F1ZXJ5KCkgWzoKc3VwcGxpZWQgYXJndW1lbnQgaXMgbm90IGEgdmFsaWQgTXlTUUwKbXNzcWxfcXVlcnkoKQpteXNxbF9mZXRjaF9hcnJheSgpCkV4Y2VwdGlvbgpqYXZhLnNxbC5TUUxFeGNlcHRpb24KQ29sdW1uIGNvdW50IGRvZXNuJ3QgbWF0Y2ggdmFsdWUgY291bnQgYXQgcm93ClN5YmFzZSBtZXNzYWdlCiBTUUwgU2VydmVyClBvc3RncmVTUUwgcXVlcnkgZmFpbGVkOgpEeW5hbWljIFNRTCBFcnJvcgpTeXN0ZW0uRGF0YS5TUUxpdGUuU1FMaXRlRXhjZXB0aW9uClNRTGl0ZS9KREJDRHJpdmVyClVuY2xvc2VkIHF1b3RhdGlvbiBtYXJrIGJlZm9yZSB0aGUgY2hhcmFjdGVyIHN0cmluZwpTeXN0ZW0uRGF0YS5TcWxDbGllbnQuClVuY2xvc2VkIHF1b3RhdGlvbiBtYXJrIGFmdGVyIHRoZSBjaGFyYWN0ZXIgc3RyaW5nClN5c3RlbS5EYXRhLk9sZURiLk9sZURiRXhjZXB0aW9uCltETV9RVUVSWV9FX1NZTlRBWF0KW1NxbEV4Y2VwdGlvbgpVbmV4cGVjdGVkIGVuZCBvZiBjb21tYW5kIGluIHN0YXRlbWVudAp2YWxpZCBQb3N0Z3JlU1FMIHJlc3VsdApwZ19leGVjKCkgWzoKU1FMIFNlcnZlcgpbU1FMSVRFX0VSUk9SXQpNaWNyb3NvZnQgT0xFIERCIFByb3ZpZGVyIGZvciBPREJDIERyaXZlcnMKUG9zdGdyZVNRTApvcmcuaHNxbGRiLmpkYmMKQURPREIuRmllbGQgKDB4ODAwQTBCQ0QpClNRTCBzeW50YXgKRXhjZXB0aW9uIApTeXN0ZW0uRGF0YS5TcWxDbGllbnQuU3FsRXhjZXB0aW9uCkRhdGEgdHlwZSBtaXNtYXRjaCBpbiBjcml0ZXJpYSBleHByZXNzaW9uLgpEcml2ZXIKREIyIFNRTCBlcnJvcgpTeWJhc2UgbWVzc2FnZToKT1JBLQpbTWljcm9zb2Z0XVtPREJDIFNRTCBTZXJ2ZXIgRHJpdmVyXQonODAwNDBlMTQnCk1pY3Jvc29mdCBPTEUgREIgUHJvdmlkZXIgZm9yIFNRTCBTZXJ2ZXIKIGluIHF1ZXJ5IGV4cHJlc3Npb24KTnBnc3FsLgp2YWxpZCBNeVNRTCByZXN1bHQKc3VwcGxpZWQgYXJndW1lbnQgaXMgbm90IGEgdmFsaWQgUG9zdGdyZVNRTCByZXN1bHQKZGIyXwpJbmdyZXMgU1FMU1RBVEUKQ29sdW1uIGNvdW50IGRvZXNuJ3QgbWF0Y2gKV2FybmluZwpbTWljcm9zb2Z0XVtPREJDIE1pY3Jvc29mdCBBY2Nlc3MgRHJpdmVyXQpbTWFjcm9tZWRpYV1bU1FMU2VydmVyIEpEQkMgRHJpdmVyXQo8Yj5XYXJuaW5nPC9iPjogaWJhc2VfClJvYWRob3VzZS5DbXMuCkRCMiBTUUwgZXJyb3I6Cg==",
	"unicode.mapping": "",
	"unix-shell.data": "JHtDRFBBVEh9CiR7RElSU1RBQ0t9CiR7SE9NRX0KJHtIT1NUTkFNRX0KJHtJRlN9CiR7T0xEUFdEfQoke09TVFlQRX0KJHtQQVRIfQoke1BXRH0KJENEUEFUSAokRElSU1RBQ0sKJEhPTUUKJEhPU1ROQU1FCiRJRlMKJE9MRFBXRAokT1NUWVBFCiRQQVRICiRQV0QKYmluL2Jhc2gKYmluL2NhdApiaW4vY3NoCmJpbi9kYXNoCmJpbi9kdQpiaW4vZWNobwpiaW4vZ3JlcApiaW4vbGVzcwpiaW4vbHMKYmluL21rbm9kCmJpbi9tb3JlCmJpbi9uYwpiaW4vcHMKYmluL3JiYXNoCmJpbi9zaApiaW4vc2xlZXAKYmluL3N1CmJpbi90Y3NoCmJpbi91bmFtZQpkZXYvZmQvCmRldi9udWxsCmRldi9zdGRlcnIKZGV2L3N0ZGluCmRldi9zdGRvdXQKZGV2L3RjcC8KZGV2L3VkcC8KZGV2L3plcm8KZXRjL2dyb3VwCmV0Yy9tYXN0ZXIucGFzc3dkCmV0Yy9wYXNzd2QKZXRjL3B3ZC5kYgpldGMvc2hhZG93CmV0Yy9zaGVsbHMKZXRjL3Nwd2QuZGIKcHJvYy9zZWxmLwp1c3IvYmluL2F3awp1c3IvYmluL2Jhc2U2NAp1c3IvYmluL2NhdAp1c3IvYmluL2NjCnVzci9iaW4vY2xhbmcKdXNyL2Jpbi9jbGFuZysrCnVzci9iaW4vY3VybAp1c3IvYmluL2RpZmYKdXNyL2Jpbi9lbnYKdXNyL2Jpbi9mZXRjaAp1c3IvYmluL2ZpbGUKdXNyL2Jpbi9maW5kCnVzci9iaW4vZnRwCnVzci9iaW4vZ2F3awp1c3IvYmluL2djYwp1c3IvYmluL2hlYWQKdXNyL2Jpbi9oZXhkdW1wCnVzci9iaW4vaWQKdXNyL2Jpbi9sZXNzCnVzci9iaW4vbG4KdXNyL2Jpbi9ta2ZpZm8KdXNyL2Jpbi9tb3JlCnVzci9iaW4vbmMKdXNyL2Jpbi9uY2F0CnVzci9iaW4vbmljZQp1c3IvYmluL25tYXAKdXNyL2Jpbi9wZXJsCnVzci9iaW4vcGhwCnVzci9iaW4vcGhwNQp1c3IvYmluL3BocDcKdXNyL2Jpbi9waHAtY2dpCnVzci9iaW4vcHJpbnRmCnVzci9iaW4vcHNlZAp1c3IvYmluL3B5dGhvbgp1c3IvYmluL3B5dGhvbjIKdXNyL2Jpbi9weXRob24zCnVzci9iaW4vcnVieQp1c3IvYmluL3NlZAp1c3IvYmluL3NvY2F0CnVzci9iaW4vdGFpbAp1c3IvYmluL3RlZQp1c3IvYmluL3RlbG5ldAp1c3IvYmluL3RvcAp1c3IvYmluL3VuYW1lCnVzci9iaW4vd2dldAp1c3IvYmluL3dobwp1c3IvYmluL3dob2FtaQp1c3IvYmluL3hhcmdzCnVzci9iaW4veHhkCnVzci9iaW4veWVzCnVzci9sb2NhbC9iaW4vYmFzaAp1c3IvbG9jYWwvYmluL2N1cmwKdXNyL2xvY2FsL2Jpbi9uY2F0CnVzci9sb2NhbC9iaW4vbm1hcAp1c3IvbG9jYWwvYmluL3BlcmwKdXNyL2xvY2FsL2Jpbi9waHAKdXNyL2xvY2FsL2Jpbi9weXRob24KdXNyL2xvY2FsL2Jpbi9weXRob24yCnVzci9sb2NhbC9iaW4vcHl0aG9uMwp1c3IvbG9jYWwvYmluL3JiYXNoCnVzci9sb2NhbC9iaW4vcnVieQp1c3IvbG9jYWwvYmluL3dnZXQK",
	"windows-powershell-commands.data": "cG93ZXJzaGVsbC5leGUKQWRkLUJpdHNGaWxlCkFkZC1Db21wdXRlcgpBZGQtQ29udGVudApBZGQtSGlzdG9yeQpBZGQtTWVtYmVyCkFkZC1QU1NuYXBpbgpBZGQtVHlwZQpDaGVja3BvaW50LUNvbXB1dGVyCkNsZWFyLUNvbnRlbnQKQ2xlYXItRXZlbnRMb2cKQ2xlYXItSGlzdG9yeQpDbGVhci1JdGVtCkNsZWFyLUl0ZW1Qcm9wZXJ0eQpDbGVhci1WYXJpYWJsZQpDb21wYXJlLU9iamVjdApDb21wbGV0ZS1CaXRzVHJhbnNmZXIKQ29tcGxldGUtVHJhbnNhY3Rpb24KQ29ubmVjdC1XU01hbgpDb252ZXJ0RnJvbS1DU1YKQ29udmVydEZyb20tU2VjdXJlU3RyaW5nCkNvbnZlcnRGcm9tLVN0cmluZ0RhdGEKQ29udmVydC1QYXRoCkNvbnZlcnRUby1DU1YKQ29udmVydFRvLUh0bWwKQ29udmVydFRvLVNlY3VyZVN0cmluZwpDb252ZXJ0VG8tWE1MCkNvcHktSXRlbQpDb3B5LUl0ZW1Qcm9wZXJ0eQpEZWJ1Zy1Qcm9jZXNzCkRpc2FibGUtQ29tcHV0ZXJSZXN0b3JlCkRpc2FibGUtUFNCcmVha3BvaW50CkRpc2FibGUtUFNTZXNzaW9uQ29uZmlndXJhdGlvbgpEaXNhYmxlLVdTTWFuQ3JlZFNTUApEaXNjb25uZWN0LVdTTWFuCkVuYWJsZS1Db21wdXRlclJlc3RvcmUKRW5hYmxlLVBTQnJlYWtwb2ludApFbmFibGUtUFNSZW1vdGluZwpFbmFibGUtUFNTZXNzaW9uQ29uZmlndXJhdGlvbgpFbmFibGUtV1NNYW5DcmVkU1NQCkVudGVyLVBTU2Vzc2lvbgpFeGl0LVBTU2Vzc2lvbgpFeHBvcnQtQWxpYXMKRXhwb3J0LUNsaXhtbApFeHBvcnQtQ29uc29sZQpFeHBvcnQtQ291bnRlcgpFeHBvcnQtQ1NWCkV4cG9ydC1Gb3JtYXREYXRhCkV4cG9ydC1Nb2R1bGVNZW1iZXIKRXhwb3J0LVBTU2Vzc2lvbgpGb3JFYWNoLU9iamVjdApGb3JtYXQtQ3VzdG9tCkZvcm1hdC1MaXN0CkZvcm1hdC1UYWJsZQpGb3JtYXQtV2lkZQpHZXQtQWNsCkdldC1BbGlhcwpHZXQtQXBwTG9ja2VyRmlsZUluZm9ybWF0aW9uCkdldC1BcHBMb2NrZXJQb2xpY3kKR2V0LUF1dGhlbnRpY29kZVNpZ25hdHVyZQpHZXQtQml0c1RyYW5zZmVyCkdldC1DaGlsZEl0ZW0KR2V0LUNvbW1hbmQKR2V0LUNvbXB1dGVyUmVzdG9yZVBvaW50CkdldC1Db250ZW50CkdldC1Db3VudGVyCkdldC1DcmVkZW50aWFsCkdldC1DdWx0dXJlCkdldC1FdmVudApHZXQtRXZlbnRMb2cKR2V0LUV2ZW50U3Vic2NyaWJlcgpHZXQtRXhlY3V0aW9uUG9saWN5CkdldC1Gb3JtYXREYXRhCkdldC1IaXN0b3J5CkdldC1Ib3N0CkdldC1Ib3RGaXgKR2V0LUl0ZW0KR2V0LUl0ZW1Qcm9wZXJ0eQpHZXQtSm9iCkdldC1Mb2NhdGlvbgpHZXQtTWVtYmVyCkdldC1Nb2R1bGUKR2V0LVBmeENlcnRpZmljYXRlCkdldC1Qcm9jZXNzCkdldC1QU0JyZWFrcG9pbnQKR2V0LVBTQ2FsbFN0YWNrCkdldC1QU0RyaXZlCkdldC1QU1Byb3ZpZGVyCkdldC1QU1Nlc3Npb24KR2V0LVBTU2Vzc2lvbkNvbmZpZ3VyYXRpb24KR2V0LVBTU25hcGluCkdldC1SYW5kb20KR2V0LVNlcnZpY2UKR2V0LVRyYWNlU291cmNlCkdldC1UcmFuc2FjdGlvbgpHZXQtVHJvdWJsZXNob290aW5nUGFjawpHZXQtVUlDdWx0dXJlCkdldC1VbmlxdWUKR2V0LVZhcmlhYmxlCkdldC1XaW5FdmVudApHZXQtV21pT2JqZWN0CkdldC1XU01hbkNyZWRTU1AKR2V0LVdTTWFuSW5zdGFuY2UKR3JvdXAtT2JqZWN0CkltcG9ydC1BbGlhcwpJbXBvcnQtQ2xpeG1sCkltcG9ydC1Db3VudGVyCkltcG9ydC1DU1YKSW1wb3J0LUxvY2FsaXplZERhdGEKSW1wb3J0LU1vZHVsZQpJbXBvcnQtUFNTZXNzaW9uCkludm9rZS1Db21tYW5kCkludm9rZS1FeHByZXNzaW9uCkludm9rZS1IaXN0b3J5Ckludm9rZS1JdGVtCkludm9rZS1Ucm91Ymxlc2hvb3RpbmdQYWNrCkludm9rZS1XbWlNZXRob2QKSW52b2tlLVdTTWFuQWN0aW9uCkpvaW4tUGF0aApMaW1pdC1FdmVudExvZwpNZWFzdXJlLUNvbW1hbmQKTWVhc3VyZS1PYmplY3QKTW92ZS1JdGVtCk1vdmUtSXRlbVByb3BlcnR5Ck5ldy1BbGlhcwpOZXctQXBwTG9ja2VyUG9saWN5Ck5ldy1FdmVudApOZXctRXZlbnRMb2cKTmV3LUl0ZW0KTmV3LUl0ZW1Qcm9wZXJ0eQpOZXctTW9kdWxlCk5ldy1Nb2R1bGVNYW5pZmVzdApOZXctT2JqZWN0Ck5ldy1QU0RyaXZlCk5ldy1QU1Nlc3Npb24KTmV3LVBTU2Vzc2lvbk9wdGlvbgpOZXctU2VydmljZQpOZXctVGltZVNwYW4KTmV3LVZhcmlhYmxlCk5ldy1XZWJTZXJ2aWNlUHJveHkKTmV3LVdTTWFuSW5zdGFuY2UKTmV3LVdTTWFuU2Vzc2lvbk9wdGlvbgpPdXQtRGVmYXVsdApPdXQtRmlsZQpPdXQtR3JpZFZpZXcKT3V0LUhvc3QKT3V0LU51bGwKT3V0LVByaW50ZXIKT3V0LVN0cmluZwpQb3AtTG9jYXRpb24KUHVzaC1Mb2NhdGlvbgpSZWFkLUhvc3QKUmVjZWl2ZS1Kb2IKUmVnaXN0ZXItRW5naW5lRXZlbnQKUmVnaXN0ZXItT2JqZWN0RXZlbnQKUmVnaXN0ZXItUFNTZXNzaW9uQ29uZmlndXJhdGlvbgpSZWdpc3Rlci1XbWlFdmVudApSZW1vdmUtQml0c1RyYW5zZmVyClJlbW92ZS1Db21wdXRlcgpSZW1vdmUtRXZlbnQKUmVtb3ZlLUV2ZW50TG9nClJlbW92ZS1JdGVtClJlbW92ZS1JdGVtUHJvcGVydHkKUmVtb3ZlLUpvYgpSZW1vdmUtTW9kdWxlClJlbW92ZS1QU0JyZWFrcG9pbnQKUmVtb3ZlLVBTRHJpdmUKUmVtb3ZlLVBTU2Vzc2lvbgpSZW1vdmUtUFNTbmFwaW4KUmVtb3ZlLVZhcmlhYmxlClJlbW92ZS1XbWlPYmplY3QKUmVtb3ZlLVdTTWFuSW5zdGFuY2UKUmVuYW1lLUl0ZW0KUmVuYW1lLUl0ZW1Qcm9wZXJ0eQpSZXNldC1Db21wdXRlck1hY2hpbmVQYXNzd29yZApSZXNvbHZlLVBhdGgKUmVzdGFydC1Db21wdXRlcgpSZXN0YXJ0LVNlcnZpY2UKUmVzdG9yZS1Db21wdXRlcgpSZXN1bWUtQml0c1RyYW5zZmVyClJlc3VtZS1TZXJ2aWNlClNlbGVjdC1PYmplY3QKU2VsZWN0LVN0cmluZwpTZWxlY3QtWE1MClNlbmQtTWFpbE1lc3NhZ2UKU2V0LUFjbApTZXQtQWxpYXMKU2V0LUFwcExvY2tlclBvbGljeQpTZXQtQXV0aGVudGljb2RlU2lnbmF0dXJlClNldC1CaXRzVHJhbnNmZXIKU2V0LUNvbnRlbnQKU2V0LURhdGUKU2V0LUV4ZWN1dGlvblBvbGljeQpTZXQtSXRlbQpTZXQtSXRlbVByb3BlcnR5ClNldC1Mb2NhdGlvbgpTZXQtUFNCcmVha3BvaW50ClNldC1QU0RlYnVnClNldC1QU1Nlc3Npb25Db25maWd1cmF0aW9uClNldC1TZXJ2aWNlClNldC1TdHJpY3RNb2RlClNldC1UcmFjZVNvdXJjZQpTZXQtVmFyaWFibGUKU2V0LVdtaUluc3RhbmNlClNldC1XU01hbkluc3RhbmNlClNldC1XU01hblF1aWNrQ29uZmlnClNob3ctRXZlbnRMb2cKU29ydC1PYmplY3QKU3BsaXQtUGF0aApTdGFydC1CaXRzVHJhbnNmZXIKU3RhcnQtSm9iClN0YXJ0LVByb2Nlc3MKU3RhcnQtU2VydmljZQpTdGFydC1TbGVlcApTdGFydC1UcmFuc2FjdGlvbgpTdGFydC1UcmFuc2NyaXB0ClN0b3AtQ29tcHV0ZXIKU3RvcC1Kb2IKU3RvcC1Qcm9jZXNzClN0b3AtU2VydmljZQpTdG9wLVRyYW5zY3JpcHQKU3VzcGVuZC1CaXRzVHJhbnNmZXIKU3VzcGVuZC1TZXJ2aWNlClRlZS1PYmplY3QKVGVzdC1BcHBMb2NrZXJQb2xpY3kKVGVzdC1Db21wdXRlclNlY3VyZUNoYW5uZWwKVGVzdC1Db25uZWN0aW9uClRlc3QtTW9kdWxlTWFuaWZlc3QKVGVzdC1QYXRoClRlc3QtV1NNYW4KVHJhY2UtQ29tbWFuZApVbmRvLVRyYW5zYWN0aW9uClVucmVnaXN0ZXItRXZlbnQKVW5yZWdpc3Rlci1QU1Nlc3Npb25Db25maWd1cmF0aW9uClVwZGF0ZS1Gb3JtYXREYXRhClVwZGF0ZS1MaXN0ClVwZGF0ZS1UeXBlRGF0YQpVc2UtVHJhbnNhY3Rpb24KV2FpdC1FdmVudApXYWl0LUpvYgpXYWl0LVByb2Nlc3MKV2hlcmUtT2JqZWN0CldyaXRlLURlYnVnCldyaXRlLUVycm9yCldyaXRlLUV2ZW50TG9nCldyaXRlLUhvc3QKV3JpdGUtT3V0cHV0CldyaXRlLVByb2dyZXNzCldyaXRlLVZlcmJvc2UKV3JpdGUtV2FybmluZwotRW5jb2RlZENvbW1hbmQKLUV4ZWN1dGlvblBvbGljeQotUFNDb25zb2xlRmlsZQo=",
}

